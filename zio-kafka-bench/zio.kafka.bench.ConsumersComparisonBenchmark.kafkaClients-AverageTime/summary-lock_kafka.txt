--- Execution profile ---
Total samples       : 183

--- 16571606 ns (39.06%), 46 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 5] java.util.concurrent.LinkedBlockingQueue.take
  [ 6] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 12981587 ns (30.60%), 65 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 6] java.util.concurrent.locks.ReentrantLock.lock
  [ 7] java.util.concurrent.ThreadPoolExecutor.processWorkerExit
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 1869963 ns (4.41%), 2 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 6] java.util.concurrent.locks.ReentrantLock.lock
  [ 7] java.util.concurrent.ThreadPoolExecutor.shutdown
  [ 8] org.apache.zookeeper.server.WorkerService.stop
  [ 9] org.apache.zookeeper.server.NIOServerCnxnFactory.stop
  [10] org.apache.zookeeper.server.NIOServerCnxnFactory$SelectorThread.run

--- 1603279 ns (3.78%), 6 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 6] java.util.concurrent.locks.ReentrantLock.lock
  [ 7] java.util.concurrent.ThreadPoolExecutor.interruptIdleWorkers
  [ 8] java.util.concurrent.ThreadPoolExecutor.tryTerminate
  [ 9] java.util.concurrent.ThreadPoolExecutor.processWorkerExit
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 1597186 ns (3.76%), 11 samples
  [ 0] org.apache.kafka.common.metrics.Metrics
  [ 1] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 2] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [ 3] org.apache.kafka.common.utils.Utils.closeQuietly
  [ 4] org.apache.kafka.common.network.Selector.close
  [ 5] kafka.network.Processor.closeAll
  [ 6] kafka.network.Processor.$anonfun$run$8
  [ 7] kafka.network.Processor$$Lambda$2940.0x0000000801395a48.apply$mcV$sp
  [ 8] kafka.utils.CoreUtils$.swallow
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 1349407 ns (3.18%), 4 samples
  [ 0] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator
  [ 1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator.timeToNextHeartbeat
  [ 2] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.timeToNextPoll
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 4] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 5] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 6] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [ 7] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2489.0x0000000801304880.apply$mcV$sp
  [ 8] scala.runtime.java8.JFunction0$mcV$sp.apply
  [ 9] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [10] zio.ZIOCompanionVersionSpecific$$Lambda$375.0x0000000800de0000.apply
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.evaluateEffect
  [16] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [17] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [18] zio.internal.FiberRuntime.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 926682 ns (2.18%), 4 samples
  [ 0] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator
  [ 1] org.apache.kafka.clients.consumer.internals.AbstractCoordinator.pollHeartbeat
  [ 2] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded
  [ 4] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 5] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 6] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [ 7] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2489.0x0000000801304880.apply$mcV$sp
  [ 8] scala.runtime.java8.JFunction0$mcV$sp.apply
  [ 9] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [10] zio.ZIOCompanionVersionSpecific$$Lambda$375.0x0000000800de0000.apply
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.evaluateEffect
  [16] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [17] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [18] zio.internal.FiberRuntime.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 904273 ns (2.13%), 2 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 5] java.util.concurrent.LinkedBlockingQueue.take
  [ 6] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 896160 ns (2.11%), 6 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 603911 ns (1.42%), 2 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 6] java.util.concurrent.locks.ReentrantLock.lock
  [ 7] java.util.concurrent.ThreadPoolExecutor.processWorkerExit
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 540011 ns (1.27%), 1 sample
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 6] java.util.concurrent.locks.ReentrantLock.lock
  [ 7] java.util.concurrent.ThreadPoolExecutor.shutdown
  [ 8] org.apache.zookeeper.server.WorkerService.stop
  [ 9] org.apache.zookeeper.server.NIOServerCnxnFactory.stop
  [10] org.apache.zookeeper.server.NIOServerCnxnFactory$AcceptThread.run

--- 471635 ns (1.11%), 4 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$FairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 6] java.util.concurrent.locks.ReentrantLock.lock
  [ 7] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [ 8] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup
  [ 9] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run

--- 465355 ns (1.10%), 6 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$FairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 6] java.util.concurrent.locks.ReentrantLock.lock
  [ 7] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.isUnavailable
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.prepareFetchRequests
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher.sendFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2489.0x0000000801304880.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$375.0x0000000800de0000.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 336724 ns (0.79%), 2 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 6] java.util.concurrent.locks.ReentrantLock.lock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.size
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.isEmpty
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 332645 ns (0.78%), 2 samples
  [ 0] org.apache.kafka.common.metrics.Metrics
  [ 1] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 2] org.apache.kafka.common.metrics.internals.IntGaugeSuite.performPendingMetricsOperations
  [ 3] org.apache.kafka.common.metrics.internals.IntGaugeSuite.close
  [ 4] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [ 5] org.apache.kafka.common.utils.Utils.closeQuietly
  [ 6] org.apache.kafka.common.network.Selector.close
  [ 7] kafka.network.Processor.closeAll
  [ 8] kafka.network.Processor.$anonfun$run$8
  [ 9] kafka.network.Processor$$Lambda$2940.0x0000000801395a48.apply$mcV$sp
  [10] kafka.utils.CoreUtils$.swallow
  [11] kafka.network.Processor.run
  [12] java.lang.Thread.run

--- 216962 ns (0.51%), 1 sample
  [ 0] org.apache.kafka.common.metrics.Metrics
  [ 1] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 2] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [ 3] org.apache.kafka.common.utils.Utils.closeQuietly
  [ 4] org.apache.kafka.common.network.Selector.close
  [ 5] kafka.network.Processor.closeAll
  [ 6] kafka.network.Processor.$anonfun$run$8
  [ 7] kafka.network.Processor$$Lambda$2940.0x0000000801395a48.apply$mcV$sp
  [ 8] kafka.utils.CoreUtils$.swallow
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 200327 ns (0.47%), 3 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$FairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 6] java.util.concurrent.locks.ReentrantLock.lock
  [ 7] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.isUnavailable
  [ 8] org.apache.kafka.clients.consumer.internals.AbstractCoordinator.checkAndGetCoordinator
  [ 9] org.apache.kafka.clients.consumer.internals.AbstractCoordinator.coordinatorUnknown
  [10] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run

--- 198603 ns (0.47%), 2 samples
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 6] java.util.concurrent.locks.ReentrantLock.lock
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.remove
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.onShutdown
  [ 9] java.util.concurrent.ThreadPoolExecutor.shutdown
  [10] java.util.concurrent.ScheduledThreadPoolExecutor.shutdown
  [11] kafka.utils.KafkaScheduler.shutdown
  [12] kafka.server.KafkaServer.$anonfun$shutdown$7
  [13] kafka.server.KafkaServer$$Lambda$2977.0x000000080139cfc0.apply$mcV$sp
  [14] kafka.utils.CoreUtils$.swallow
  [15] kafka.server.KafkaServer.shutdown
  [16] io.github.embeddedkafka.EmbeddedK.stop
  [17] zio.kafka.embedded.Kafka$EmbeddedKafkaService.$anonfun$stop$1
  [18] zio.kafka.embedded.Kafka$EmbeddedKafkaService$$Lambda$2905.0x000000080138e0c8.apply$mcV$sp
  [19] scala.runtime.java8.JFunction0$mcV$sp.apply
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.evaluateEffect
  [61] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [62] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [63] zio.internal.FiberRuntime.run
  [64] java.util.concurrent.ThreadPoolExecutor.runWorker
  [65] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [66] java.lang.Thread.run

--- 178058 ns (0.42%), 3 samples
  [ 0] org.apache.kafka.common.metrics.Metrics
  [ 1] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 2] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [ 4] org.apache.kafka.common.utils.Utils.closeQuietly
  [ 5] org.apache.kafka.common.network.Selector.close
  [ 6] kafka.network.Processor.closeAll
  [ 7] kafka.network.Processor.$anonfun$run$8
  [ 8] kafka.network.Processor$$Lambda$2940.0x0000000801395a48.apply$mcV$sp
  [ 9] kafka.utils.CoreUtils$.swallow
  [10] kafka.network.Processor.run
  [11] java.lang.Thread.run

--- 62430 ns (0.15%), 2 samples
  [ 0] scala.collection.mutable.HashMap
  [ 1] kafka.network.ConnectionQuotas.dec
  [ 2] kafka.network.Processor.$anonfun$close$2
  [ 3] kafka.network.Processor.$anonfun$close$2$adapted
  [ 4] kafka.network.Processor$$Lambda$2950.0x00000008013977d0.apply
  [ 5] scala.Option.foreach
  [ 6] kafka.network.Processor.close
  [ 7] kafka.network.Processor.$anonfun$closeAll$1
  [ 8] kafka.network.Processor$$Lambda$2945.0x0000000801396990.accept
  [ 9] java.util.ArrayList.forEach
  [10] kafka.network.Processor.closeAll
  [11] kafka.network.Processor.$anonfun$run$8
  [12] kafka.network.Processor$$Lambda$2940.0x0000000801395a48.apply$mcV$sp
  [13] kafka.utils.CoreUtils$.swallow
  [14] kafka.network.Processor.run
  [15] java.lang.Thread.run

--- 39746 ns (0.09%), 1 sample
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 7] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 38501 ns (0.09%), 1 sample
  [ 0] java.lang.ThreadGroup
  [ 1] java.lang.ThreadGroup.threadTerminated
  [ 2] java.lang.Thread.exit

--- 19629 ns (0.05%), 2 samples
  [ 0] org.apache.kafka.clients.consumer.internals.Fetcher
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.sendFetches
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 4] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [ 5] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2489.0x0000000801304880.apply$mcV$sp
  [ 6] scala.runtime.java8.JFunction0$mcV$sp.apply
  [ 7] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [ 8] zio.ZIOCompanionVersionSpecific$$Lambda$375.0x0000000800de0000.apply
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.evaluateEffect
  [14] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [15] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [16] zio.internal.FiberRuntime.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 9680 ns (0.02%), 1 sample
  [ 0] org.apache.kafka.common.metrics.Metrics
  [ 1] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 2] kafka.network.Processor.close
  [ 3] kafka.network.Acceptor.$anonfun$close$1
  [ 4] kafka.network.Acceptor.$anonfun$close$1$adapted
  [ 5] kafka.network.Acceptor$$Lambda$2953.0x00000008013983d0.apply
  [ 6] scala.collection.IterableOnceOps.foreach
  [ 7] scala.collection.IterableOnceOps.foreach$
  [ 8] scala.collection.AbstractIterable.foreach
  [ 9] kafka.network.Acceptor.close
  [10] kafka.network.SocketServer.$anonfun$stopProcessingRequests$4
  [11] kafka.network.SocketServer.$anonfun$stopProcessingRequests$4$adapted
  [12] kafka.network.SocketServer$$Lambda$2947.0x0000000801397038.apply
  [13] scala.collection.IterableOnceOps.foreach
  [14] scala.collection.IterableOnceOps.foreach$
  [15] scala.collection.AbstractIterable.foreach
  [16] kafka.network.SocketServer.stopProcessingRequests
  [17] kafka.server.KafkaServer.$anonfun$shutdown$4
  [18] kafka.server.KafkaServer$$Lambda$2931.0x0000000801393a28.apply$mcV$sp
  [19] kafka.utils.CoreUtils$.swallow
  [20] kafka.server.KafkaServer.shutdown
  [21] io.github.embeddedkafka.EmbeddedK.stop
  [22] zio.kafka.embedded.Kafka$EmbeddedKafkaService.$anonfun$stop$1
  [23] zio.kafka.embedded.Kafka$EmbeddedKafkaService$$Lambda$2905.0x000000080138e0c8.apply$mcV$sp
  [24] scala.runtime.java8.JFunction0$mcV$sp.apply
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.runLoop
  [65] zio.internal.FiberRuntime.evaluateEffect
  [66] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [67] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [68] zio.internal.FiberRuntime.run
  [69] java.util.concurrent.ThreadPoolExecutor.runWorker
  [70] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [71] java.lang.Thread.run

--- 7625 ns (0.02%), 1 sample
  [ 0] scala.collection.mutable.HashMap
  [ 1] kafka.network.ConnectionQuotas.dec
  [ 2] kafka.network.Processor.$anonfun$processDisconnected$1
  [ 3] kafka.network.Processor$$Lambda$1150.0x000000080110e488.accept
  [ 4] java.util.HashMap$KeySet.forEach
  [ 5] kafka.network.Processor.processDisconnected
  [ 6] kafka.network.Processor.run
  [ 7] java.lang.Thread.run

--- 3041 ns (0.01%), 1 sample
  [ 0] org.apache.zookeeper.ClientCnxnSocketNIO
  [ 1] org.apache.zookeeper.ClientCnxnSocketNIO.doTransport
  [ 2] org.apache.zookeeper.ClientCnxn$SendThread.run

--- 2028 ns (0.00%), 1 sample
  [ 0] java.lang.ThreadGroup
  [ 1] java.lang.ThreadGroup.threadTerminated
  [ 2] java.lang.Thread.exit

--- 1177 ns (0.00%), 1 sample
  [ 0] java.util.concurrent.locks.ReentrantLock$NonfairSync
  [ 1] jdk.internal.misc.Unsafe.park
  [ 2] java.util.concurrent.locks.LockSupport.park
  [ 3] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly
  [ 5] java.util.concurrent.locks.ReentrantLock$Sync.lockInterruptibly
  [ 6] java.util.concurrent.locks.ReentrantLock.lockInterruptibly
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 9] java.util.concurrent.ThreadPoolExecutor.getTask
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
    36547040   86.14%      136  java.util.concurrent.locks.ReentrantLock$NonfairSync
     2334531    5.50%       18  org.apache.kafka.common.metrics.Metrics
     2276089    5.36%        8  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator
     1137317    2.68%       13  java.util.concurrent.locks.ReentrantLock$FairSync
       70055    0.17%        3  scala.collection.mutable.HashMap
       40529    0.10%        2  java.lang.ThreadGroup
       19629    0.05%        2  org.apache.kafka.clients.consumer.internals.Fetcher
        3041    0.01%        1  org.apache.zookeeper.ClientCnxnSocketNIO
