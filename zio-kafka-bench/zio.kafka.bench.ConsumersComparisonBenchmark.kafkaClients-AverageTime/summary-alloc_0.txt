--- Execution profile ---
Total samples       : 1745

--- 552582400 bytes (21.08%), 193 samples
  [ 0] java.nio.HeapByteBuffer
  [ 1] org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint
  [ 2] org.apache.kafka.common.utils.ByteUtils.readVarint
  [ 3] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 4] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 5] org.apache.kafka.common.record.DefaultRecordBatch$3.readNext
  [ 6] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 7] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [11] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [17] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [18] scala.runtime.java8.JFunction0$mcV$sp.apply
  [19] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [20] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 397201368 bytes (15.15%), 137 samples
  [ 0] org.apache.kafka.clients.consumer.ConsumerRecord
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 340676568 bytes (12.99%), 109 samples
  [ 0] org.apache.kafka.common.record.DefaultRecord
  [ 1] org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint
  [ 2] org.apache.kafka.common.utils.ByteUtils.readVarint
  [ 3] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 4] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 5] org.apache.kafka.common.record.DefaultRecordBatch$3.readNext
  [ 6] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 7] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [11] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [17] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [18] scala.runtime.java8.JFunction0$mcV$sp.apply
  [19] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [20] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 286917688 bytes (10.94%), 89 samples
  [ 0] byte[]
  [ 1] org.apache.kafka.common.header.internals.RecordHeaders.<init>
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [12] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [13] scala.runtime.java8.JFunction0$mcV$sp.apply
  [14] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [15] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.evaluateEffect
  [21] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [22] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [23] zio.internal.FiberRuntime.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 180144216 bytes (6.87%), 52 samples
  [ 0] java.util.Arrays$ArrayList
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [11] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [12] scala.runtime.java8.JFunction0$mcV$sp.apply
  [13] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [14] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.evaluateEffect
  [20] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [21] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [22] zio.internal.FiberRuntime.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 176024608 bytes (6.71%), 50 samples
  [ 0] java.util.Optional
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 148793424 bytes (5.68%), 51 samples
  [ 0] org.apache.kafka.common.header.internals.RecordHeaders
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [11] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [12] scala.runtime.java8.JFunction0$mcV$sp.apply
  [13] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [14] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.evaluateEffect
  [20] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [21] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [22] zio.internal.FiberRuntime.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 112622968 bytes (4.30%), 50 samples
  [ 0] byte[]
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 108890096 bytes (4.15%), 36 samples
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.common.header.internals.RecordHeaders.<init>
  [ 2] org.apache.kafka.common.header.internals.RecordHeaders.<init>
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 85358816 bytes (3.26%), 23 samples
  [ 0] java.lang.Object[]
  [ 1] java.util.Arrays.copyOf
  [ 2] java.util.Arrays.copyOf
  [ 3] java.util.ArrayList.grow
  [ 4] java.util.ArrayList.grow
  [ 5] java.util.ArrayList.add
  [ 6] java.util.ArrayList.add
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [15] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [16] scala.runtime.java8.JFunction0$mcV$sp.apply
  [17] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [18] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 49531280 bytes (1.89%), 11 samples
  [ 0] byte[]
  [ 1] java.nio.HeapByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.allocate
  [ 3] org.apache.kafka.common.memory.MemoryPool$1.tryAllocate
  [ 4] org.apache.kafka.common.network.NetworkReceive.readFrom
  [ 5] org.apache.kafka.common.network.KafkaChannel.receive
  [ 6] org.apache.kafka.common.network.KafkaChannel.read
  [ 7] org.apache.kafka.common.network.Selector.attemptRead
  [ 8] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 9] org.apache.kafka.common.network.Selector.poll
  [10] org.apache.kafka.clients.NetworkClient.poll
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.transmitSends
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [15] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [16] scala.runtime.java8.JFunction0$mcV$sp.apply
  [17] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [18] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 41012000 bytes (1.56%), 11 samples
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.kafka.common.memory.MemoryPool$1.tryAllocate
  [ 3] org.apache.kafka.common.network.NetworkReceive.readFrom
  [ 4] org.apache.kafka.common.network.KafkaChannel.receive
  [ 5] org.apache.kafka.common.network.KafkaChannel.read
  [ 6] org.apache.kafka.common.network.Selector.attemptRead
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] org.apache.kafka.clients.NetworkClient.poll
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.transmitSends
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [14] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [15] scala.runtime.java8.JFunction0$mcV$sp.apply
  [16] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [17] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 25166976 bytes (0.96%), 4 samples
  [ 0] byte[]
  [ 1] java.nio.HeapByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.allocate
  [ 3] org.apache.kafka.common.memory.MemoryPool$1.tryAllocate
  [ 4] org.apache.kafka.common.network.NetworkReceive.readFrom
  [ 5] org.apache.kafka.common.network.KafkaChannel.receive
  [ 6] org.apache.kafka.common.network.KafkaChannel.read
  [ 7] org.apache.kafka.common.network.Selector.attemptRead
  [ 8] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 9] org.apache.kafka.common.network.Selector.poll
  [10] org.apache.kafka.clients.NetworkClient.poll
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [12] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [17] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [18] scala.runtime.java8.JFunction0$mcV$sp.apply
  [19] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [20] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 12583488 bytes (0.48%), 2 samples
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.kafka.common.memory.MemoryPool$1.tryAllocate
  [ 3] org.apache.kafka.common.network.NetworkReceive.readFrom
  [ 4] org.apache.kafka.common.network.KafkaChannel.receive
  [ 5] org.apache.kafka.common.network.KafkaChannel.read
  [ 6] org.apache.kafka.common.network.Selector.attemptRead
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] org.apache.kafka.clients.NetworkClient.poll
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [16] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [17] scala.runtime.java8.JFunction0$mcV$sp.apply
  [18] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [19] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.evaluateEffect
  [25] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [26] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [27] zio.internal.FiberRuntime.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 9678536 bytes (0.37%), 3 samples
  [ 0] zio.FiberRefs$$Lambda$134+0x0000000800d36620
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] zio.FiberRefs.getOrDefault
  [ 6] zio.internal.FiberRuntime.getFiberRef
  [ 7] zio.internal.FiberRuntime.getSupervisor
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 7496880 bytes (0.29%), 26 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] java.util.LinkedHashMap
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.prepareFetchRequests
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.sendFetches
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 4] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 5] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [ 6] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [ 7] scala.runtime.java8.JFunction0$mcV$sp.apply
  [ 8] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [ 9] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] int[]
  [ 1] java.util.regex.Pattern.matcher
  [ 2] org.apache.kafka.common.utils.Sanitizer.jmxSanitize
  [ 3] kafka.metrics.KafkaMetricsGroup.$anonfun$toMBeanName$2
  [ 4] kafka.metrics.KafkaMetricsGroup$$Lambda$619.0x0000000800fa0e88.apply
  [ 5] scala.collection.StrictOptimizedIterableOps.map
  [ 6] scala.collection.StrictOptimizedIterableOps.map$
  [ 7] scala.collection.immutable.Map$Map2.map
  [ 8] kafka.metrics.KafkaMetricsGroup.toMBeanName
  [ 9] kafka.metrics.KafkaMetricsGroup.explicitMetricName
  [10] kafka.metrics.KafkaMetricsGroup.explicitMetricName$
  [11] kafka.network.RequestMetrics.explicitMetricName
  [12] kafka.metrics.KafkaMetricsGroup.metricName
  [13] kafka.metrics.KafkaMetricsGroup.metricName$
  [14] kafka.network.RequestMetrics.metricName
  [15] kafka.metrics.KafkaMetricsGroup.removeMetric
  [16] kafka.metrics.KafkaMetricsGroup.removeMetric$
  [17] kafka.network.RequestMetrics.removeMetric
  [18] kafka.network.RequestMetrics$ErrorMeter.removeMeter
  [19] kafka.network.RequestMetrics.$anonfun$removeMetrics$2
  [20] kafka.network.RequestMetrics.$anonfun$removeMetrics$2$adapted
  [21] kafka.network.RequestMetrics$$Lambda$3066.0x00000008013a8000.apply
  [22] scala.collection.IterableOnceOps.foreach
  [23] scala.collection.IterableOnceOps.foreach$
  [24] scala.collection.AbstractIterable.foreach
  [25] kafka.network.RequestMetrics.removeMetrics
  [26] kafka.network.RequestChannel$Metrics.$anonfun$close$1
  [27] kafka.network.RequestChannel$Metrics.$anonfun$close$1$adapted
  [28] kafka.network.RequestChannel$Metrics$$Lambda$3064.0x00000008013a1960.apply
  [29] scala.collection.IterableOnceOps.foreach
  [30] scala.collection.IterableOnceOps.foreach$
  [31] scala.collection.AbstractIterable.foreach
  [32] kafka.network.RequestChannel$Metrics.close
  [33] kafka.network.RequestChannel.shutdown
  [34] kafka.network.SocketServer.shutdown
  [35] kafka.server.KafkaServer.$anonfun$shutdown$24
  [36] kafka.server.KafkaServer$$Lambda$3062.0x00000008013a13c8.apply$mcV$sp
  [37] kafka.utils.CoreUtils$.swallow
  [38] kafka.server.KafkaServer.shutdown
  [39] io.github.embeddedkafka.EmbeddedK.stop
  [40] zio.kafka.embedded.Kafka$EmbeddedKafkaService.$anonfun$stop$1
  [41] zio.kafka.embedded.Kafka$EmbeddedKafkaService$$Lambda$2894.0x00000008013827a0.apply$mcV$sp
  [42] scala.runtime.java8.JFunction0$mcV$sp.apply
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.runLoop
  [65] zio.internal.FiberRuntime.runLoop
  [66] zio.internal.FiberRuntime.runLoop
  [67] zio.internal.FiberRuntime.runLoop
  [68] zio.internal.FiberRuntime.runLoop
  [69] zio.internal.FiberRuntime.runLoop
  [70] zio.internal.FiberRuntime.runLoop
  [71] zio.internal.FiberRuntime.runLoop
  [72] zio.internal.FiberRuntime.runLoop
  [73] zio.internal.FiberRuntime.runLoop
  [74] zio.internal.FiberRuntime.runLoop
  [75] zio.internal.FiberRuntime.runLoop
  [76] zio.internal.FiberRuntime.runLoop
  [77] zio.internal.FiberRuntime.runLoop
  [78] zio.internal.FiberRuntime.runLoop
  [79] zio.internal.FiberRuntime.runLoop
  [80] zio.internal.FiberRuntime.runLoop
  [81] zio.internal.FiberRuntime.runLoop
  [82] zio.internal.FiberRuntime.runLoop
  [83] zio.internal.FiberRuntime.evaluateEffect
  [84] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [85] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [86] zio.internal.FiberRuntime.run
  [87] java.util.concurrent.ThreadPoolExecutor.runWorker
  [88] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [89] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] java.lang.StringBuilder
  [ 1] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesReceived
  [ 2] org.apache.kafka.common.network.Selector.attemptRead
  [ 3] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 4] org.apache.kafka.common.network.Selector.poll
  [ 5] org.apache.kafka.clients.NetworkClient.poll
  [ 6] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.transmitSends
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [10] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [11] scala.runtime.java8.JFunction0$mcV$sp.apply
  [12] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [13] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.evaluateEffect
  [19] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [20] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [21] zio.internal.FiberRuntime.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.StringBuilder.append
  [ 2] org.apache.kafka.common.TopicPartition.toString
  [ 3] java.lang.String.valueOf
  [ 4] java.lang.StringBuilder.append
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.partitionLagMetricName
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.recordPartitionLag
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.access$2100
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [14] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [15] scala.runtime.java8.JFunction0$mcV$sp.apply
  [16] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [17] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] org.apache.kafka.common.metrics.JmxReporter.getMBeanName
  [ 4] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [ 5] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 6] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.maybeUpdateAssignment
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.access$100
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher.sendFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [14] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [15] scala.runtime.java8.JFunction0$mcV$sp.apply
  [16] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [17] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] zio.FiberRefs$$Lambda$134+0x0000000800d36620
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] zio.FiberRefs.getOrDefault
  [ 6] zio.internal.FiberRuntime.getFiberRef
  [ 7] zio.internal.FiberRuntime.addInterruptedCause
  [ 8] zio.internal.FiberRuntime.processNewInterruptSignal
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 4192256 bytes (0.16%), 1 sample
  [ 0] java.util.HashSet
  [ 1] org.apache.kafka.clients.consumer.internals.SubscriptionState.fetchablePartitions
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.fetchablePartitions
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.prepareFetchRequests
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.sendFetches
  [ 5] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 6] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 7] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [ 8] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [ 9] scala.runtime.java8.JFunction0$mcV$sp.apply
  [10] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [11] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 4192256 bytes (0.16%), 1 sample
  [ 0] java.util.stream.ReduceOps$3
  [ 1] java.util.stream.StreamSupport.stream
  [ 2] java.util.Collection.stream
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.regroupFetchPositionsByLeader
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsAsync
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsIfNeeded
  [ 6] org.apache.kafka.clients.consumer.KafkaConsumer.updateFetchPositions
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [11] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [12] scala.runtime.java8.JFunction0$mcV$sp.apply
  [13] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [14] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.evaluateEffect
  [20] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [21] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [22] zio.internal.FiberRuntime.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 4192256 bytes (0.16%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] java.util.Arrays.copyOf
  [ 2] java.util.Arrays.copyOf
  [ 3] java.util.ArrayList.grow
  [ 4] java.util.ArrayList.grow
  [ 5] java.util.ArrayList.add
  [ 6] java.util.ArrayList.add
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [15] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [16] scala.runtime.java8.JFunction0$mcV$sp.apply
  [17] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [18] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 4192256 bytes (0.16%), 1 sample
  [ 0] java.util.HashMap$EntryIterator
  [ 1] java.util.AbstractMap.equals
  [ 2] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$MetadataSnapshot.matches
  [ 3] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.rejoinNeededOrPending
  [ 4] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll
  [ 5] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded
  [ 6] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 8] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [ 9] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [10] scala.runtime.java8.JFunction0$mcV$sp.apply
  [11] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [12] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.evaluateEffect
  [18] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [19] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [20] zio.internal.FiberRuntime.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 4192256 bytes (0.16%), 1 sample
  [ 0] java.lang.String
  [ 1] java.util.Arrays.copyOfRange
  [ 2] java.lang.StringLatin1.newString
  [ 3] java.lang.StringBuilder.toString
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.partitionLeadMetricName
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.recordPartitionLead
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.access$2200
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 4192256 bytes (0.16%), 1 sample
  [ 0] java.util.stream.ReferencePipeline$2
  [ 1] java.util.stream.StreamSupport.stream
  [ 2] java.util.Collection.stream
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.regroupFetchPositionsByLeader
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsAsync
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsIfNeeded
  [ 6] org.apache.kafka.clients.consumer.KafkaConsumer.updateFetchPositions
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [11] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [12] scala.runtime.java8.JFunction0$mcV$sp.apply
  [13] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [14] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.evaluateEffect
  [20] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [21] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [22] zio.internal.FiberRuntime.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 4192256 bytes (0.16%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] java.util.ArrayList.add
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 6] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [10] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [11] scala.runtime.java8.JFunction0$mcV$sp.apply
  [12] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [13] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.evaluateEffect
  [19] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [20] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [21] zio.internal.FiberRuntime.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 1682192 bytes (0.06%), 3 samples
  [ 0] zio.Exit$$Lambda$2722+0x0000000801351090
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] zio.Exit.getOrThrow
  [ 4] zio.Exit.getOrThrow$
  [ 5] zio.Exit$Success.getOrThrow
  [ 6] zio.kafka.bench.ZioBenchmark.$anonfun$runZIO$1
  [ 7] zio.kafka.bench.ZioBenchmark$$Lambda$2481.0x00000008012f9e50.apply
  [ 8] zio.Unsafe$.unsafe
  [ 9] zio.kafka.bench.ZioBenchmark.runZIO
  [10] zio.kafka.bench.ZioBenchmark.runZIO$
  [11] zio.kafka.bench.ConsumersComparisonBenchmark.runZIO
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.kafkaClients
  [13] zio.kafka.bench.jmh_generated.ConsumersComparisonBenchmark_kafkaClients_jmhTest.kafkaClients_avgt_jmhStub
  [14] zio.kafka.bench.jmh_generated.ConsumersComparisonBenchmark_kafkaClients_jmhTest.kafkaClients_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 1431392 bytes (0.05%), 1 sample
  [ 0] java.util.HashMap$KeyIterator
  [ 1] java.util.HashSet.iterator
  [ 2] sun.nio.ch.Util$2.iterator
  [ 3] org.apache.zookeeper.server.NIOServerCnxnFactory$AcceptThread.select
  [ 4] org.apache.zookeeper.server.NIOServerCnxnFactory$AcceptThread.run

--- 1409768 bytes (0.05%), 31 samples
  [ 0] zio.FiberRefs$$Lambda$134+0x0000000800d36620
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] zio.FiberRefs.getOrDefault
  [ 6] zio.internal.FiberRuntime.getFiberRef
  [ 7] zio.internal.FiberRuntime.getSupervisor
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 1363168 bytes (0.05%), 1 sample
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.zookeeper.server.ExpiryQueue.poll
  [ 3] org.apache.zookeeper.server.NIOServerCnxnFactory$ConnectionExpirerThread.run

--- 1362776 bytes (0.05%), 8 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 1047920 bytes (0.04%), 3 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.LinkedBlockingQueue.poll
  [ 3] java.util.concurrent.ExecutorCompletionService.poll
  [ 4] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 5] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 6] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 7] org.openjdk.jmh.runner.BaseRunner.doSingle
  [ 8] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [ 9] org.openjdk.jmh.runner.ForkedRunner.run
  [10] org.openjdk.jmh.runner.ForkedMain.main

--- 1042992 bytes (0.04%), 25 samples
  [ 0] zio.ChunkBuilder$$anon$1
  [ 1] zio.ChunkBuilder$.make
  [ 2] zio.internal.RingBuffer.pollUpTo
  [ 3] zio.internal.ZScheduler$$anon$4.run

--- 1015280 bytes (0.04%), 3 samples
  [ 0] java.util.concurrent.LinkedBlockingQueue$Itr
  [ 1] java.util.concurrent.LinkedBlockingQueue.iterator
  [ 2] org.apache.zookeeper.server.NIOServerCnxn.handleWrite
  [ 3] org.apache.zookeeper.server.NIOServerCnxn.doIO
  [ 4] org.apache.zookeeper.server.NIOServerCnxnFactory$IOWorkRequest.doWork
  [ 5] org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 998648 bytes (0.04%), 2 samples
  [ 0] java.util.HashMap$Node
  [ 1] java.util.HashMap.newNode
  [ 2] java.util.HashMap.putVal
  [ 3] java.util.HashMap.put
  [ 4] java.util.HashSet.add
  [ 5] sun.nio.ch.SelectorImpl.processReadyEvents
  [ 6] sun.nio.ch.KQueueSelectorImpl.processEvents
  [ 7] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 8] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 9] sun.nio.ch.SelectorImpl.select
  [10] org.apache.zookeeper.server.NIOServerCnxnFactory$SelectorThread.select
  [11] org.apache.zookeeper.server.NIOServerCnxnFactory$SelectorThread.run

--- 930368 bytes (0.04%), 1 sample
  [ 0] java.lang.String
  [ 1] java.lang.Thread.sleep
  [ 2] org.apache.zookeeper.server.NIOServerCnxnFactory$ConnectionExpirerThread.run

--- 830032 bytes (0.03%), 4 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 800752 bytes (0.03%), 1 sample
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ArrayBlockingQueue.take
  [ 3] kafka.server.LogDirFailureChannel.takeNextOfflineLogDir
  [ 4] kafka.server.ReplicaManager$LogDirFailureHandler.doWork
  [ 5] kafka.utils.ShutdownableThread.run

--- 755088 bytes (0.03%), 3 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 732520 bytes (0.03%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.clients.NetworkClient.poll
  [ 2] org.apache.kafka.clients.producer.internals.Sender.runOnce
  [ 3] org.apache.kafka.clients.producer.internals.Sender.run
  [ 4] java.lang.Thread.run

--- 676656 bytes (0.03%), 2 samples
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.zookeeper.server.NIOServerCnxn.readLength
  [ 3] org.apache.zookeeper.server.NIOServerCnxn.doIO
  [ 4] org.apache.zookeeper.server.NIOServerCnxnFactory$IOWorkRequest.doWork
  [ 5] org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 621352 bytes (0.02%), 8 samples
  [ 0] java.lang.String

--- 603720 bytes (0.02%), 2 samples
  [ 0] java.util.HashMap$KeySet
  [ 1] java.util.HashSet.iterator
  [ 2] org.apache.zookeeper.ClientCnxn$EventThread.processEvent
  [ 3] org.apache.zookeeper.ClientCnxn$EventThread.run

--- 548760 bytes (0.02%), 1 sample
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 511368 bytes (0.02%), 1 sample
  [ 0] scala.collection.MapOps$$anon$1
  [ 1] scala.collection.MapOps.values
  [ 2] scala.collection.MapOps.values$
  [ 3] scala.collection.AbstractMap.values
  [ 4] kafka.log.LogCleanerManager.$anonfun$maintainUncleanablePartitions$1
  [ 5] kafka.log.LogCleanerManager.maintainUncleanablePartitions
  [ 6] kafka.log.LogCleaner$CleanerThread.doWork
  [ 7] kafka.utils.ShutdownableThread.run

--- 490832 bytes (0.02%), 4 samples
  [ 0] java.lang.ref.WeakReference
  [ 1] zio.internal.WeakConcurrentBag.graduate
  [ 2] zio.internal.ZScheduler$$anon$3.run

--- 450168 bytes (0.02%), 5 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 401592 bytes (0.02%), 1 sample
  [ 0] java.io.ByteArrayOutputStream
  [ 1] org.apache.zookeeper.server.persistence.Util.marshallTxnEntry
  [ 2] org.apache.zookeeper.server.persistence.FileTxnLog.append
  [ 3] org.apache.zookeeper.server.persistence.FileTxnSnapLog.append
  [ 4] org.apache.zookeeper.server.ZKDatabase.append
  [ 5] org.apache.zookeeper.server.SyncRequestProcessor.run

--- 400888 bytes (0.02%), 1 sample
  [ 0] org.apache.zookeeper.txn.TxnHeader
  [ 1] org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn
  [ 2] org.apache.zookeeper.server.PrepRequestProcessor.pRequest
  [ 3] org.apache.zookeeper.server.PrepRequestProcessor.run

--- 393128 bytes (0.01%), 1 sample
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.zookeeper.server.SessionTrackerImpl.touchSession
  [ 3] org.apache.zookeeper.server.ZooKeeperServer.touch
  [ 4] org.apache.zookeeper.server.ZooKeeperServer.submitRequestNow
  [ 5] org.apache.zookeeper.server.RequestThrottler.run

--- 351688 bytes (0.01%), 1 sample
  [ 0] java.lang.Integer
  [ 1] sun.nio.ch.KQueueSelectorImpl.processEvents
  [ 2] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 3] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 4] sun.nio.ch.SelectorImpl.select
  [ 5] org.apache.kafka.common.network.Selector.select
  [ 6] org.apache.kafka.common.network.Selector.poll
  [ 7] org.apache.kafka.clients.NetworkClient.poll
  [ 8] kafka.common.InterBrokerSendThread.pollOnce
  [ 9] kafka.server.BrokerToControllerRequestThread.doWork
  [10] kafka.utils.ShutdownableThread.run

--- 350104 bytes (0.01%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.MethodWriter
  [ 1] jdk.internal.org.objectweb.asm.ClassWriter.visitMethod
  [ 2] java.lang.invoke.InnerClassLambdaMetafactory.generateConstructor
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.Cause.mapTrace
  [15] zio.Cause.traced
  [16] zio.internal.FiberRuntime.$anonfun$interruptAsFork$1
  [17] zio.internal.FiberRuntime$$Lambda$2780.0x00000008013666c0.apply$mcV$sp
  [18] scala.runtime.java8.JFunction0$mcV$sp.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.runLoop
  [65] zio.internal.FiberRuntime.runLoop
  [66] zio.internal.FiberRuntime.runLoop
  [67] zio.internal.FiberRuntime.runLoop
  [68] zio.internal.FiberRuntime.runLoop
  [69] zio.internal.FiberRuntime.runLoop
  [70] zio.internal.FiberRuntime.runLoop
  [71] zio.internal.FiberRuntime.runLoop
  [72] zio.internal.FiberRuntime.runLoop
  [73] zio.internal.FiberRuntime.runLoop
  [74] zio.internal.FiberRuntime.runLoop
  [75] zio.internal.FiberRuntime.runLoop
  [76] zio.internal.FiberRuntime.runLoop
  [77] zio.internal.FiberRuntime.runLoop
  [78] zio.internal.FiberRuntime.runLoop
  [79] zio.internal.FiberRuntime.runLoop
  [80] zio.internal.FiberRuntime.runLoop
  [81] zio.internal.FiberRuntime.runLoop
  [82] zio.internal.FiberRuntime.runLoop
  [83] zio.internal.FiberRuntime.runLoop
  [84] zio.internal.FiberRuntime.runLoop
  [85] zio.internal.FiberRuntime.runLoop
  [86] zio.internal.FiberRuntime.runLoop
  [87] zio.internal.FiberRuntime.runLoop
  [88] zio.internal.FiberRuntime.runLoop
  [89] zio.internal.FiberRuntime.runLoop
  [90] zio.internal.FiberRuntime.runLoop
  [91] zio.internal.FiberRuntime.runLoop
  [92] zio.internal.FiberRuntime.runLoop
  [93] zio.internal.FiberRuntime.runLoop
  [94] zio.internal.FiberRuntime.runLoop
  [95] zio.internal.FiberRuntime.runLoop
  [96] zio.internal.FiberRuntime.runLoop
  [97] zio.internal.FiberRuntime.runLoop
  [98] zio.internal.FiberRuntime.runLoop
  [99] zio.internal.FiberRuntime.runLoop
  [100] zio.internal.FiberRuntime.runLoop
  [101] zio.internal.FiberRuntime.runLoop
  [102] zio.internal.FiberRuntime.runLoop
  [103] zio.internal.FiberRuntime.runLoop
  [104] zio.internal.FiberRuntime.runLoop
  [105] zio.internal.FiberRuntime.runLoop
  [106] zio.internal.FiberRuntime.runLoop
  [107] zio.internal.FiberRuntime.runLoop
  [108] zio.internal.FiberRuntime.runLoop
  [109] zio.internal.FiberRuntime.runLoop
  [110] zio.internal.FiberRuntime.runLoop
  [111] zio.internal.FiberRuntime.runLoop
  [112] zio.internal.FiberRuntime.runLoop
  [113] zio.internal.FiberRuntime.runLoop
  [114] zio.internal.FiberRuntime.runLoop
  [115] zio.internal.FiberRuntime.runLoop
  [116] zio.internal.FiberRuntime.runLoop
  [117] zio.internal.FiberRuntime.runLoop
  [118] zio.internal.FiberRuntime.runLoop
  [119] zio.internal.FiberRuntime.runLoop
  [120] zio.internal.FiberRuntime.runLoop
  [121] zio.internal.FiberRuntime.runLoop
  [122] zio.internal.FiberRuntime.runLoop
  [123] zio.internal.FiberRuntime.runLoop
  [124] zio.internal.FiberRuntime.runLoop
  [125] zio.internal.FiberRuntime.runLoop
  [126] zio.internal.FiberRuntime.runLoop
  [127] zio.internal.FiberRuntime.runLoop
  [128] zio.internal.FiberRuntime.runLoop
  [129] zio.internal.FiberRuntime.evaluateEffect
  [130] zio.internal.FiberRuntime.start
  [131] zio.Runtime$UnsafeAPIV1.runOrFork
  [132] zio.Runtime$UnsafeAPIV1.run
  [133] zio.Runtime$unsafe$.$anonfun$fromLayer$4
  [134] zio.Runtime$unsafe$$$Lambda$2476.0x00000008012f8d18.apply$mcV$sp
  [135] zio.Runtime$unsafe$.$anonfun$fromLayer$8
  [136] zio.Runtime$unsafe$$$Lambda$2479.0x00000008012f9598.apply$mcV$sp
  [137] zio.kafka.bench.ZioBenchmark.tearDown
  [138] zio.kafka.bench.ZioBenchmark.tearDown$
  [139] zio.kafka.bench.ConsumersComparisonBenchmark.tearDown
  [140] zio.kafka.bench.jmh_generated.ConsumersComparisonBenchmark_kafkaClients_jmhTest.kafkaClients_AverageTime
  [141] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [142] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [143] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [144] java.lang.reflect.Method.invoke
  [145] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [146] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [147] java.util.concurrent.FutureTask.run
  [148] java.util.concurrent.Executors$RunnableAdapter.call
  [149] java.util.concurrent.FutureTask.run
  [150] java.util.concurrent.ThreadPoolExecutor.runWorker
  [151] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [152] java.lang.Thread.run

--- 350040 bytes (0.01%), 1 sample
  [ 0] byte[]
  [ 1] sun.invoke.util.BytecodeDescriptor.unparseSig
  [ 2] sun.invoke.util.BytecodeDescriptor.unparseMethod
  [ 3] java.lang.invoke.MethodType.toMethodDescriptorString
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] zio.Exit$.$anonfun$collectAll$3
  [14] zio.Exit$$$Lambda$2769.0x0000000801363a80.apply
  [15] scala.collection.LinearSeqOps.foldLeft
  [16] scala.collection.LinearSeqOps.foldLeft$
  [17] scala.collection.immutable.List.foldLeft
  [18] zio.Exit$.$anonfun$collectAll$1
  [19] zio.Exit$$$Lambda$2766.0x0000000801363030.apply
  [20] scala.Option.map
  [21] zio.Exit$.collectAll
  [22] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$releaseAll$4
  [23] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2765.0x0000000801362d70.apply
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.evaluateEffect
  [54] zio.internal.FiberRuntime.start
  [55] zio.Runtime$UnsafeAPIV1.runOrFork
  [56] zio.Runtime$UnsafeAPIV1.run
  [57] zio.Runtime$unsafe$.$anonfun$fromLayer$4
  [58] zio.Runtime$unsafe$$$Lambda$2476.0x00000008012f8d18.apply$mcV$sp
  [59] zio.Runtime$unsafe$.$anonfun$fromLayer$8
  [60] zio.Runtime$unsafe$$$Lambda$2479.0x00000008012f9598.apply$mcV$sp
  [61] zio.kafka.bench.ZioBenchmark.tearDown
  [62] zio.kafka.bench.ZioBenchmark.tearDown$
  [63] zio.kafka.bench.ConsumersComparisonBenchmark.tearDown
  [64] zio.kafka.bench.jmh_generated.ConsumersComparisonBenchmark_kafkaClients_jmhTest.kafkaClients_AverageTime
  [65] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [66] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [67] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [68] java.lang.reflect.Method.invoke
  [69] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [70] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [71] java.util.concurrent.FutureTask.run
  [72] java.util.concurrent.Executors$RunnableAdapter.call
  [73] java.util.concurrent.FutureTask.run
  [74] java.util.concurrent.ThreadPoolExecutor.runWorker
  [75] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [76] java.lang.Thread.run

--- 349144 bytes (0.01%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.ClassWriter
  [ 1] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 2] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 4] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 6] java.lang.invoke.BootstrapMethodInvoker.invoke
  [ 7] java.lang.invoke.CallSite.makeSite
  [ 8] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [ 9] java.lang.invoke.MethodHandleNatives.linkCallSite
  [10] kafka.utils.ShutdownableThread.pause
  [11] kafka.log.LogCleaner$CleanerThread.doWork
  [12] kafka.utils.ShutdownableThread.run

--- 338488 bytes (0.01%), 1 sample
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 324512 bytes (0.01%), 1 sample
  [ 0] byte[]
  [ 1] java.io.ByteArrayOutputStream.<init>
  [ 2] jdk.vm.ci.services.Services.serializeProperties
  [ 3] jdk.vm.ci.services.Services.serializeSavedProperties

--- 314608 bytes (0.01%), 1 sample
  [ 0] kafka.log.UnifiedLog$$Lambda$2368+0x00000008012d3c28
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.LambdaForm$DMH.0x0000000800fad800.newInvokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000800fae000.linkToTargetMethod
  [ 5] kafka.log.UnifiedLog.flush
  [ 6] kafka.log.UnifiedLog.flush
  [ 7] kafka.log.LogManager.$anonfun$shutdown$8
  [ 8] kafka.log.LogManager$$Lambda$3015.0x000000080139bea0.run
  [ 9] java.util.concurrent.Executors$RunnableAdapter.call
  [10] java.util.concurrent.FutureTask.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 296496 bytes (0.01%), 1 sample
  [ 0] java.lang.Double
  [ 1] java.util.concurrent.atomic.AtomicLong.incrementAndGet
  [ 2] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 3] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 4] com.yammer.metrics.core.Histogram.update
  [ 5] kafka.controller.ControllerEventManager$ControllerEventThread.doWork
  [ 6] kafka.utils.ShutdownableThread.run

--- 277720 bytes (0.01%), 24 samples
  [ 0] kafka.server.KafkaRequestHandler$$Lambda$1155+0x0000000801103c80
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] kafka.server.KafkaRequestHandler.run
  [ 4] java.lang.Thread.run

--- 277104 bytes (0.01%), 2 samples
  [ 0] java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1
  [ 1] java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator
  [ 2] jdk.vm.ci.services.Services.serializeProperties
  [ 3] jdk.vm.ci.services.Services.serializeSavedProperties

--- 220296 bytes (0.01%), 1 sample
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 219560 bytes (0.01%), 2 samples
  [ 0] java.util.HashMap$KeyIterator
  [ 1] java.util.HashSet.iterator
  [ 2] sun.nio.ch.Util$2.iterator
  [ 3] org.apache.zookeeper.ClientCnxnSocketNIO.doTransport
  [ 4] org.apache.zookeeper.ClientCnxn$SendThread.run

--- 216648 bytes (0.01%), 3 samples
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.zookeeper.server.ExpiryQueue.poll
  [ 3] org.apache.zookeeper.server.SessionTrackerImpl.run

--- 212688 bytes (0.01%), 1 sample
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] kafka.controller.RequestSendThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 204080 bytes (0.01%), 19 samples
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 4] org.apache.kafka.common.network.Selector.write
  [ 5] org.apache.kafka.common.network.Selector.attemptWrite
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 166720 bytes (0.01%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.clients.NetworkClient.poll
  [ 2] kafka.common.InterBrokerSendThread.pollOnce
  [ 3] kafka.common.InterBrokerSendThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 163608 bytes (0.01%), 1 sample
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 158216 bytes (0.01%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.clients.NetworkClient.poll
  [ 2] kafka.common.InterBrokerSendThread.pollOnce
  [ 3] kafka.server.BrokerToControllerRequestThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 138416 bytes (0.01%), 2 samples
  [ 0] kafka.utils.KafkaScheduler$$Lambda$854+0x000000080105aba0
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] kafka.utils.KafkaScheduler.$anonfun$schedule$2
  [ 4] kafka.utils.KafkaScheduler$$Lambda$645.0x0000000800fa3d88.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.runAndReset
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 134384 bytes (0.01%), 16 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.DelayQueue.poll
  [ 3] kafka.server.ClientQuotaManager$ThrottledChannelReaper.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 111944 bytes (0.00%), 11 samples
  [ 0] byte[]
  [ 1] java.lang.StringLatin1.newString
  [ 2] java.lang.StringBuilder.toString
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 4] org.apache.kafka.common.network.Selector.write
  [ 5] org.apache.kafka.common.network.Selector.attemptWrite
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 105000 bytes (0.00%), 18 samples
  [ 0] javax.management.MBeanAttributeInfo
  [ 1] org.apache.kafka.common.metrics.JmxReporter$KafkaMbean.getMBeanInfo
  [ 2] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName
  [ 3] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean
  [ 4] com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean
  [ 5] org.apache.kafka.common.metrics.JmxReporter.reregister
  [ 6] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [ 7] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 8] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 9] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [10] org.apache.kafka.common.utils.Utils.closeQuietly
  [11] org.apache.kafka.common.network.Selector.close
  [12] kafka.network.Processor.closeAll
  [13] kafka.network.Processor.$anonfun$run$8
  [14] kafka.network.Processor$$Lambda$2930.0x000000080138a108.apply$mcV$sp
  [15] kafka.utils.CoreUtils$.swallow
  [16] kafka.network.Processor.run
  [17] java.lang.Thread.run

--- 104312 bytes (0.00%), 1 sample
  [ 0] scala.Some
  [ 1] scala.collection.immutable.Map$Map1.get
  [ 2] kafka.server.ReplicaManager.$anonfun$checkpointHighWatermarks$6
  [ 3] kafka.server.ReplicaManager.$anonfun$checkpointHighWatermarks$6$adapted
  [ 4] kafka.server.ReplicaManager$$Lambda$2220.0x000000080129b400.apply
  [ 5] scala.collection.IterableOnceOps.foreach
  [ 6] scala.collection.IterableOnceOps.foreach$
  [ 7] scala.collection.AbstractIterable.foreach
  [ 8] scala.collection.IterableOps$WithFilter.foreach
  [ 9] kafka.server.ReplicaManager.checkpointHighWatermarks
  [10] kafka.server.ReplicaManager.$anonfun$startHighWatermarkCheckPointThread$1
  [11] kafka.server.ReplicaManager$$Lambda$2211.0x000000080129e4f8.apply$mcV$sp
  [12] kafka.utils.KafkaScheduler.$anonfun$schedule$2
  [13] kafka.utils.KafkaScheduler$$Lambda$645.0x0000000800fa3d88.run
  [14] java.util.concurrent.Executors$RunnableAdapter.call
  [15] java.util.concurrent.FutureTask.runAndReset
  [16] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 90520 bytes (0.00%), 11 samples
  [ 0] java.util.HashMap$EntryIterator
  [ 1] java.util.HashMap.entrySet
  [ 2] org.apache.kafka.common.network.Selector.clear
  [ 3] org.apache.kafka.common.network.Selector.poll
  [ 4] kafka.network.Processor.poll
  [ 5] kafka.network.Processor.run
  [ 6] java.lang.Thread.run

--- 82904 bytes (0.00%), 8 samples
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 4] org.apache.kafka.common.network.Selector.write
  [ 5] org.apache.kafka.common.network.Selector.attemptWrite
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 77720 bytes (0.00%), 11 samples
  [ 0] java.lang.Integer
  [ 1] sun.nio.ch.KQueueSelectorImpl.processEvents
  [ 2] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 3] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 4] sun.nio.ch.SelectorImpl.select
  [ 5] org.apache.kafka.common.network.Selector.select
  [ 6] org.apache.kafka.common.network.Selector.poll
  [ 7] kafka.network.Processor.poll
  [ 8] kafka.network.Processor.run
  [ 9] java.lang.Thread.run

--- 76112 bytes (0.00%), 4 samples
  [ 0] org.apache.kafka.common.message.FetchResponseData$PartitionData
  [ 1] kafka.server.KafkaApis.$anonfun$handleFetchRequest$15
  [ 2] kafka.server.KafkaApis$$Lambda$2677.0x0000000801345478.apply
  [ 3] scala.collection.IterableOnceOps.foreach
  [ 4] scala.collection.IterableOnceOps.foreach$
  [ 5] scala.collection.AbstractIterable.foreach
  [ 6] kafka.server.KafkaApis.processResponseCallback$1
  [ 7] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [ 8] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [ 9] kafka.server.KafkaApis$$Lambda$2665.0x0000000801339450.apply
  [10] kafka.server.ReplicaManager.fetchMessages
  [11] kafka.server.KafkaApis.handleFetchRequest
  [12] kafka.server.KafkaApis.handle
  [13] kafka.server.KafkaRequestHandler.run
  [14] java.lang.Thread.run

--- 75544 bytes (0.00%), 8 samples
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.<init>
  [ 2] java.lang.StringBuilder.<init>
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 4] org.apache.kafka.common.network.Selector.write
  [ 5] org.apache.kafka.common.network.Selector.attemptWrite
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 75184 bytes (0.00%), 9 samples
  [ 0] java.util.HashMap$KeyIterator
  [ 1] java.util.HashSet.iterator
  [ 2] sun.nio.ch.Util$2.iterator
  [ 3] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 4] org.apache.kafka.common.network.Selector.poll
  [ 5] kafka.network.Processor.poll
  [ 6] kafka.network.Processor.run
  [ 7] java.lang.Thread.run

--- 74568 bytes (0.00%), 8 samples
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.kafka.common.record.MultiRecordsSend.writeTo
  [ 3] org.apache.kafka.common.network.NetworkSend.writeTo
  [ 4] org.apache.kafka.common.network.KafkaChannel.write
  [ 5] org.apache.kafka.common.network.Selector.write
  [ 6] org.apache.kafka.common.network.Selector.attemptWrite
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] kafka.network.Processor.poll
  [10] kafka.network.Processor.run
  [11] java.lang.Thread.run

--- 73632 bytes (0.00%), 8 samples
  [ 0] java.lang.StringBuilder
  [ 1] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 2] org.apache.kafka.common.network.Selector.write
  [ 3] org.apache.kafka.common.network.Selector.attemptWrite
  [ 4] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 5] org.apache.kafka.common.network.Selector.poll
  [ 6] kafka.network.Processor.poll
  [ 7] kafka.network.Processor.run
  [ 8] java.lang.Thread.run

--- 70568 bytes (0.00%), 6 samples
  [ 0] java.util.HashMap$KeyIterator
  [ 1] java.util.HashSet.iterator
  [ 2] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 3] org.apache.kafka.common.network.Selector.poll
  [ 4] kafka.network.Processor.poll
  [ 5] kafka.network.Processor.run
  [ 6] java.lang.Thread.run

--- 69952 bytes (0.00%), 6 samples
  [ 0] java.lang.Object[]
  [ 1] org.apache.kafka.common.record.MultiRecordsSend.writeTo
  [ 2] org.apache.kafka.common.network.NetworkSend.writeTo
  [ 3] org.apache.kafka.common.network.KafkaChannel.write
  [ 4] org.apache.kafka.common.network.Selector.write
  [ 5] org.apache.kafka.common.network.Selector.attemptWrite
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 68440 bytes (0.00%), 4 samples
  [ 0] kafka.server.CachedPartition
  [ 1] kafka.server.FetchSession.$anonfun$update$2
  [ 2] kafka.server.FetchSession$$Lambda$2707.0x000000080134f660.accept
  [ 3] java.util.ArrayList.forEach
  [ 4] kafka.server.FetchSession.update
  [ 5] kafka.server.FetchManager.newContext
  [ 6] kafka.server.KafkaApis.handleFetchRequest
  [ 7] kafka.server.KafkaApis.handle
  [ 8] kafka.server.KafkaRequestHandler.run
  [ 9] java.lang.Thread.run

--- 65160 bytes (0.00%), 4 samples
  [ 0] kafka.server.CachedPartition
  [ 1] kafka.server.FetchSession.$anonfun$update$1
  [ 2] kafka.server.FetchSession$$Lambda$2706.0x000000080134f428.accept
  [ 3] java.util.LinkedHashMap.forEach
  [ 4] kafka.server.FetchSession.update
  [ 5] kafka.server.FetchManager.newContext
  [ 6] kafka.server.KafkaApis.handleFetchRequest
  [ 7] kafka.server.KafkaApis.handle
  [ 8] kafka.server.KafkaRequestHandler.run
  [ 9] java.lang.Thread.run

--- 61632 bytes (0.00%), 7 samples
  [ 0] java.lang.String
  [ 1] java.util.Arrays.copyOfRange
  [ 2] java.lang.StringLatin1.newString
  [ 3] java.lang.StringBuilder.toString
  [ 4] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 5] org.apache.kafka.common.network.Selector.write
  [ 6] org.apache.kafka.common.network.Selector.attemptWrite
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] kafka.network.Processor.poll
  [10] kafka.network.Processor.run
  [11] java.lang.Thread.run

--- 58880 bytes (0.00%), 1 sample
  [ 0] zio.Chunk$Slice
  [ 1] zio.Chunk.drop
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] zio.internal.ZScheduler$$anon$4.run

--- 54656 bytes (0.00%), 2 samples
  [ 0] java.lang.Object
  [ 1] kafka.cluster.Partition.readRecords
  [ 2] kafka.cluster.Partition.readFromLocalLog$1
  [ 3] kafka.cluster.Partition.$anonfun$fetchRecords$2
  [ 4] kafka.cluster.Partition.fetchRecords
  [ 5] kafka.server.ReplicaManager.read$1
  [ 6] kafka.server.ReplicaManager.$anonfun$readFromLocalLog$7
  [ 7] kafka.server.ReplicaManager$$Lambda$2666.0x0000000801339820.apply
  [ 8] scala.collection.IterableOnceOps.foreach
  [ 9] scala.collection.IterableOnceOps.foreach$
  [10] scala.collection.AbstractIterable.foreach
  [11] kafka.server.ReplicaManager.readFromLocalLog
  [12] kafka.server.ReplicaManager.fetchMessages
  [13] kafka.server.KafkaApis.handleFetchRequest
  [14] kafka.server.KafkaApis.handle
  [15] kafka.server.KafkaRequestHandler.run
  [16] java.lang.Thread.run

--- 53672 bytes (0.00%), 2 samples
  [ 0] java.nio.HeapByteBuffer
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch.loadBatchWithSize
  [ 3] org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch.loadBatchHeader
  [ 4] org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch.lastOffset
  [ 5] org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize
  [ 6] kafka.log.LogSegment.translateOffset
  [ 7] kafka.log.LogSegment.read
  [ 8] kafka.log.LocalLog.$anonfun$read$2
  [ 9] kafka.log.LocalLog.read
  [10] kafka.log.UnifiedLog.read
  [11] kafka.cluster.Partition.readRecords
  [12] kafka.cluster.Partition.readFromLocalLog$1
  [13] kafka.cluster.Partition.$anonfun$fetchRecords$2
  [14] kafka.cluster.Partition.fetchRecords
  [15] kafka.server.ReplicaManager.read$1
  [16] kafka.server.ReplicaManager.$anonfun$readFromLocalLog$7
  [17] kafka.server.ReplicaManager$$Lambda$2666.0x0000000801339820.apply
  [18] scala.collection.IterableOnceOps.foreach
  [19] scala.collection.IterableOnceOps.foreach$
  [20] scala.collection.AbstractIterable.foreach
  [21] kafka.server.ReplicaManager.readFromLocalLog
  [22] kafka.server.ReplicaManager.fetchMessages
  [23] kafka.server.KafkaApis.handleFetchRequest
  [24] kafka.server.KafkaApis.handle
  [25] kafka.server.KafkaRequestHandler.run
  [26] java.lang.Thread.run

--- 50984 bytes (0.00%), 3 samples
  [ 0] byte[]
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] org.apache.kafka.common.protocol.Readable.readString
  [ 4] org.apache.kafka.common.message.RequestHeaderData.read
  [ 5] org.apache.kafka.common.message.RequestHeaderData.<init>
  [ 6] org.apache.kafka.common.requests.RequestHeader.parse
  [ 7] kafka.network.Processor.parseRequestHeader
  [ 8] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [ 9] kafka.network.Processor$$Lambda$1138.0x00000008010fba18.accept
  [10] java.util.LinkedHashMap$LinkedValues.forEach
  [11] kafka.network.Processor.processCompletedReceives
  [12] kafka.network.Processor.run
  [13] java.lang.Thread.run

--- 48800 bytes (0.00%), 2 samples
  [ 0] org.apache.kafka.common.message.FetchResponseData$SnapshotId
  [ 1] org.apache.kafka.common.message.FetchResponseData$PartitionData.write
  [ 2] org.apache.kafka.common.message.FetchResponseData$FetchableTopicResponse.write
  [ 3] org.apache.kafka.common.message.FetchResponseData.write
  [ 4] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [ 5] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [ 6] org.apache.kafka.common.requests.AbstractResponse.toSend
  [ 7] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [ 8] kafka.network.RequestChannel$Request.buildResponseSend
  [ 9] kafka.network.RequestChannel.sendResponse
  [10] kafka.server.KafkaApis.processResponseCallback$1
  [11] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [12] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [13] kafka.server.KafkaApis$$Lambda$2665.0x0000000801339450.apply
  [14] kafka.server.ReplicaManager.fetchMessages
  [15] kafka.server.KafkaApis.handleFetchRequest
  [16] kafka.server.KafkaApis.handle
  [17] kafka.server.KafkaRequestHandler.run
  [18] java.lang.Thread.run

--- 47544 bytes (0.00%), 15 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.DelayQueue.poll
  [ 3] kafka.utils.timer.SystemTimer.advanceClock
  [ 4] kafka.server.DelayedOperationPurgatory.advanceClock
  [ 5] kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper.doWork
  [ 6] kafka.utils.ShutdownableThread.run

--- 46240 bytes (0.00%), 3 samples
  [ 0] scala.collection.mutable.ArrayBuffer$$anon$1
  [ 1] scala.collection.mutable.ArrayBuffer$.newBuilder
  [ 2] scala.collection.StrictOptimizedIterableOps.map
  [ 3] scala.collection.StrictOptimizedIterableOps.map$
  [ 4] scala.collection.mutable.ArrayBuffer.map
  [ 5] kafka.server.DelayedFetch.onComplete
  [ 6] kafka.server.DelayedOperation.forceComplete
  [ 7] kafka.server.DelayedOperation.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 46224 bytes (0.00%), 4 samples
  [ 0] kafka.network.Processor$$Lambda$1139+0x00000008010fe250
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] kafka.network.Processor.processCompletedSends
  [ 6] kafka.network.Processor.run
  [ 7] java.lang.Thread.run

--- 44584 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.message.FetchResponseData$EpochEndOffset
  [ 1] org.apache.kafka.common.message.FetchResponseData$PartitionData.<init>
  [ 2] kafka.server.KafkaApis.maybeConvertFetchedData$1
  [ 3] kafka.server.KafkaApis.$anonfun$handleFetchRequest$22
  [ 4] kafka.server.KafkaApis$$Lambda$2691.0x0000000801343758.accept
  [ 5] java.util.ArrayList.forEach
  [ 6] kafka.server.KafkaApis.$anonfun$handleFetchRequest$21
  [ 7] kafka.server.KafkaApis$$Lambda$2690.0x0000000801343520.accept
  [ 8] java.util.ArrayList.forEach
  [ 9] kafka.server.KafkaApis.processResponseCallback$1
  [10] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [11] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [12] kafka.server.KafkaApis$$Lambda$2665.0x0000000801339450.apply
  [13] kafka.server.ReplicaManager.fetchMessages
  [14] kafka.server.KafkaApis.handleFetchRequest
  [15] kafka.server.KafkaApis.handle
  [16] kafka.server.KafkaRequestHandler.run
  [17] java.lang.Thread.run

--- 43704 bytes (0.00%), 2 samples
  [ 0] java.lang.Object[]
  [ 1] scala.collection.mutable.ArrayBuffer.<init>
  [ 2] scala.collection.mutable.ArrayBuffer$.from
  [ 3] scala.collection.mutable.ArrayBuffer$.from
  [ 4] scala.collection.SeqFactory$Delegate.from
  [ 5] scala.collection.IterableOnceOps.toBuffer
  [ 6] scala.collection.IterableOnceOps.toBuffer$
  [ 7] scala.collection.AbstractIterator.toBuffer
  [ 8] kafka.server.AuthHelper.filterByAuthorized
  [ 9] kafka.server.KafkaApis.handleTopicMetadataRequest
  [10] kafka.server.KafkaApis.handle
  [11] kafka.server.KafkaRequestHandler.run
  [12] java.lang.Thread.run

--- 41424 bytes (0.00%), 2 samples
  [ 0] kafka.server.CachedPartition
  [ 1] kafka.server.IncrementalFetchContext$PartitionIterator.hasNext
  [ 2] org.apache.kafka.common.requests.FetchResponse.toMessage
  [ 3] org.apache.kafka.common.requests.FetchResponse.sizeOf
  [ 4] kafka.server.IncrementalFetchContext.getResponseSize
  [ 5] kafka.server.KafkaApis.processResponseCallback$1
  [ 6] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [ 7] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [ 8] kafka.server.KafkaApis$$Lambda$2665.0x0000000801339450.apply
  [ 9] kafka.server.ReplicaManager.fetchMessages
  [10] kafka.server.KafkaApis.handleFetchRequest
  [11] kafka.server.KafkaApis.handle
  [12] kafka.server.KafkaRequestHandler.run
  [13] java.lang.Thread.run

--- 41168 bytes (0.00%), 2 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 40872 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] org.apache.kafka.common.protocol.ByteBufferAccessor.readArray
  [ 2] org.apache.kafka.common.message.JoinGroupRequestData$JoinGroupRequestProtocol.read
  [ 3] org.apache.kafka.common.message.JoinGroupRequestData$JoinGroupRequestProtocol.<init>
  [ 4] org.apache.kafka.common.message.JoinGroupRequestData.read
  [ 5] org.apache.kafka.common.message.JoinGroupRequestData.<init>
  [ 6] org.apache.kafka.common.requests.JoinGroupRequest.parse
  [ 7] org.apache.kafka.common.requests.AbstractRequest.doParseRequest
  [ 8] org.apache.kafka.common.requests.AbstractRequest.parseRequest
  [ 9] org.apache.kafka.common.requests.RequestContext.parseRequest
  [10] kafka.network.RequestChannel$Request.<init>
  [11] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [12] kafka.network.Processor$$Lambda$1138.0x00000008010fba18.accept
  [13] java.util.LinkedHashMap$LinkedValues.forEach
  [14] kafka.network.Processor.processCompletedReceives
  [15] kafka.network.Processor.run
  [16] java.lang.Thread.run

--- 39728 bytes (0.00%), 3 samples
  [ 0] byte[]
  [ 1] jdk.internal.loader.Resource.getBytes
  [ 2] jdk.internal.loader.URLClassPath$JarLoader$2.getBytes
  [ 3] jdk.internal.loader.BuiltinClassLoader.defineClass
  [ 4] jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull
  [ 5] jdk.internal.loader.BuiltinClassLoader.loadClassOrNull
  [ 6] jdk.internal.loader.BuiltinClassLoader.loadClass
  [ 7] jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass
  [ 8] java.lang.ClassLoader.loadClass
  [ 9] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [10] zio.kafka.consumer.internal.Runloop$$Lambda$1536.0x00000008011b04b8.apply
  [11] zio.ZIO.$anonfun$onError$1
  [12] zio.ZIO$$Lambda$1537.0x00000008011b0888.apply
  [13] zio.ZIO.$anonfun$onExit$3
  [14] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 39424 bytes (0.00%), 2 samples
  [ 0] org.apache.kafka.common.requests.FetchRequest$PartitionData
  [ 1] kafka.server.CachedPartition.reqData
  [ 2] kafka.server.IncrementalFetchContext.$anonfun$foreachPartition$3
  [ 3] kafka.server.IncrementalFetchContext$$Lambda$2709.0x000000080134a000.accept
  [ 4] java.lang.Iterable.forEach
  [ 5] kafka.server.IncrementalFetchContext.foreachPartition
  [ 6] kafka.server.KafkaApis.handleFetchRequest
  [ 7] kafka.server.KafkaApis.handle
  [ 8] kafka.server.KafkaRequestHandler.run
  [ 9] java.lang.Thread.run

--- 39160 bytes (0.00%), 2 samples
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.<init>
  [ 2] java.lang.StringBuilder.<init>
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordCompletedReceive
  [ 4] org.apache.kafka.common.network.Selector.addToCompletedReceives
  [ 5] org.apache.kafka.common.network.Selector.attemptRead
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 39136 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.invoke.TypeConvertingMethodAdapter.cast
  [ 2] java.lang.invoke.TypeConvertingMethodAdapter.convertType
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 7] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 9] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [10] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [11] java.lang.invoke.BootstrapMethodInvoker.invoke
  [12] java.lang.invoke.CallSite.makeSite
  [13] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [14] java.lang.invoke.MethodHandleNatives.linkCallSite
  [15] zio.ZIO.orDieWith
  [16] zio.ZIO.orDieWith$
  [17] zio.ZIO$OnSuccess.orDieWith
  [18] zio.ZIO.orDie
  [19] zio.ZIO.orDie$
  [20] zio.ZIO$OnSuccess.orDie
  [21] zio.kafka.producer.Producer$Live.close
  [22] zio.kafka.producer.Producer$.$anonfun$make$10
  [23] zio.kafka.producer.Producer$$$Lambda$1323.0x0000000801163278.apply
  [24] zio.ZIO$.$anonfun$acquireRelease$1
  [25] zio.ZIO$$$Lambda$339.0x0000000800dd5068.apply
  [26] zio.ZIO$.$anonfun$acquireReleaseExit$3
  [27] zio.ZIO$$$Lambda$1146.0x0000000801100790.apply
  [28] zio.ZIO$.$anonfun$addFinalizerExit$3
  [29] zio.ZIO$$$Lambda$1150.0x0000000801102078.apply
  [30] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$releaseAll$2
  [31] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2756.0x000000080135f690.apply
  [32] zio.ZIO$.$anonfun$foreach$3
  [33] zio.ZIO$$$Lambda$2285.0x00000008012b2398.apply
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.evaluateEffect
  [36] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [37] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [38] zio.internal.FiberRuntime.run
  [39] zio.internal.ZScheduler$$anon$4.run

--- 37448 bytes (0.00%), 1 sample
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ExclusiveNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 3] java.util.concurrent.locks.ReentrantLock$Sync.lock
  [ 4] java.util.concurrent.locks.ReentrantLock.lock
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add
  [ 8] java.util.concurrent.ScheduledThreadPoolExecutor.reExecutePeriodic
  [ 9] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 37056 bytes (0.00%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] java.util.Arrays.copyOf
  [ 2] java.util.Arrays.copyOf
  [ 3] java.util.ArrayDeque.grow
  [ 4] java.util.ArrayDeque.addLast
  [ 5] java.util.ArrayDeque.add
  [ 6] org.apache.kafka.common.protocol.SendBuilder.addSend
  [ 7] org.apache.kafka.common.protocol.SendBuilder.writeRecords
  [ 8] org.apache.kafka.common.message.FetchResponseData$PartitionData.write
  [ 9] org.apache.kafka.common.message.FetchResponseData$FetchableTopicResponse.write
  [10] org.apache.kafka.common.message.FetchResponseData.write
  [11] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [12] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [13] org.apache.kafka.common.requests.AbstractResponse.toSend
  [14] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [15] kafka.network.RequestChannel$Request.buildResponseSend
  [16] kafka.network.RequestChannel.sendResponse
  [17] kafka.server.KafkaApis.processResponseCallback$1
  [18] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [19] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [20] kafka.server.KafkaApis$$Lambda$2665.0x0000000801339450.apply
  [21] kafka.server.ReplicaManager.fetchMessages
  [22] kafka.server.KafkaApis.handleFetchRequest
  [23] kafka.server.KafkaApis.handle
  [24] kafka.server.KafkaRequestHandler.run
  [25] java.lang.Thread.run

--- 37040 bytes (0.00%), 1 sample
  [ 0] java.nio.HeapByteBuffer
  [ 1] java.nio.ByteBuffer.wrap
  [ 2] java.nio.ByteBuffer.wrap
  [ 3] org.apache.kafka.common.utils.Utils.wrapNullable
  [ 4] org.apache.kafka.common.record.MemoryRecordsBuilder.append
  [ 5] kafka.coordinator.group.GroupMetadataManager.storeGroup
  [ 6] kafka.coordinator.group.GroupCoordinator.$anonfun$onCompleteJoin$1
  [ 7] kafka.coordinator.group.GroupCoordinator$$Lambda$2555.0x0000000801317ca0.apply
  [ 8] kafka.coordinator.group.GroupMetadata.inLock
  [ 9] kafka.coordinator.group.GroupCoordinator.onCompleteJoin
  [10] kafka.coordinator.group.DelayedJoin.onComplete
  [11] kafka.server.DelayedOperation.forceComplete
  [12] kafka.coordinator.group.DelayedJoin.$anonfun$tryComplete$1
  [13] kafka.coordinator.group.DelayedJoin$$Lambda$2733.0x0000000801356000.apply$mcZ$sp
  [14] kafka.coordinator.group.GroupCoordinator.$anonfun$tryCompleteJoin$1
  [15] kafka.coordinator.group.GroupCoordinator$$Lambda$2734.0x00000008013562e0.apply$mcZ$sp
  [16] scala.runtime.java8.JFunction0$mcZ$sp.apply
  [17] kafka.coordinator.group.GroupMetadata.inLock
  [18] kafka.coordinator.group.GroupCoordinator.tryCompleteJoin
  [19] kafka.coordinator.group.DelayedJoin.tryComplete
  [20] kafka.server.DelayedOperation.safeTryCompleteOrElse
  [21] kafka.server.DelayedOperationPurgatory.tryCompleteElseWatch
  [22] kafka.coordinator.group.GroupCoordinator.prepareRebalance
  [23] kafka.coordinator.group.GroupCoordinator.$anonfun$maybePrepareRebalance$1
  [24] kafka.coordinator.group.GroupCoordinator$$Lambda$2551.0x00000008013168c8.apply$mcV$sp
  [25] scala.runtime.java8.JFunction0$mcV$sp.apply
  [26] kafka.coordinator.group.GroupMetadata.inLock
  [27] kafka.coordinator.group.GroupCoordinator.maybePrepareRebalance
  [28] kafka.coordinator.group.GroupCoordinator.removeMemberAndUpdateGroup
  [29] kafka.coordinator.group.GroupCoordinator.removeCurrentMemberFromGroup$1
  [30] kafka.coordinator.group.GroupCoordinator.$anonfun$handleLeaveGroup$8
  [31] kafka.coordinator.group.GroupCoordinator$$Lambda$2728.0x0000000801352da8.apply
  [32] scala.Option.getOrElse
  [33] kafka.coordinator.group.GroupCoordinator.$anonfun$handleLeaveGroup$5
  [34] kafka.coordinator.group.GroupCoordinator$$Lambda$2727.0x00000008013529d8.apply
  [35] scala.collection.immutable.List.map
  [36] kafka.coordinator.group.GroupCoordinator.$anonfun$handleLeaveGroup$4
  [37] kafka.coordinator.group.GroupCoordinator$$Lambda$2725.0x00000008013521d8.apply$mcV$sp
  [38] scala.runtime.java8.JFunction0$mcV$sp.apply
  [39] kafka.coordinator.group.GroupMetadata.inLock
  [40] kafka.coordinator.group.GroupCoordinator.handleLeaveGroup
  [41] kafka.coordinator.group.GroupCoordinatorAdapter.leaveGroup
  [42] kafka.server.KafkaApis.handleLeaveGroupRequest
  [43] kafka.server.KafkaApis.handle
  [44] kafka.server.KafkaRequestHandler.run
  [45] java.lang.Thread.run

--- 37040 bytes (0.00%), 1 sample
  [ 0] java.nio.HeapByteBuffer
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.ByteBuffer.position
  [ 4] org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatch
  [ 5] org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatch
  [ 6] org.apache.kafka.common.record.RecordBatchIterator.makeNext
  [ 7] org.apache.kafka.common.record.RecordBatchIterator.makeNext
  [ 8] org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext
  [ 9] org.apache.kafka.common.utils.AbstractIterator.hasNext
  [10] java.lang.Iterable.forEach
  [11] kafka.log.UnifiedLog.analyzeAndValidateProducerState
  [12] kafka.log.UnifiedLog.append
  [13] kafka.log.UnifiedLog.appendAsLeader
  [14] kafka.cluster.Partition.$anonfun$appendRecordsToLeader$1
  [15] kafka.cluster.Partition.appendRecordsToLeader
  [16] kafka.server.ReplicaManager.$anonfun$appendToLocalLog$6
  [17] kafka.server.ReplicaManager$$Lambda$2341.0x00000008012c27a8.apply
  [18] scala.collection.Iterator$$anon$9.next
  [19] scala.collection.mutable.Growable.addAll
  [20] scala.collection.mutable.Growable.addAll$
  [21] scala.collection.immutable.MapBuilderImpl.addAll
  [22] scala.collection.immutable.Map$.from
  [23] scala.collection.immutable.Map$.from
  [24] scala.collection.MapOps.map
  [25] scala.collection.MapOps.map$
  [26] scala.collection.AbstractMap.map
  [27] kafka.server.ReplicaManager.appendToLocalLog
  [28] kafka.server.ReplicaManager.appendRecords
  [29] kafka.coordinator.group.GroupMetadataManager.storeGroup
  [30] kafka.coordinator.group.GroupCoordinator.$anonfun$doSyncGroup$1
  [31] kafka.coordinator.group.GroupCoordinator$$Lambda$2576.0x000000080131bbd0.apply$mcV$sp
  [32] scala.runtime.java8.JFunction0$mcV$sp.apply
  [33] kafka.coordinator.group.GroupMetadata.inLock
  [34] kafka.coordinator.group.GroupCoordinator.handleSyncGroup
  [35] kafka.coordinator.group.GroupCoordinatorAdapter.syncGroup
  [36] kafka.server.KafkaApis.handleSyncGroupRequest
  [37] kafka.server.KafkaApis.handle
  [38] kafka.server.KafkaRequestHandler.run
  [39] java.lang.Thread.run

--- 37024 bytes (0.00%), 4 samples
  [ 0] java.lang.Integer
  [ 1] java.lang.Integer.valueOf
  [ 2] org.apache.kafka.common.record.MultiRecordsSend.writeTo
  [ 3] org.apache.kafka.common.network.NetworkSend.writeTo
  [ 4] org.apache.kafka.common.network.KafkaChannel.write
  [ 5] org.apache.kafka.common.network.Selector.write
  [ 6] org.apache.kafka.common.network.Selector.attemptWrite
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] kafka.network.Processor.poll
  [10] kafka.network.Processor.run
  [11] java.lang.Thread.run

--- 36792 bytes (0.00%), 1 sample
  [ 0] kafka.log.LocalLog$$Lambda$2672+0x000000080133b278
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] kafka.log.LocalLog.read
  [ 4] kafka.log.UnifiedLog.read
  [ 5] kafka.cluster.Partition.readRecords
  [ 6] kafka.cluster.Partition.readFromLocalLog$1
  [ 7] kafka.cluster.Partition.$anonfun$fetchRecords$2
  [ 8] kafka.cluster.Partition.fetchRecords
  [ 9] kafka.server.ReplicaManager.read$1
  [10] kafka.server.ReplicaManager.$anonfun$readFromLocalLog$7
  [11] kafka.server.ReplicaManager$$Lambda$2666.0x0000000801339820.apply
  [12] scala.collection.IterableOnceOps.foreach
  [13] scala.collection.IterableOnceOps.foreach$
  [14] scala.collection.AbstractIterable.foreach
  [15] kafka.server.ReplicaManager.readFromLocalLog
  [16] kafka.server.ReplicaManager.fetchMessages
  [17] kafka.server.KafkaApis.handleFetchRequest
  [18] kafka.server.KafkaApis.handle
  [19] kafka.server.KafkaRequestHandler.run
  [20] java.lang.Thread.run

--- 36792 bytes (0.00%), 1 sample
  [ 0] scala.Some
  [ 1] scala.collection.mutable.HashMap$Node.value_$eq
  [ 2] scala.collection.mutable.HashMap.put0
  [ 3] scala.collection.mutable.HashMap.put0
  [ 4] scala.collection.mutable.HashMap.put
  [ 5] scala.collection.IterableOps.$anonfun$groupMapReduce$1
  [ 6] scala.collection.IterableOps$$Lambda$1350.0x000000080116f8a0.apply
  [ 7] scala.collection.IterableOnceOps.foreach
  [ 8] scala.collection.IterableOnceOps.foreach$
  [ 9] scala.collection.AbstractIterable.foreach
  [10] scala.collection.IterableOps.groupMapReduce
  [11] scala.collection.IterableOps.groupMapReduce$
  [12] scala.collection.AbstractIterable.groupMapReduce
  [13] kafka.server.AuthHelper.filterByAuthorized
  [14] kafka.server.KafkaApis.handleFetchRequest
  [15] kafka.server.KafkaApis.handle
  [16] kafka.server.KafkaRequestHandler.run
  [17] java.lang.Thread.run

--- 35848 bytes (0.00%), 3 samples
  [ 0] org.apache.kafka.common.requests.RequestContext
  [ 1] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [ 2] kafka.network.Processor$$Lambda$1138.0x00000008010fba18.accept
  [ 3] java.util.LinkedHashMap$LinkedValues.forEach
  [ 4] kafka.network.Processor.processCompletedReceives
  [ 5] kafka.network.Processor.run
  [ 6] java.lang.Thread.run

--- 34648 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.record.FileLogInputStream
  [ 1] org.apache.kafka.common.record.FileRecords.batchIterator
  [ 2] org.apache.kafka.common.record.FileRecords.lambda$batchesFrom$0
  [ 3] org.apache.kafka.common.record.FileRecords$$Lambda$2155.0x0000000801284100.iterator
  [ 4] org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize
  [ 5] kafka.log.LogSegment.translateOffset
  [ 6] kafka.log.LogSegment.read
  [ 7] kafka.log.LocalLog.$anonfun$read$2
  [ 8] kafka.log.LocalLog.read
  [ 9] kafka.log.UnifiedLog.read
  [10] kafka.cluster.Partition.readRecords
  [11] kafka.cluster.Partition.readFromLocalLog$1
  [12] kafka.cluster.Partition.$anonfun$fetchRecords$2
  [13] kafka.cluster.Partition.fetchRecords
  [14] kafka.server.ReplicaManager.read$1
  [15] kafka.server.ReplicaManager.$anonfun$readFromLocalLog$7
  [16] kafka.server.ReplicaManager$$Lambda$2666.0x0000000801339820.apply
  [17] scala.collection.IterableOnceOps.foreach
  [18] scala.collection.IterableOnceOps.foreach$
  [19] scala.collection.AbstractIterable.foreach
  [20] kafka.server.ReplicaManager.readFromLocalLog
  [21] kafka.server.ReplicaManager.fetchMessages
  [22] kafka.server.KafkaApis.handleFetchRequest
  [23] kafka.server.KafkaApis.handle
  [24] kafka.server.KafkaRequestHandler.run
  [25] java.lang.Thread.run

--- 34504 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.TopicPartition
  [ 1] org.apache.kafka.common.requests.FetchRequest.lambda$null$2
  [ 2] org.apache.kafka.common.requests.FetchRequest$$Lambda$2658.0x00000008013328d8.accept
  [ 3] java.util.ArrayList.forEach
  [ 4] org.apache.kafka.common.requests.FetchRequest.lambda$fetchData$3
  [ 5] org.apache.kafka.common.requests.FetchRequest$$Lambda$2657.0x00000008013326a0.accept
  [ 6] java.util.ArrayList.forEach
  [ 7] org.apache.kafka.common.requests.FetchRequest.fetchData
  [ 8] kafka.server.KafkaApis.handleFetchRequest
  [ 9] kafka.server.KafkaApis.handle
  [10] kafka.server.KafkaRequestHandler.run
  [11] java.lang.Thread.run

--- 33600 bytes (0.00%), 8 samples
  [ 0] java.lang.Object[]
  [ 1] java.util.Arrays.copyOf
  [ 2] java.util.Arrays.copyOf
  [ 3] java.util.ArrayList.grow
  [ 4] java.util.ArrayList.grow
  [ 5] java.util.ArrayList.add
  [ 6] java.util.ArrayList.add
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [15] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2482.0x00000008012facb0.apply$mcV$sp
  [16] scala.runtime.java8.JFunction0$mcV$sp.apply
  [17] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [18] zio.ZIOCompanionVersionSpecific$$Lambda$365.0x0000000800dde498.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 32576 bytes (0.00%), 2 samples
  [ 0] byte[]
  [ 1] jdk.internal.loader.Resource.getBytes
  [ 2] jdk.internal.loader.URLClassPath$JarLoader$2.getBytes
  [ 3] jdk.internal.loader.BuiltinClassLoader.defineClass
  [ 4] jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull
  [ 5] jdk.internal.loader.BuiltinClassLoader.loadClassOrNull
  [ 6] jdk.internal.loader.BuiltinClassLoader.loadClass
  [ 7] jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass
  [ 8] java.lang.ClassLoader.loadClass
  [ 9] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [10] zio.kafka.consumer.internal.Runloop$$Lambda$1536.0x00000008011b04b8.apply
  [11] zio.ZIO.$anonfun$onError$1
  [12] zio.ZIO$$Lambda$1537.0x00000008011b0888.apply
  [13] zio.ZIO.$anonfun$onExit$3
  [14] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 32360 bytes (0.00%), 3 samples
  [ 0] org.apache.kafka.common.utils.Timer
  [ 1] org.apache.kafka.common.utils.Timer.reset
  [ 2] org.apache.kafka.common.utils.Timer.<init>
  [ 3] org.apache.kafka.common.utils.Time.timer
  [ 4] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup
  [ 5] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run

--- 30352 bytes (0.00%), 2 samples
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordCompletedSend
  [ 4] org.apache.kafka.common.network.Selector.write
  [ 5] org.apache.kafka.common.network.Selector.attemptWrite
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 30304 bytes (0.00%), 2 samples
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordCompletedReceive
  [ 4] org.apache.kafka.common.network.Selector.addToCompletedReceives
  [ 5] org.apache.kafka.common.network.Selector.attemptRead
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 30200 bytes (0.00%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] scala.collection.mutable.ArrayBuffer.<init>
  [ 2] scala.collection.mutable.ArrayBuffer$$anon$1.<init>
  [ 3] scala.collection.mutable.ArrayBuffer$.newBuilder
  [ 4] scala.collection.StrictOptimizedIterableOps.zip
  [ 5] scala.collection.StrictOptimizedIterableOps.zip$
  [ 6] scala.collection.mutable.ArrayBuffer.zip
  [ 7] kafka.server.AuthHelper.filterByAuthorized
  [ 8] kafka.server.KafkaApis.handleFetchRequest
  [ 9] kafka.server.KafkaApis.handle
  [10] kafka.server.KafkaRequestHandler.run
  [11] java.lang.Thread.run

--- 28112 bytes (0.00%), 2 samples
  [ 0] java.lang.Object[]
  [ 1] java.util.IdentityHashMap.init
  [ 2] java.util.IdentityHashMap.<init>
  [ 3] org.apache.kafka.common.protocol.ObjectSerializationCache.<init>
  [ 4] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [ 5] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [ 6] org.apache.kafka.common.requests.AbstractResponse.toSend
  [ 7] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [ 8] kafka.network.RequestChannel$Request.buildResponseSend
  [ 9] kafka.network.RequestChannel.sendResponse
  [10] kafka.server.KafkaApis.processResponseCallback$1
  [11] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [12] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [13] kafka.server.KafkaApis$$Lambda$2665.0x0000000801339450.apply
  [14] kafka.server.ReplicaManager.fetchMessages
  [15] kafka.server.KafkaApis.handleFetchRequest
  [16] kafka.server.KafkaApis.handle
  [17] kafka.server.KafkaRequestHandler.run
  [18] java.lang.Thread.run

--- 27608 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.nio.HeapByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.allocate
  [ 3] org.apache.kafka.common.memory.MemoryPool$1.tryAllocate
  [ 4] org.apache.kafka.common.network.NetworkReceive.readFrom
  [ 5] org.apache.kafka.common.network.KafkaChannel.receive
  [ 6] org.apache.kafka.common.network.KafkaChannel.read
  [ 7] org.apache.kafka.common.network.Selector.attemptRead
  [ 8] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 9] org.apache.kafka.common.network.Selector.poll
  [10] kafka.network.Processor.poll
  [11] kafka.network.Processor.run
  [12] java.lang.Thread.run

--- 27528 bytes (0.00%), 3 samples
  [ 0] kafka.coordinator.group.InitialDelayedJoin$$Lambda$2554+0x00000008013179e0
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] kafka.coordinator.group.InitialDelayedJoin.onComplete
  [ 4] kafka.server.DelayedOperation.forceComplete
  [ 5] kafka.server.DelayedOperation.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 27112 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ClassWriter.toByteArray
  [ 2] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] zio.ZIO$.foreachParUnbounded
  [14] zio.ZIO$.$anonfun$foreachPar$1
  [15] zio.ZIO$$$Lambda$2867.0x000000080137c4e0.apply
  [16] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [17] zio.FiberRef$unsafe$$anon$2$$Lambda$1668.0x00000008011d70f8.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] zio.internal.ZScheduler$$anon$4.run

--- 26984 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry[]
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.<init>
  [ 2] jdk.internal.org.objectweb.asm.ClassWriter.<init>
  [ 3] jdk.internal.org.objectweb.asm.ClassWriter.<init>
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] zio.ZIO$.$anonfun$foreachParUnbounded$1
  [14] zio.ZIO$$$Lambda$2869.0x000000080137cc78.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] zio.internal.ZScheduler$$anon$4.run

--- 26984 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.Thread.interrupted
  [ 2] jdk.internal.loader.Resource.getBytes
  [ 3] jdk.internal.loader.URLClassPath$JarLoader$2.getBytes
  [ 4] jdk.internal.loader.BuiltinClassLoader.defineClass
  [ 5] jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull
  [ 6] jdk.internal.loader.BuiltinClassLoader.loadClassOrNull
  [ 7] jdk.internal.loader.BuiltinClassLoader.loadClass
  [ 8] jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass
  [ 9] java.lang.ClassLoader.loadClass
  [10] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [11] zio.kafka.consumer.internal.Runloop$$Lambda$1536.0x00000008011b04b8.apply
  [12] zio.ZIO.$anonfun$onError$1
  [13] zio.ZIO$$Lambda$1537.0x00000008011b0888.apply
  [14] zio.ZIO.$anonfun$onExit$3
  [15] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.evaluateEffect
  [18] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [19] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [20] zio.internal.FiberRuntime.run
  [21] zio.internal.ZScheduler$$anon$4.run

--- 26944 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ClassWriter.toByteArray
  [ 2] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] zio.Cause.flatMap
  [14] zio.Cause.map
  [15] zio.stream.Take$.failCause
  [16] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [17] zio.kafka.consumer.internal.Runloop$$Lambda$1536.0x00000008011b04b8.apply
  [18] zio.ZIO.$anonfun$onError$1
  [19] zio.ZIO$$Lambda$1537.0x00000008011b0888.apply
  [20] zio.ZIO.$anonfun$onExit$3
  [21] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] zio.internal.ZScheduler$$anon$4.run

--- 26760 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ByteVector.putUTF8
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
  [ 5] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMethodref
  [ 6] jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn
  [ 7] jdk.internal.org.objectweb.asm.MethodVisitor.visitMethodInsn
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [11] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [12] java.lang.invoke.LambdaMetafactory.altMetafactory
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [14] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [15] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [16] java.lang.invoke.BootstrapMethodInvoker.invoke
  [17] java.lang.invoke.CallSite.makeSite
  [18] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [19] java.lang.invoke.MethodHandleNatives.linkCallSite
  [20] zio.stream.internal.ChannelExecutor.$anonfun$runFinalizers$2
  [21] zio.stream.internal.ChannelExecutor$$Lambda$2812.0x000000080136f868.apply
  [22] zio.ZIO.$anonfun$map$2
  [23] zio.ZIO$$Lambda$136.0x0000000800d683c8.apply
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.runLoop
  [65] zio.internal.FiberRuntime.runLoop
  [66] zio.internal.FiberRuntime.runLoop
  [67] zio.internal.FiberRuntime.runLoop
  [68] zio.internal.FiberRuntime.runLoop
  [69] zio.internal.FiberRuntime.runLoop
  [70] zio.internal.FiberRuntime.runLoop
  [71] zio.internal.FiberRuntime.runLoop
  [72] zio.internal.FiberRuntime.runLoop
  [73] zio.internal.FiberRuntime.evaluateEffect
  [74] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [75] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [76] zio.internal.FiberRuntime.run
  [77] zio.internal.ZScheduler$$anon$4.run

--- 26704 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.Object.clone
  [ 2] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.stream.ZChannel.$anonfun$runScoped$5
  [15] zio.stream.ZChannel$$Lambda$1476.0x0000000801199f58.apply
  [16] zio.ZIO$ReleaseExit.$anonfun$apply$13
  [17] zio.ZIO$ReleaseExit$$Lambda$1355.0x000000080116b078.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] zio.internal.ZScheduler$$anon$4.run

--- 26528 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.Object.clone
  [ 2] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.Queue$$anon$1.removeTaker
  [15] zio.Queue$$anon$1.$anonfun$take$3
  [16] zio.Queue$$anon$1$$Lambda$1676.0x00000008011d8b00.apply
  [17] zio.ZIO.$anonfun$onInterrupt$1
  [18] zio.ZIO$$Lambda$327.0x0000000800dcb1b0.apply
  [19] zio.ZIO.$anonfun$onExit$3
  [20] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] zio.internal.ZScheduler$$anon$4.run

--- 26440 bytes (0.00%), 6 samples
  [ 0] int[]
  [ 1] java.util.regex.Pattern.matcher
  [ 2] org.apache.kafka.common.utils.Sanitizer.jmxSanitize
  [ 3] org.apache.kafka.common.metrics.JmxReporter.getMBeanName
  [ 4] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [ 5] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 6] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 7] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [ 8] org.apache.kafka.common.utils.Utils.closeQuietly
  [ 9] org.apache.kafka.common.network.Selector.close
  [10] kafka.network.Processor.closeAll
  [11] kafka.network.Processor.$anonfun$run$8
  [12] kafka.network.Processor$$Lambda$2930.0x000000080138a108.apply$mcV$sp
  [13] kafka.utils.CoreUtils$.swallow
  [14] kafka.network.Processor.run
  [15] java.lang.Thread.run

--- 26408 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.Object.clone
  [ 2] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.Cause.stripFailures
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 26344 bytes (0.00%), 1 sample
  [ 0] scala.collection.immutable.BitmapIndexedMapNode
  [ 1] scala.collection.immutable.BitmapIndexedMapNode.copyAndInsertValue
  [ 2] scala.collection.immutable.BitmapIndexedMapNode.updated
  [ 3] scala.collection.immutable.HashMap.updated
  [ 4] scala.collection.immutable.Map$Map4.updated
  [ 5] scala.collection.immutable.Map$Map4.updated
  [ 6] zio.FiberRefs.updatedAs
  [ 7] zio.internal.FiberRuntime.setFiberRef
  [ 8] zio.internal.FiberRuntime.addInterruptedCause
  [ 9] zio.internal.FiberRuntime.processNewInterruptSignal
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 26336 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.StringLatin1.replace
  [ 2] java.lang.String.replace
  [ 3] java.lang.Class.descriptorString
  [ 4] sun.invoke.util.BytecodeDescriptor.unparse
  [ 5] java.lang.invoke.TypeConvertingMethodAdapter.convertType
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.Scope$ReleaseMap$unsafe$$anon$3.release
  [19] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$add$2
  [20] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$285.0x0000000800dbaab8.apply
  [21] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$releaseAll$2
  [22] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2756.0x000000080135f690.apply
  [23] zio.ZIO$.$anonfun$foreach$3
  [24] zio.ZIO$$$Lambda$2285.0x00000008012b2398.apply
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.evaluateEffect
  [31] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [32] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [33] zio.internal.FiberRuntime.run
  [34] zio.internal.ZScheduler$$anon$4.run

--- 26304 bytes (0.00%), 1 sample
  [ 0] char[]
  [ 1] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 2] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 3] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 7] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 9] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [10] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [11] java.lang.invoke.BootstrapMethodInvoker.invoke
  [12] java.lang.invoke.CallSite.makeSite
  [13] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [14] java.lang.invoke.MethodHandleNatives.linkCallSite
  [15] zio.Queue$Strategy$BackPressure.$anonfun$shutdown$9
  [16] zio.Queue$Strategy$BackPressure$$Lambda$2865.0x000000080137bd40.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] zio.internal.ZScheduler$$anon$4.run

--- 26304 bytes (0.00%), 1 sample
  [ 0] char[]
  [ 1] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 2] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 3] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 7] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 9] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [10] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [11] java.lang.invoke.BootstrapMethodInvoker.invoke
  [12] java.lang.invoke.CallSite.makeSite
  [13] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [14] java.lang.invoke.MethodHandleNatives.linkCallSite
  [15] zio.Cause.flatMap
  [16] zio.Cause.map
  [17] zio.stream.Take$.failCause
  [18] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [19] zio.kafka.consumer.internal.Runloop$$Lambda$1536.0x00000008011b04b8.apply
  [20] zio.ZIO.$anonfun$onError$1
  [21] zio.ZIO$$Lambda$1537.0x00000008011b0888.apply
  [22] zio.ZIO.$anonfun$onExit$3
  [23] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] zio.internal.ZScheduler$$anon$4.run

--- 26248 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ByteVector.enlarge
  [ 2] jdk.internal.org.objectweb.asm.ByteVector.put122
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantFieldref
  [ 5] jdk.internal.org.objectweb.asm.MethodWriter.visitFieldInsn
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateConstructor
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.Hub$Strategy$BackPressure.$anonfun$shutdown$14
  [19] zio.Hub$Strategy$BackPressure$$Lambda$2827.0x00000008013731e8.apply
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.evaluateEffect
  [27] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [28] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [29] zio.internal.FiberRuntime.run
  [30] zio.internal.ZScheduler$$anon$4.run

--- 26248 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ByteVector.enlarge
  [ 2] jdk.internal.org.objectweb.asm.ByteVector.put122
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
  [ 5] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMethodref
  [ 6] jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateConstructor
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [11] java.lang.invoke.LambdaMetafactory.altMetafactory
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [13] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [14] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [15] java.lang.invoke.BootstrapMethodInvoker.invoke
  [16] java.lang.invoke.CallSite.makeSite
  [17] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [18] java.lang.invoke.MethodHandleNatives.linkCallSite
  [19] zio.ZIO$.foreachParDiscard
  [20] zio.Hub$Strategy$BackPressure.$anonfun$shutdown$16
  [21] zio.Hub$Strategy$BackPressure$$Lambda$2829.0x0000000801373878.apply
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.evaluateEffect
  [29] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [30] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [31] zio.internal.FiberRuntime.run
  [32] zio.internal.ZScheduler$$anon$4.run

--- 26168 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.MethodWriter
  [ 1] jdk.internal.org.objectweb.asm.ClassWriter.visitMethod
  [ 2] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.Queue$Strategy$BackPressure.shutdown
  [15] zio.Queue$$anon$1.$anonfun$shutdown$6
  [16] zio.Queue$$anon$1$$Lambda$2862.0x000000080137b3f0.apply
  [17] zio.ZIO.$anonfun$$times$greater$1
  [18] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] zio.internal.ZScheduler$$anon$4.run

--- 26168 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.MethodWriter
  [ 1] jdk.internal.org.objectweb.asm.ClassWriter.visitMethod
  [ 2] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.Cause.flatMap
  [15] zio.Cause.map
  [16] zio.stream.Take$.failCause
  [17] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [18] zio.kafka.consumer.internal.Runloop$$Lambda$1536.0x00000008011b04b8.apply
  [19] zio.ZIO.$anonfun$onError$1
  [20] zio.ZIO$$Lambda$1537.0x00000008011b0888.apply
  [21] zio.ZIO.$anonfun$onExit$3
  [22] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.evaluateEffect
  [25] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [26] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [27] zio.internal.FiberRuntime.run
  [28] zio.internal.ZScheduler$$anon$4.run

--- 26080 bytes (0.00%), 1 sample
  [ 0] char[]
  [ 1] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 2] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 3] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 7] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 9] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [10] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [11] java.lang.invoke.BootstrapMethodInvoker.invoke
  [12] java.lang.invoke.CallSite.makeSite
  [13] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [14] java.lang.invoke.MethodHandleNatives.linkCallSite
  [15] zio.Hub$$anon$1.$anonfun$shutdown$1
  [16] zio.Hub$$anon$1$$Lambda$2822.0x0000000801372318.apply
  [17] zio.ZIO$.$anonfun$fiberIdWith$1
  [18] zio.ZIO$$$Lambda$225.0x0000000800da52e8.apply
  [19] zio.ZIO$.$anonfun$descriptorWith$1
  [20] zio.ZIO$$$Lambda$226.0x0000000800da56b8.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] zio.internal.ZScheduler$$anon$4.run

--- 26000 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass
  [ 3] jdk.internal.org.objectweb.asm.ClassWriter.visit
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 7] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 9] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [10] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [11] java.lang.invoke.BootstrapMethodInvoker.invoke
  [12] java.lang.invoke.CallSite.makeSite
  [13] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [14] java.lang.invoke.MethodHandleNatives.linkCallSite
  [15] zio.ZIO$.foreachDiscard
  [16] zio.stream.internal.ChannelExecutor.$anonfun$finishSubexecutorWithCloseEffect$1
  [17] zio.stream.internal.ChannelExecutor$$Lambda$1830.0x0000000801212d50.apply
  [18] zio.stream.internal.ChannelExecutor.$anonfun$runFinalizers$1
  [19] zio.stream.internal.ChannelExecutor$$Lambda$2810.0x000000080136f1d8.apply
  [20] zio.ZIO$.$anonfun$foreach$3
  [21] zio.ZIO$$$Lambda$2285.0x00000008012b2398.apply
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.evaluateEffect
  [45] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [46] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [47] zio.internal.FiberRuntime.run
  [48] zio.internal.ZScheduler$$anon$4.run

--- 26000 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.put
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass
  [ 5] jdk.internal.org.objectweb.asm.MethodWriter.visitTypeInsn
  [ 6] jdk.internal.org.objectweb.asm.MethodVisitor.visitTypeInsn
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [11] java.lang.invoke.LambdaMetafactory.altMetafactory
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [13] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [14] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [15] java.lang.invoke.BootstrapMethodInvoker.invoke
  [16] java.lang.invoke.CallSite.makeSite
  [17] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [18] java.lang.invoke.MethodHandleNatives.linkCallSite
  [19] zio.Queue$$anon$1.$anonfun$shutdown$3
  [20] zio.Queue$$anon$1$$Lambda$2859.0x000000080137aaa0.apply
  [21] zio.ZIO$WhenZIO$.$anonfun$apply$5
  [22] zio.ZIO$WhenZIO$.$anonfun$apply$5$adapted
  [23] zio.ZIO$WhenZIO$$$Lambda$2761.0x0000000801361f50.apply
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.evaluateEffect
  [30] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [31] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [32] zio.internal.FiberRuntime.run
  [33] zio.internal.ZScheduler$$anon$4.run

--- 26000 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass
  [ 3] jdk.internal.org.objectweb.asm.ClassWriter.visit
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 7] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 9] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [10] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [11] java.lang.invoke.BootstrapMethodInvoker.invoke
  [12] java.lang.invoke.CallSite.makeSite
  [13] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [14] java.lang.invoke.MethodHandleNatives.linkCallSite
  [15] zio.Cause.flatMap
  [16] zio.Cause.map
  [17] zio.stream.Take$.failCause
  [18] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [19] zio.kafka.consumer.internal.Runloop$$Lambda$1536.0x00000008011b04b8.apply
  [20] zio.ZIO.$anonfun$onError$1
  [21] zio.ZIO$$Lambda$1537.0x00000008011b0888.apply
  [22] zio.ZIO.$anonfun$onExit$3
  [23] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] zio.internal.ZScheduler$$anon$4.run

--- 26000 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.lambdaClassName
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] zio.ZIO$.$anonfun$foreachDiscard$1
  [14] zio.ZIO$$$Lambda$2851.0x0000000801379160.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.evaluateEffect
  [41] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [42] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [43] zio.internal.FiberRuntime.run
  [44] zio.internal.ZScheduler$$anon$4.run

--- 26000 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantString
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstant
  [ 4] jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn
  [ 5] jdk.internal.org.objectweb.asm.MethodVisitor.visitLdcInsn
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.stream.internal.ChannelExecutor.$anonfun$finishSubexecutorWithCloseEffect$1
  [19] zio.stream.internal.ChannelExecutor$$Lambda$1830.0x0000000801212d50.apply
  [20] zio.stream.internal.ChannelExecutor.$anonfun$runFinalizers$1
  [21] zio.stream.internal.ChannelExecutor$$Lambda$2810.0x000000080136f1d8.apply
  [22] zio.ZIO$.$anonfun$foreach$3
  [23] zio.ZIO$$$Lambda$2285.0x00000008012b2398.apply
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.evaluateEffect
  [47] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [48] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [49] zio.internal.FiberRuntime.run
  [50] zio.internal.ZScheduler$$anon$4.run

--- 26000 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.put
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.MethodWriter.<init>
  [ 4] jdk.internal.org.objectweb.asm.ClassWriter.visitMethod
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.ZIO$.$anonfun$foreachParUnbounded$1
  [18] zio.ZIO$$$Lambda$2869.0x000000080137cc78.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] zio.internal.ZScheduler$$anon$4.run

--- 26000 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.setMajorVersionAndClassName
  [ 4] jdk.internal.org.objectweb.asm.ClassWriter.visit
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 8] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [10] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [11] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [12] java.lang.invoke.BootstrapMethodInvoker.invoke
  [13] java.lang.invoke.CallSite.makeSite
  [14] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [15] java.lang.invoke.MethodHandleNatives.linkCallSite
  [16] zio.Queue$Strategy$BackPressure.$anonfun$shutdown$9
  [17] zio.Queue$Strategy$BackPressure$$Lambda$2865.0x000000080137bd40.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.evaluateEffect
  [25] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [26] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [27] zio.internal.FiberRuntime.run
  [28] zio.internal.ZScheduler$$anon$4.run

--- 26000 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.put
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.MethodWriter.<init>
  [ 4] jdk.internal.org.objectweb.asm.ClassWriter.visitMethod
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.Queue$$anon$1.shutdown
  [18] zio.stream.ZChannel$.$anonfun$mergeAllWith$13
  [19] zio.stream.ZChannel$$$Lambda$1693.0x00000008011e03d0.apply
  [20] zio.ZIO$.$anonfun$acquireRelease$1
  [21] zio.ZIO$$$Lambda$339.0x0000000800dd5068.apply
  [22] zio.ZIO$.$anonfun$acquireReleaseExit$3
  [23] zio.ZIO$$$Lambda$1146.0x0000000801100790.apply
  [24] zio.ZIO$.$anonfun$addFinalizerExit$3
  [25] zio.ZIO$$$Lambda$1150.0x0000000801102078.apply
  [26] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$releaseAll$2
  [27] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2756.0x000000080135f690.apply
  [28] zio.ZIO$.$anonfun$foreach$3
  [29] zio.ZIO$$$Lambda$2285.0x00000008012b2398.apply
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.evaluateEffect
  [32] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [33] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [34] zio.internal.FiberRuntime.run
  [35] zio.internal.ZScheduler$$anon$4.run

--- 26000 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.addConstantIntegerOrFloat
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantInteger
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstant
  [ 4] jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn
  [ 5] jdk.internal.org.objectweb.asm.MethodVisitor.visitLdcInsn
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.stream.internal.ChannelExecutor.$anonfun$finishSubexecutorWithCloseEffect$3
  [19] zio.stream.internal.ChannelExecutor$$Lambda$2850.0x0000000801378d90.apply
  [20] zio.ZIO$.$anonfun$foreachDiscard$3
  [21] zio.ZIO$$$Lambda$2853.0x0000000801379700.apply
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.evaluateEffect
  [47] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [48] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [49] zio.internal.FiberRuntime.run
  [50] zio.internal.ZScheduler$$anon$4.run

--- 25992 bytes (0.00%), 1 sample
  [ 0] java.lang.invoke.MemberName
  [ 1] java.lang.Object.clone
  [ 2] java.lang.invoke.MemberName.clone
  [ 3] java.lang.invoke.MemberName$Factory.resolve
  [ 4] java.lang.invoke.MemberName$Factory.resolveOrFail
  [ 5] java.lang.invoke.MethodHandles$Lookup.resolveOrFail
  [ 6] java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant
  [ 7] java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant
  [ 8] zio.kafka.consumer.internal.Runloop$.$anonfun$apply$20
  [ 9] zio.kafka.consumer.internal.Runloop$$$Lambda$1451.0x0000000801193240.apply
  [10] zio.ZIO$.$anonfun$addFinalizer$1
  [11] zio.ZIO$$$Lambda$1452.0x00000008011934f8.apply
  [12] zio.ZIO$.$anonfun$addFinalizerExit$3
  [13] zio.ZIO$$$Lambda$1150.0x0000000801102078.apply
  [14] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$releaseAll$2
  [15] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2756.0x000000080135f690.apply
  [16] zio.ZIO$.$anonfun$foreach$3
  [17] zio.ZIO$$$Lambda$2285.0x00000008012b2398.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.evaluateEffect
  [20] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [21] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [22] zio.internal.FiberRuntime.run
  [23] zio.internal.ZScheduler$$anon$4.run

--- 25984 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.StringLatin1.replace
  [ 2] java.lang.String.replace
  [ 3] java.lang.Class.descriptorString
  [ 4] sun.invoke.util.BytecodeDescriptor.unparseSig
  [ 5] sun.invoke.util.BytecodeDescriptor.unparseMethod
  [ 6] java.lang.invoke.MethodType.toMethodDescriptorString
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 8] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [10] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [11] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [12] java.lang.invoke.BootstrapMethodInvoker.invoke
  [13] java.lang.invoke.CallSite.makeSite
  [14] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [15] java.lang.invoke.MethodHandleNatives.linkCallSite
  [16] zio.Queue$$anon$1.$anonfun$shutdown$1
  [17] zio.Queue$$anon$1$$Lambda$2857.0x000000080137a410.apply
  [18] zio.ZIO$.$anonfun$fiberIdWith$1
  [19] zio.ZIO$$$Lambda$225.0x0000000800da52e8.apply
  [20] zio.ZIO$.$anonfun$descriptorWith$1
  [21] zio.ZIO$$$Lambda$226.0x0000000800da56b8.apply
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.evaluateEffect
  [27] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [28] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [29] zio.internal.FiberRuntime.run
  [30] zio.internal.ZScheduler$$anon$4.run

--- 25984 bytes (0.00%), 1 sample
  [ 0] java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle
  [ 1] java.lang.invoke.MethodHandleImpl.makeIntrinsic
  [ 2] java.lang.invoke.MethodHandles.makeIdentity
  [ 3] java.lang.invoke.MethodHandles.identity
  [ 4] java.lang.invoke.MethodHandles.constant
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.stream.Take$.failCause
  [15] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [16] zio.kafka.consumer.internal.Runloop$$Lambda$1536.0x00000008011b04b8.apply
  [17] zio.ZIO.$anonfun$onError$1
  [18] zio.ZIO$$Lambda$1537.0x00000008011b0888.apply
  [19] zio.ZIO.$anonfun$onExit$3
  [20] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] zio.internal.ZScheduler$$anon$4.run

--- 25984 bytes (0.00%), 1 sample
  [ 0] java.util.LinkedHashMap$Entry
  [ 1] java.util.LinkedHashMap.newNode
  [ 2] java.util.HashMap.putVal
  [ 3] java.util.HashMap.put
  [ 4] java.util.HashSet.add
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 8] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [10] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [11] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [12] java.lang.invoke.BootstrapMethodInvoker.invoke
  [13] java.lang.invoke.CallSite.makeSite
  [14] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [15] java.lang.invoke.MethodHandleNatives.linkCallSite
  [16] zio.Queue$$anon$1.$anonfun$shutdown$3
  [17] zio.Queue$$anon$1$$Lambda$2859.0x000000080137aaa0.apply
  [18] zio.ZIO$WhenZIO$.$anonfun$apply$5
  [19] zio.ZIO$WhenZIO$.$anonfun$apply$5$adapted
  [20] zio.ZIO$WhenZIO$$$Lambda$2761.0x0000000801361f50.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.evaluateEffect
  [27] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [28] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [29] zio.internal.FiberRuntime.run
  [30] zio.internal.ZScheduler$$anon$4.run

--- 25976 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.<init>
  [ 2] java.lang.StringBuilder.<init>
  [ 3] sun.invoke.util.BytecodeDescriptor.unparseMethod
  [ 4] java.lang.invoke.MethodType.toMethodDescriptorString
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.kafka.consumer.internal.ConsumerAccess$.$anonfun$make$6
  [15] zio.kafka.consumer.internal.ConsumerAccess$$$Lambda$2887.0x00000008013811e0.apply
  [16] zio.ZIO$.$anonfun$blocking$1
  [17] zio.ZIO$$$Lambda$1243.0x0000000801136920.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] zio.internal.ZScheduler$$anon$4.run

--- 25976 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.<init>
  [ 2] java.lang.StringBuilder.<init>
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 4] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 6] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 7] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 8] java.lang.invoke.BootstrapMethodInvoker.invoke
  [ 9] java.lang.invoke.CallSite.makeSite
  [10] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [11] java.lang.invoke.MethodHandleNatives.linkCallSite
  [12] zio.Queue$Strategy$BackPressure.$anonfun$shutdown$7
  [13] zio.Queue$Strategy$BackPressure$$Lambda$2863.0x000000080137b6b0.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.evaluateEffect
  [21] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [22] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [23] zio.internal.FiberRuntime.run
  [24] zio.internal.ZScheduler$$anon$4.run

--- 25968 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.StringLatin1.newString
  [ 2] java.lang.StringBuilder.toString
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 4] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 5] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 6] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 7] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 8] java.lang.invoke.BootstrapMethodInvoker.invoke
  [ 9] java.lang.invoke.CallSite.makeSite
  [10] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [11] java.lang.invoke.MethodHandleNatives.linkCallSite
  [12] zio.ZIO$.$anonfun$logDebugCause$1
  [13] zio.ZIO$$$Lambda$2885.0x0000000801380860.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.evaluateEffect
  [19] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [20] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [21] zio.internal.FiberRuntime.run
  [22] zio.internal.ZScheduler$$anon$4.run

--- 25968 bytes (0.00%), 1 sample
  [ 0] zio.ZIO$$$Lambda$2873+0x000000080137d888
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] zio.ZIO$.$anonfun$foreachParUnbounded$6
  [ 4] zio.ZIO$$$Lambda$2872.0x000000080137d5c8.apply
  [ 5] zio.ZIO.$anonfun$$times$greater$1
  [ 6] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] zio.internal.ZScheduler$$anon$4.run

--- 25968 bytes (0.00%), 1 sample
  [ 0] java.lang.String
  [ 1] zio.ZIO$.logDebugCause
  [ 2] zio.ZIO$.logDebug
  [ 3] zio.kafka.consumer.internal.Runloop$.$anonfun$apply$20
  [ 4] zio.kafka.consumer.internal.Runloop$$$Lambda$1451.0x0000000801193240.apply
  [ 5] zio.ZIO$.$anonfun$addFinalizer$1
  [ 6] zio.ZIO$$$Lambda$1452.0x00000008011934f8.apply
  [ 7] zio.ZIO$.$anonfun$addFinalizerExit$3
  [ 8] zio.ZIO$$$Lambda$1150.0x0000000801102078.apply
  [ 9] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$releaseAll$2
  [10] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2756.0x000000080135f690.apply
  [11] zio.ZIO$.$anonfun$foreach$3
  [12] zio.ZIO$$$Lambda$2285.0x00000008012b2398.apply
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] zio.internal.ZScheduler$$anon$4.run

--- 25968 bytes (0.00%), 1 sample
  [ 0] java.lang.invoke.LambdaFormEditor$TransformKey
  [ 1] java.lang.invoke.LambdaFormEditor$TransformKey.of
  [ 2] java.lang.invoke.LambdaFormEditor.bindArgumentForm
  [ 3] java.lang.invoke.LambdaFormEditor.bindArgumentL
  [ 4] java.lang.invoke.BoundMethodHandle.bindArgumentL
  [ 5] java.lang.invoke.MethodHandle.bindArgumentL
  [ 6] java.lang.invoke.MethodHandle.bindTo
  [ 7] java.lang.invoke.MethodHandles.constant
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.ZIO$.$anonfun$foreachDiscard$1
  [18] zio.ZIO$$$Lambda$2851.0x0000000801379160.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.evaluateEffect
  [45] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [46] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [47] zio.internal.FiberRuntime.run
  [48] zio.internal.ZScheduler$$anon$4.run

--- 25960 bytes (0.00%), 1 sample
  [ 0] zio.ZIO$$Lambda$241+0x0000000800da9c78
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] zio.ZIO.as
  [ 6] zio.ZIO.as$
  [ 7] zio.ZIO$OnSuccess.as
  [ 8] zio.ZIO.unit
  [ 9] zio.ZIO.unit$
  [10] zio.ZIO$OnSuccess.unit
  [11] zio.Queue$$anon$1.$anonfun$shutdown$1
  [12] zio.Queue$$anon$1$$Lambda$2857.0x000000080137a410.apply
  [13] zio.ZIO$.$anonfun$fiberIdWith$1
  [14] zio.ZIO$$$Lambda$225.0x0000000800da52e8.apply
  [15] zio.ZIO$.$anonfun$descriptorWith$1
  [16] zio.ZIO$$$Lambda$226.0x0000000800da56b8.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] zio.internal.ZScheduler$$anon$4.run

--- 25912 bytes (0.00%), 1 sample
  [ 0] java.lang.String[]
  [ 1] jdk.internal.org.objectweb.asm.ClassReader.<init>
  [ 2] jdk.internal.org.objectweb.asm.ClassReader.<init>
  [ 3] jdk.internal.org.objectweb.asm.ClassReader.<init>
  [ 4] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 5] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 6] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.Cause.stripFailures
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.evaluateEffect
  [21] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [22] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [23] zio.internal.FiberRuntime.run
  [24] zio.internal.ZScheduler$$anon$4.run

--- 25856 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] java.net.URLStreamHandler.toExternalForm
  [ 4] java.net.URL.toExternalForm
  [ 5] java.net.URL.toString
  [ 6] java.lang.ClassLoader.defineClassSourceLocation
  [ 7] java.lang.ClassLoader.defineClass
  [ 8] java.security.SecureClassLoader.defineClass
  [ 9] jdk.internal.loader.BuiltinClassLoader.defineClass
  [10] jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull
  [11] jdk.internal.loader.BuiltinClassLoader.loadClassOrNull
  [12] jdk.internal.loader.BuiltinClassLoader.loadClass
  [13] jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass
  [14] java.lang.ClassLoader.loadClass
  [15] zio.Cause.ThenCase$lzycompute$1
  [16] zio.Cause.ThenCase$2
  [17] zio.Cause.loop$2
  [18] zio.Cause.foldContext
  [19] zio.Cause.isInterruptedOnly
  [20] zio.ZIO.$anonfun$onInterrupt$1
  [21] zio.ZIO$$Lambda$327.0x0000000800dcb1b0.apply
  [22] zio.ZIO.$anonfun$onExit$3
  [23] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] zio.internal.ZScheduler$$anon$4.run

--- 25776 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantString
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstant
  [ 4] jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn
  [ 5] jdk.internal.org.objectweb.asm.MethodVisitor.visitLdcInsn
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.ZIO.$anonfun$onExit$3
  [19] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] zio.internal.ZScheduler$$anon$4.run

--- 25776 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantString
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstant
  [ 4] jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn
  [ 5] jdk.internal.org.objectweb.asm.MethodVisitor.visitLdcInsn
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.Cause.stripFailures
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.evaluateEffect
  [21] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [22] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [23] zio.internal.FiberRuntime.run
  [24] zio.internal.ZScheduler$$anon$4.run

--- 25776 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.addConstantIntegerOrFloat
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantInteger
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstant
  [ 4] jdk.internal.org.objectweb.asm.MethodWriter.visitLdcInsn
  [ 5] jdk.internal.org.objectweb.asm.MethodVisitor.visitLdcInsn
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.stream.internal.ChannelExecutor.runFinalizers
  [19] zio.stream.internal.ChannelExecutor.popAllFinalizers
  [20] zio.stream.internal.ChannelExecutor.close
  [21] zio.stream.ZChannel.$anonfun$runScoped$5
  [22] zio.stream.ZChannel$$Lambda$1476.0x0000000801199f58.apply
  [23] zio.ZIO$ReleaseExit.$anonfun$apply$13
  [24] zio.ZIO$ReleaseExit$$Lambda$1355.0x000000080116b078.apply
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.evaluateEffect
  [29] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [30] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [31] zio.internal.FiberRuntime.run
  [32] zio.internal.ZScheduler$$anon$4.run

--- 25776 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.put
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
  [ 5] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMethodref
  [ 6] jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateConstructor
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [11] java.lang.invoke.LambdaMetafactory.altMetafactory
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [13] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [14] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [15] java.lang.invoke.BootstrapMethodInvoker.invoke
  [16] java.lang.invoke.CallSite.makeSite
  [17] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [18] java.lang.invoke.MethodHandleNatives.linkCallSite
  [19] zio.stream.internal.ChannelExecutor.runFinalizers
  [20] zio.stream.internal.ChannelExecutor.popAllFinalizers
  [21] zio.stream.internal.ChannelExecutor.close
  [22] zio.stream.ZChannel.$anonfun$runScoped$5
  [23] zio.stream.ZChannel$$Lambda$1476.0x0000000801199f58.apply
  [24] zio.ZIO$ReleaseExit.$anonfun$apply$13
  [25] zio.ZIO$ReleaseExit$$Lambda$1355.0x000000080116b078.apply
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.evaluateEffect
  [30] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [31] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [32] zio.internal.FiberRuntime.run
  [33] zio.internal.ZScheduler$$anon$4.run

--- 25760 bytes (0.00%), 1 sample
  [ 0] java.util.LinkedHashMap$Entry
  [ 1] java.util.LinkedHashMap.newNode
  [ 2] java.util.HashMap.putVal
  [ 3] java.util.HashMap.put
  [ 4] java.util.HashSet.add
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 8] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [10] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [11] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [12] java.lang.invoke.BootstrapMethodInvoker.invoke
  [13] java.lang.invoke.CallSite.makeSite
  [14] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [15] java.lang.invoke.MethodHandleNatives.linkCallSite
  [16] zio.Hub$$anon$1.$anonfun$shutdown$1
  [17] zio.Hub$$anon$1$$Lambda$2822.0x0000000801372318.apply
  [18] zio.ZIO$.$anonfun$fiberIdWith$1
  [19] zio.ZIO$$$Lambda$225.0x0000000800da52e8.apply
  [20] zio.ZIO$.$anonfun$descriptorWith$1
  [21] zio.ZIO$$$Lambda$226.0x0000000800da56b8.apply
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.evaluateEffect
  [27] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [28] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [29] zio.internal.FiberRuntime.run
  [30] zio.internal.ZScheduler$$anon$4.run

--- 25760 bytes (0.00%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] zio.Hub$Strategy$BackPressure.$anonfun$shutdown$16
  [ 2] zio.Hub$Strategy$BackPressure$$Lambda$2829.0x0000000801373878.apply
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 25760 bytes (0.00%), 1 sample
  [ 0] java.lang.invoke.MethodType
  [ 1] java.lang.invoke.MethodType$ConcurrentWeakInternSet.get
  [ 2] java.lang.invoke.MethodType.makeImpl
  [ 3] java.lang.invoke.MethodTypeForm.canonicalize
  [ 4] java.lang.invoke.MethodTypeForm.findForm
  [ 5] java.lang.invoke.MethodType.makeImpl
  [ 6] java.lang.invoke.MethodHandleNatives.findMethodHandleType
  [ 7] zio.ZIO$.foreachParUnboundedDiscard
  [ 8] zio.ZIO$.$anonfun$foreachParDiscard$1
  [ 9] zio.ZIO$$$Lambda$2832.0x00000008013742d8.apply
  [10] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [11] zio.FiberRef$unsafe$$anon$2$$Lambda$1668.0x00000008011d70f8.apply
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.evaluateEffect
  [20] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [21] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [22] zio.internal.FiberRuntime.run
  [23] zio.internal.ZScheduler$$anon$4.run

--- 25760 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] java.lang.Class.descriptorString
  [ 4] sun.invoke.util.BytecodeDescriptor.unparseSig
  [ 5] sun.invoke.util.BytecodeDescriptor.unparseMethod
  [ 6] java.lang.invoke.MethodType.toMethodDescriptorString
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 8] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [10] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [11] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [12] java.lang.invoke.BootstrapMethodInvoker.invoke
  [13] java.lang.invoke.CallSite.makeSite
  [14] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [15] java.lang.invoke.MethodHandleNatives.linkCallSite
  [16] zio.ZIO.$anonfun$foldCause$1
  [17] zio.ZIO$$Lambda$254.0x0000000800dafb60.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.evaluateEffect
  [20] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [21] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [22] zio.internal.FiberRuntime.run
  [23] zio.internal.ZScheduler$$anon$4.run

--- 25752 bytes (0.00%), 1 sample
  [ 0] java.util.concurrent.ConcurrentHashMap$Node
  [ 1] java.util.concurrent.ConcurrentHashMap.putVal
  [ 2] java.util.concurrent.ConcurrentHashMap.putIfAbsent
  [ 3] java.lang.invoke.MethodType$ConcurrentWeakInternSet.add
  [ 4] java.lang.invoke.MethodType.makeImpl
  [ 5] java.lang.invoke.MethodHandleNatives.findMethodHandleType
  [ 6] zio.ZIO.$anonfun$onExit$3
  [ 7] zio.ZIO$$Lambda$166.0x0000000800d81aa0.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 25744 bytes (0.00%), 1 sample
  [ 0] java.lang.String
  [ 1] java.util.Arrays.copyOfRange
  [ 2] java.lang.StringLatin1.newString
  [ 3] java.lang.StringBuilder.toString
  [ 4] java.lang.Class.descriptorString
  [ 5] sun.invoke.util.BytecodeDescriptor.unparse
  [ 6] java.lang.invoke.TypeConvertingMethodAdapter.convertType
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.convertArgumentTypes
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [11] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [12] java.lang.invoke.LambdaMetafactory.altMetafactory
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [14] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [15] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [16] java.lang.invoke.BootstrapMethodInvoker.invoke
  [17] java.lang.invoke.CallSite.makeSite
  [18] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [19] java.lang.invoke.MethodHandleNatives.linkCallSite
  [20] zio.Cause.stripFailures
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] zio.internal.ZScheduler$$anon$4.run

--- 25744 bytes (0.00%), 1 sample
  [ 0] java.util.ImmutableCollections$Set12$1
  [ 1] java.util.ImmutableCollections$Set12.iterator
  [ 2] java.lang.invoke.MethodHandles$Lookup$ClassOption.optionsToFlag
  [ 3] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 4] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 5] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.Hub$Strategy$BackPressure.shutdown
  [18] zio.Hub$$anon$1.$anonfun$shutdown$5
  [19] zio.Hub$$anon$1$$Lambda$2826.0x0000000801372f28.apply
  [20] zio.ZIO.$anonfun$$times$greater$1
  [21] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.evaluateEffect
  [29] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [30] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [31] zio.internal.FiberRuntime.run
  [32] zio.internal.ZScheduler$$anon$4.run

--- 25744 bytes (0.00%), 1 sample
  [ 0] java.lang.String
  [ 1] zio.Exit.$times$greater
  [ 2] zio.Exit.$times$greater$
  [ 3] zio.Exit$Success.$times$greater
  [ 4] zio.stream.internal.ChannelExecutor.$anonfun$close$7
  [ 5] zio.stream.internal.ChannelExecutor$$Lambda$1812.0x000000080120d970.apply
  [ 6] zio.ZIO.$anonfun$map$2
  [ 7] zio.ZIO$$Lambda$136.0x0000000800d683c8.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.evaluateEffect
  [63] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [64] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [65] zio.internal.FiberRuntime.run
  [66] zio.internal.ZScheduler$$anon$4.run

--- 25744 bytes (0.00%), 1 sample
  [ 0] java.lang.String
  [ 1] java.util.Arrays.copyOfRange
  [ 2] java.lang.StringLatin1.newString
  [ 3] java.lang.String.substring
  [ 4] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 5] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 6] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.Exit.$times$greater
  [19] zio.Exit.$times$greater$
  [20] zio.Exit$Success.$times$greater
  [21] zio.stream.internal.ChannelExecutor.$anonfun$close$7
  [22] zio.stream.internal.ChannelExecutor$$Lambda$1812.0x000000080120d970.apply
  [23] zio.ZIO.$anonfun$map$2
  [24] zio.ZIO$$Lambda$136.0x0000000800d683c8.apply
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.runLoop
  [65] zio.internal.FiberRuntime.runLoop
  [66] zio.internal.FiberRuntime.runLoop
  [67] zio.internal.FiberRuntime.runLoop
  [68] zio.internal.FiberRuntime.runLoop
  [69] zio.internal.FiberRuntime.runLoop
  [70] zio.internal.FiberRuntime.runLoop
  [71] zio.internal.FiberRuntime.runLoop
  [72] zio.internal.FiberRuntime.runLoop
  [73] zio.internal.FiberRuntime.runLoop
  [74] zio.internal.FiberRuntime.runLoop
  [75] zio.internal.FiberRuntime.runLoop
  [76] zio.internal.FiberRuntime.runLoop
  [77] zio.internal.FiberRuntime.runLoop
  [78] zio.internal.FiberRuntime.runLoop
  [79] zio.internal.FiberRuntime.evaluateEffect
  [80] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [81] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [82] zio.internal.FiberRuntime.run
  [83] zio.internal.ZScheduler$$anon$4.run

--- 25744 bytes (0.00%), 1 sample
  [ 0] java.lang.StringBuilder
  [ 1] jdk.internal.org.objectweb.asm.Type.getDescriptor
  [ 2] jdk.internal.org.objectweb.asm.Type.getType
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 7] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 9] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [10] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [11] java.lang.invoke.BootstrapMethodInvoker.invoke
  [12] java.lang.invoke.CallSite.makeSite
  [13] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [14] java.lang.invoke.MethodHandleNatives.linkCallSite
  [15] zio.Hub$$anon$1.$anonfun$shutdown$3
  [16] zio.Hub$$anon$1$$Lambda$2824.0x00000008013729a8.apply
  [17] zio.ZIO$WhenZIO$.$anonfun$apply$5
  [18] zio.ZIO$WhenZIO$.$anonfun$apply$5$adapted
  [19] zio.ZIO$WhenZIO$$$Lambda$2761.0x0000000801361f50.apply
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] zio.internal.ZScheduler$$anon$4.run

--- 25744 bytes (0.00%), 1 sample
  [ 0] scala.Tuple2
  [ 1] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$release$1
  [ 2] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2814.0x0000000801370000.apply
  [ 3] zio.Ref$Atomic$$anon$2.modify
  [ 4] zio.Ref$Atomic.$anonfun$modify$3
  [ 5] zio.Ref$Atomic$$Lambda$277.0x0000000800db8f58.apply
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 25736 bytes (0.00%), 1 sample
  [ 0] zio.FiberRefs$$Lambda$134+0x0000000800d36620
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] zio.FiberRefs.getOrDefault
  [ 6] zio.internal.FiberRuntime.getFiberRef
  [ 7] zio.internal.FiberRuntime.addInterruptedCause
  [ 8] zio.internal.FiberRuntime.processNewInterruptSignal
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 25624 bytes (0.00%), 1 sample
  [ 0] zio.ZIO$Sync
  [ 1] zio.ZIO$.succeed
  [ 2] zio.stream.internal.ChannelExecutor.$anonfun$close$3
  [ 3] zio.stream.internal.ChannelExecutor$$Lambda$1798.0x0000000801201b60.apply
  [ 4] zio.ZIO.$anonfun$ensuring$1
  [ 5] zio.ZIO$$Lambda$162.0x0000000800d7b230.apply
  [ 6] zio.ZIO.$anonfun$onExit$6
  [ 7] zio.ZIO$$Lambda$167.0x0000000800d81e70.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.evaluateEffect
  [29] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [30] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [31] zio.internal.FiberRuntime.run
  [32] zio.internal.ZScheduler$$anon$4.run

--- 25624 bytes (0.00%), 1 sample
  [ 0] zio.Fiber$Status$Suspended
  [ 1] zio.internal.FiberRuntime.getStatus
  [ 2] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 3] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 4] zio.internal.FiberRuntime.run
  [ 5] zio.internal.ZScheduler$$anon$4.run

--- 25616 bytes (0.00%), 1 sample
  [ 0] zio.ZippableLowPriority3$$anon$23
  [ 1] zio.ZippableLowPriority3.Zippable2
  [ 2] zio.ZippableLowPriority3.Zippable2$
  [ 3] zio.Zippable$.Zippable2
  [ 4] zio.stream.internal.ChannelExecutor.close
  [ 5] zio.stream.internal.ChannelExecutor$Subexecutor$PullFromUpstream.close
  [ 6] zio.stream.internal.ChannelExecutor$Subexecutor$PullFromChild.close
  [ 7] zio.stream.internal.ChannelExecutor.close
  [ 8] zio.stream.internal.ChannelExecutor$Subexecutor$PullFromUpstream.close
  [ 9] zio.stream.internal.ChannelExecutor$Subexecutor$PullFromChild.close
  [10] zio.stream.internal.ChannelExecutor.close
  [11] zio.stream.ZChannel.$anonfun$toPull$5
  [12] zio.stream.ZChannel$$Lambda$1707.0x00000008011e3520.apply
  [13] zio.ZIO$.$anonfun$acquireReleaseExit$3
  [14] zio.ZIO$$$Lambda$1146.0x0000000801100790.apply
  [15] zio.ZIO$.$anonfun$addFinalizerExit$3
  [16] zio.ZIO$$$Lambda$1150.0x0000000801102078.apply
  [17] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$releaseAll$2
  [18] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2756.0x000000080135f690.apply
  [19] zio.ZIO$.$anonfun$foreach$3
  [20] zio.ZIO$$$Lambda$2285.0x00000008012b2398.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.evaluateEffect
  [27] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [28] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [29] zio.internal.FiberRuntime.run
  [30] zio.internal.ZScheduler$$anon$4.run

--- 25568 bytes (0.00%), 1 sample
  [ 0] zio.kafka.consumer.internal.Runloop$$Lambda$1892+0x0000000801225800
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$run$13
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$1527.0x00000008011aee28.apply
  [ 7] zio.stream.ZSink$.fold$4
  [ 8] zio.stream.ZSink$.foldChunkSplitZIO$1
  [ 9] zio.stream.ZSink$.$anonfun$foldZIO$6
  [10] zio.stream.ZSink$$$Lambda$1885.0x000000080121fbe0.apply
  [11] zio.stream.internal.ChannelExecutor.run
  [12] zio.stream.internal.ChannelExecutor$.read$1
  [13] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$8
  [14] zio.stream.internal.ChannelExecutor$$$Lambda$1620.0x00000008011c90e0.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 25368 bytes (0.00%), 1 sample
  [ 0] scala.Tuple2$mcJI$sp
  [ 1] kafka.server.LastUsedKey.compareTo
  [ 2] kafka.server.LastUsedKey.compareTo
  [ 3] java.util.TreeMap.getEntry
  [ 4] java.util.TreeMap.remove
  [ 5] kafka.server.FetchSessionCache.touch
  [ 6] kafka.server.FetchManager.newContext
  [ 7] kafka.server.KafkaApis.handleFetchRequest
  [ 8] kafka.server.KafkaApis.handle
  [ 9] kafka.server.KafkaRequestHandler.run
  [10] java.lang.Thread.run

--- 25352 bytes (0.00%), 1 sample
  [ 0] scala.Some
  [ 1] scala.Option.map
  [ 2] kafka.server.epoch.LeaderEpochFileCache.$anonfun$latestEntry$1
  [ 3] kafka.server.epoch.LeaderEpochFileCache.latestEntry
  [ 4] kafka.server.epoch.LeaderEpochFileCache.isUpdateNeeded$1
  [ 5] kafka.server.epoch.LeaderEpochFileCache.assign
  [ 6] kafka.server.epoch.LeaderEpochFileCache.assign
  [ 7] kafka.log.UnifiedLog.$anonfun$maybeAssignEpochStartOffset$1
  [ 8] kafka.log.UnifiedLog.$anonfun$maybeAssignEpochStartOffset$1$adapted
  [ 9] kafka.log.UnifiedLog$$Lambda$2200.0x0000000801291b08.apply
  [10] scala.Option.foreach
  [11] kafka.log.UnifiedLog.maybeAssignEpochStartOffset
  [12] kafka.log.UnifiedLog.$anonfun$append$7
  [13] kafka.log.UnifiedLog$$Lambda$2349.0x00000008012cd690.accept
  [14] java.lang.Iterable.forEach
  [15] kafka.log.UnifiedLog.append
  [16] kafka.log.UnifiedLog.appendAsLeader
  [17] kafka.cluster.Partition.$anonfun$appendRecordsToLeader$1
  [18] kafka.cluster.Partition.appendRecordsToLeader
  [19] kafka.server.ReplicaManager.$anonfun$appendToLocalLog$6
  [20] kafka.server.ReplicaManager$$Lambda$2341.0x00000008012c27a8.apply
  [21] scala.collection.Iterator$$anon$9.next
  [22] scala.collection.mutable.Growable.addAll
  [23] scala.collection.mutable.Growable.addAll$
  [24] scala.collection.immutable.MapBuilderImpl.addAll
  [25] scala.collection.immutable.Map$.from
  [26] scala.collection.immutable.Map$.from
  [27] scala.collection.MapOps.map
  [28] scala.collection.MapOps.map$
  [29] scala.collection.AbstractMap.map
  [30] kafka.server.ReplicaManager.appendToLocalLog
  [31] kafka.server.ReplicaManager.appendRecords
  [32] kafka.coordinator.group.GroupMetadataManager.storeGroup
  [33] kafka.coordinator.group.GroupCoordinator.$anonfun$doSyncGroup$1
  [34] kafka.coordinator.group.GroupCoordinator$$Lambda$2576.0x000000080131bbd0.apply$mcV$sp
  [35] scala.runtime.java8.JFunction0$mcV$sp.apply
  [36] kafka.coordinator.group.GroupMetadata.inLock
  [37] kafka.coordinator.group.GroupCoordinator.handleSyncGroup
  [38] kafka.coordinator.group.GroupCoordinatorAdapter.syncGroup
  [39] kafka.server.KafkaApis.handleSyncGroupRequest
  [40] kafka.server.KafkaApis.handle
  [41] kafka.server.KafkaRequestHandler.run
  [42] java.lang.Thread.run

--- 24944 bytes (0.00%), 1 sample
  [ 0] scala.collection.mutable.ArrayBufferView
  [ 1] scala.collection.mutable.ArrayBuffer.view
  [ 2] scala.collection.mutable.ArrayBuffer.view
  [ 3] scala.collection.IndexedSeqOps.iterator
  [ 4] scala.collection.IndexedSeqOps.iterator$
  [ 5] scala.collection.mutable.ArrayBuffer.iterator
  [ 6] scala.collection.IterableOnceOps.foreach
  [ 7] scala.collection.IterableOnceOps.foreach$
  [ 8] scala.collection.AbstractIterable.foreach
  [ 9] kafka.server.ReplicaManager.readFromLocalLog
  [10] kafka.server.ReplicaManager.fetchMessages
  [11] kafka.server.KafkaApis.handleFetchRequest
  [12] kafka.server.KafkaApis.handle
  [13] kafka.server.KafkaRequestHandler.run
  [14] java.lang.Thread.run

--- 24864 bytes (0.00%), 2 samples
  [ 0] org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch
  [ 1] org.apache.kafka.common.record.FileLogInputStream.nextBatch
  [ 2] org.apache.kafka.common.record.FileLogInputStream.nextBatch
  [ 3] org.apache.kafka.common.record.RecordBatchIterator.makeNext
  [ 4] org.apache.kafka.common.record.RecordBatchIterator.makeNext
  [ 5] org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext
  [ 6] org.apache.kafka.common.utils.AbstractIterator.hasNext
  [ 7] org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize
  [ 8] kafka.log.LogSegment.translateOffset
  [ 9] kafka.log.LogSegment.read
  [10] kafka.log.LocalLog.$anonfun$read$2
  [11] kafka.log.LocalLog.read
  [12] kafka.log.UnifiedLog.read
  [13] kafka.cluster.Partition.readRecords
  [14] kafka.cluster.Partition.readFromLocalLog$1
  [15] kafka.cluster.Partition.$anonfun$fetchRecords$2
  [16] kafka.cluster.Partition.fetchRecords
  [17] kafka.server.ReplicaManager.read$1
  [18] kafka.server.ReplicaManager.$anonfun$readFromLocalLog$7
  [19] kafka.server.ReplicaManager$$Lambda$2666.0x0000000801339820.apply
  [20] scala.collection.IterableOnceOps.foreach
  [21] scala.collection.IterableOnceOps.foreach$
  [22] scala.collection.AbstractIterable.foreach
  [23] kafka.server.ReplicaManager.readFromLocalLog
  [24] kafka.server.ReplicaManager.fetchMessages
  [25] kafka.server.KafkaApis.handleFetchRequest
  [26] kafka.server.KafkaApis.handle
  [27] kafka.server.KafkaRequestHandler.run
  [28] java.lang.Thread.run

--- 24176 bytes (0.00%), 2 samples
  [ 0] org.apache.kafka.common.requests.RequestHeader
  [ 1] org.apache.kafka.common.requests.RequestHeader.parse
  [ 2] kafka.network.Processor.parseRequestHeader
  [ 3] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [ 4] kafka.network.Processor$$Lambda$1138.0x00000008010fba18.accept
  [ 5] java.util.LinkedHashMap$LinkedValues.forEach
  [ 6] kafka.network.Processor.processCompletedReceives
  [ 7] kafka.network.Processor.run
  [ 8] java.lang.Thread.run

--- 23616 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.nio.HeapByteBuffer.<init>
  [ 2] java.nio.ByteBuffer.allocate
  [ 3] org.apache.kafka.common.protocol.SendBuilder.<init>
  [ 4] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [ 5] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [ 6] org.apache.kafka.common.requests.AbstractResponse.toSend
  [ 7] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [ 8] kafka.network.RequestChannel$Request.buildResponseSend
  [ 9] kafka.network.RequestChannel.sendResponse
  [10] kafka.server.KafkaApis.processResponseCallback$1
  [11] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [12] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [13] kafka.server.KafkaApis$$Lambda$2665.0x0000000801339450.apply
  [14] kafka.server.ReplicaManager.fetchMessages
  [15] kafka.server.KafkaApis.handleFetchRequest
  [16] kafka.server.KafkaApis.handle
  [17] kafka.server.KafkaRequestHandler.run
  [18] java.lang.Thread.run

--- 23552 bytes (0.00%), 1 sample
  [ 0] java.util.HashMap$Node[]
  [ 1] java.util.HashMap.resize
  [ 2] java.util.HashMap.putVal
  [ 3] java.util.HashMap.put
  [ 4] org.apache.kafka.common.requests.FetchRequest.lambda$null$2
  [ 5] org.apache.kafka.common.requests.FetchRequest$$Lambda$2658.0x00000008013328d8.accept
  [ 6] java.util.ArrayList.forEach
  [ 7] org.apache.kafka.common.requests.FetchRequest.lambda$fetchData$3
  [ 8] org.apache.kafka.common.requests.FetchRequest$$Lambda$2657.0x00000008013326a0.accept
  [ 9] java.util.ArrayList.forEach
  [10] org.apache.kafka.common.requests.FetchRequest.fetchData
  [11] kafka.server.KafkaApis.handleFetchRequest
  [12] kafka.server.KafkaApis.handle
  [13] kafka.server.KafkaRequestHandler.run
  [14] java.lang.Thread.run

--- 23456 bytes (0.00%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] java.util.ArrayList.grow
  [ 2] java.util.ArrayList.grow
  [ 3] java.util.ArrayList.add
  [ 4] java.util.ArrayList.add
  [ 5] kafka.server.FetchSession.$anonfun$update$2
  [ 6] kafka.server.FetchSession$$Lambda$2707.0x000000080134f660.accept
  [ 7] java.util.ArrayList.forEach
  [ 8] kafka.server.FetchSession.update
  [ 9] kafka.server.FetchManager.newContext
  [10] kafka.server.KafkaApis.handleFetchRequest
  [11] kafka.server.KafkaApis.handle
  [12] kafka.server.KafkaRequestHandler.run
  [13] java.lang.Thread.run

--- 23312 bytes (0.00%), 2 samples
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.kafka.common.record.MultiRecordsSend.writeTo
  [ 3] org.apache.kafka.common.network.NetworkSend.writeTo
  [ 4] org.apache.kafka.common.network.KafkaChannel.write
  [ 5] org.apache.kafka.common.network.Selector.write
  [ 6] org.apache.kafka.common.network.Selector.attemptWrite
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] kafka.network.Processor.poll
  [10] kafka.network.Processor.run
  [11] java.lang.Thread.run

--- 23112 bytes (0.00%), 2 samples
  [ 0] kafka.network.Processor$$Lambda$1140+0x00000008010fe800
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] kafka.network.Processor.processDisconnected
  [ 6] kafka.network.Processor.run
  [ 7] java.lang.Thread.run

--- 23080 bytes (0.00%), 2 samples
  [ 0] byte[]
  [ 1] java.lang.String.getBytes
  [ 2] java.lang.AbstractStringBuilder.putStringAt
  [ 3] java.lang.AbstractStringBuilder.putStringAt
  [ 4] java.lang.AbstractStringBuilder.append
  [ 5] java.lang.StringBuilder.append
  [ 6] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 7] org.apache.kafka.common.network.Selector.write
  [ 8] org.apache.kafka.common.network.Selector.attemptWrite
  [ 9] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [10] org.apache.kafka.common.network.Selector.poll
  [11] kafka.network.Processor.poll
  [12] kafka.network.Processor.run
  [13] java.lang.Thread.run

--- 23064 bytes (0.00%), 2 samples
  [ 0] byte[]
  [ 1] org.apache.kafka.common.metrics.Sensor.record
  [ 2] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 3] org.apache.kafka.common.network.Selector.write
  [ 4] org.apache.kafka.common.network.Selector.attemptWrite
  [ 5] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 6] org.apache.kafka.common.network.Selector.poll
  [ 7] kafka.network.Processor.poll
  [ 8] kafka.network.Processor.run
  [ 9] java.lang.Thread.run

--- 23008 bytes (0.00%), 1 sample
  [ 0] scala.Tuple2
  [ 1] scala.collection.immutable.BitmapIndexedMapNode.getPayload
  [ 2] scala.collection.immutable.HashMap.foreach
  [ 3] scala.collection.IterableOnceOps.maxBy
  [ 4] scala.collection.IterableOnceOps.maxBy$
  [ 5] scala.collection.AbstractIterable.maxBy
  [ 6] kafka.coordinator.group.GroupMetadata.selectProtocol
  [ 7] kafka.coordinator.group.GroupMetadata.initNextGeneration
  [ 8] kafka.coordinator.group.GroupCoordinator.$anonfun$onCompleteJoin$1
  [ 9] kafka.coordinator.group.GroupCoordinator$$Lambda$2555.0x0000000801317ca0.apply
  [10] kafka.coordinator.group.GroupMetadata.inLock
  [11] kafka.coordinator.group.GroupCoordinator.onCompleteJoin
  [12] kafka.coordinator.group.DelayedJoin.onComplete
  [13] kafka.coordinator.group.InitialDelayedJoin.super$onComplete
  [14] kafka.coordinator.group.InitialDelayedJoin.$anonfun$onComplete$1
  [15] kafka.coordinator.group.InitialDelayedJoin$$Lambda$2554.0x00000008013179e0.apply
  [16] kafka.coordinator.group.GroupMetadata.inLock
  [17] kafka.coordinator.group.InitialDelayedJoin.onComplete
  [18] kafka.server.DelayedOperation.forceComplete
  [19] kafka.server.DelayedOperation.run
  [20] java.util.concurrent.Executors$RunnableAdapter.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 22448 bytes (0.00%), 1 sample
  [ 0] java.util.LinkedHashMap$LinkedEntryIterator
  [ 1] java.util.LinkedHashMap$LinkedEntrySet.iterator
  [ 2] org.apache.kafka.common.requests.FetchResponse.of
  [ 3] kafka.server.IncrementalFetchContext.updateAndGenerateResponseData
  [ 4] kafka.server.KafkaApis.processResponseCallback$1
  [ 5] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [ 6] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [ 7] kafka.server.KafkaApis$$Lambda$2665.0x0000000801339450.apply
  [ 8] kafka.server.ReplicaManager.fetchMessages
  [ 9] kafka.server.KafkaApis.handleFetchRequest
  [10] kafka.server.KafkaApis.handle
  [11] kafka.server.KafkaRequestHandler.run
  [12] java.lang.Thread.run

--- 22440 bytes (0.00%), 1 sample
  [ 0] scala.collection.mutable.ArrayBufferView
  [ 1] scala.collection.mutable.ArrayBuffer.view
  [ 2] scala.collection.mutable.ArrayBuffer.view
  [ 3] scala.collection.IndexedSeqOps.iterator
  [ 4] scala.collection.IndexedSeqOps.iterator$
  [ 5] scala.collection.mutable.ArrayBuffer.iterator
  [ 6] scala.collection.StrictOptimizedIterableOps.map
  [ 7] scala.collection.StrictOptimizedIterableOps.map$
  [ 8] scala.collection.mutable.ArrayBuffer.map
  [ 9] kafka.server.ReplicaManager.fetchMessages
  [10] kafka.server.KafkaApis.handleFetchRequest
  [11] kafka.server.KafkaApis.handle
  [12] kafka.server.KafkaRequestHandler.run
  [13] java.lang.Thread.run

       bytes  percent  samples  top
  ----------  -------  -------  ---
   552770016   21.08%      201  java.nio.HeapByteBuffer
   539480256   20.58%      387  byte[]
   397201368   15.15%      137  org.apache.kafka.clients.consumer.ConsumerRecord
   340676568   12.99%      109  org.apache.kafka.common.record.DefaultRecord
   180146864    6.87%       53  java.util.Arrays$ArrayList
   176036008    6.71%       51  java.util.Optional
   148793424    5.68%       51  org.apache.kafka.common.header.internals.RecordHeaders
   109977280    4.19%       44  java.util.ArrayList
    94098168    3.59%       54  java.lang.Object[]
    15308344    0.58%       36  zio.FiberRefs$$Lambda$134+0x0000000800d36620
    12729368    0.49%       47  java.lang.InterruptedException
     6017552    0.23%       36  java.lang.String
     4309640    0.16%       15  java.util.HashMap$EntryIterator
     4308048    0.16%       12  java.lang.StringBuilder
     4265856    0.16%       21  int[]
     4194304    0.16%        1  java.util.LinkedHashMap
     4194304    0.16%        2  java.util.stream.ReferencePipeline$2
     4192256    0.16%        1  java.util.HashSet
     4192256    0.16%        1  java.util.stream.ReduceOps$3
     2093952    0.08%       17  java.lang.Long
     1796704    0.07%       18  java.util.HashMap$KeyIterator
     1782112    0.07%       53  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
     1682192    0.06%        3  zio.Exit$$Lambda$2722+0x0000000801351090
     1053952    0.04%        8  java.util.HashMap$Node
     1042992    0.04%       25  zio.ChunkBuilder$$anon$1
     1015280    0.04%        3  java.util.concurrent.LinkedBlockingQueue$Itr
      603720    0.02%        2  java.util.HashMap$KeySet
      511368    0.02%        1  scala.collection.MapOps$$anon$1
      490832    0.02%        4  java.lang.ref.WeakReference
      469480    0.02%       35  jdk.internal.org.objectweb.asm.SymbolTable$Entry
      466432    0.02%       16  java.lang.Integer
      417976    0.02%        9  jdk.internal.org.objectweb.asm.MethodWriter
      401592    0.02%        1  java.io.ByteArrayOutputStream
      400888    0.02%        1  org.apache.zookeeper.txn.TxnHeader
      358392    0.01%        2  jdk.internal.org.objectweb.asm.ClassWriter
      314608    0.01%        1  kafka.log.UnifiedLog$$Lambda$2368+0x00000008012d3c28
      308680    0.01%        2  java.lang.Double
      277720    0.01%       24  kafka.server.KafkaRequestHandler$$Lambda$1155+0x0000000801103c80
      277104    0.01%        2  java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1
      193304    0.01%        8  scala.Some
      175024    0.01%       10  kafka.server.CachedPartition
      138416    0.01%        2  kafka.utils.KafkaScheduler$$Lambda$854+0x000000080105aba0
      129296    0.00%        8  java.util.LinkedHashMap$Entry
      122448    0.00%       15  char[]
      116600    0.00%       19  javax.management.MBeanAttributeInfo
       90680    0.00%        6  java.lang.String[]
       86152    0.00%        6  scala.Tuple2
       85960    0.00%        5  org.apache.kafka.common.message.FetchResponseData$PartitionData
       58880    0.00%        1  zio.Chunk$Slice
       58224    0.00%        5  scala.collection.mutable.ArrayBufferView
       58016    0.00%        5  java.util.LinkedHashMap$LinkedEntryIterator
       56120    0.00%        3  zio.ZIO$Sync
       54656    0.00%        2  java.lang.Object
       49600    0.00%        2  kafka.log.LocalLog$$Lambda$2672+0x000000080133b278
       48800    0.00%        2  org.apache.kafka.common.message.FetchResponseData$SnapshotId
       46240    0.00%        3  scala.collection.mutable.ArrayBuffer$$anon$1
       46224    0.00%        4  kafka.network.Processor$$Lambda$1139+0x00000008010fe250
       44584    0.00%        1  org.apache.kafka.common.message.FetchResponseData$EpochEndOffset
       42496    0.00%        3  double[]
       41424    0.00%        4  java.lang.invoke.MethodType
       39424    0.00%        2  org.apache.kafka.common.requests.FetchRequest$PartitionData
       38424    0.00%       12  jdk.internal.org.objectweb.asm.SymbolTable$Entry[]
       37448    0.00%        1  java.util.concurrent.locks.AbstractQueuedSynchronizer$ExclusiveNode
       35848    0.00%        3  org.apache.kafka.common.requests.RequestContext
       34648    0.00%        1  org.apache.kafka.common.record.FileLogInputStream
       34504    0.00%        1  org.apache.kafka.common.TopicPartition
       34008    0.00%        4  java.lang.invoke.MemberName
       32360    0.00%        3  org.apache.kafka.common.utils.Timer
       31088    0.00%        2  java.util.ArrayList$Itr
       29064    0.00%        8  java.util.regex.Matcher
       28408    0.00%        2  java.util.concurrent.ConcurrentHashMap$Node
       27528    0.00%        3  kafka.coordinator.group.InitialDelayedJoin$$Lambda$2554+0x00000008013179e0
       26344    0.00%        1  scala.collection.immutable.BitmapIndexedMapNode
       25984    0.00%        1  java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle
       25968    0.00%        1  zio.ZIO$$$Lambda$2873+0x000000080137d888
       25968    0.00%        1  java.lang.invoke.LambdaFormEditor$TransformKey
       25960    0.00%        1  zio.ZIO$$Lambda$241+0x0000000800da9c78
       25744    0.00%        1  java.util.ImmutableCollections$Set12$1
       25624    0.00%        1  zio.Fiber$Status$Suspended
       25616    0.00%        1  zio.ZippableLowPriority3$$anon$23
       25600    0.00%        2  java.util.HashMap$Node[]
       25568    0.00%        1  zio.kafka.consumer.internal.Runloop$$Lambda$1892+0x0000000801225800
       25368    0.00%        1  scala.Tuple2$mcJI$sp
       24864    0.00%        2  org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch
       24176    0.00%        2  org.apache.kafka.common.requests.RequestHeader
       23904    0.00%        2  kafka.network.Processor$$Lambda$1144+0x00000008010fd260
       23440    0.00%        2  java.util.concurrent.ConcurrentSkipListMap$Index
       23112    0.00%        2  kafka.network.Processor$$Lambda$1140+0x00000008010fe800
       21528    0.00%        1  kafka.log.LocalLog$$Lambda$2673+0x000000080133b538
       19536    0.00%        1  zio.Queue$$anon$1$$Lambda$1665+0x00000008011d6698
       19040    0.00%        4  kafka.network.Processor$$Lambda$1138+0x00000008010fba18
       18048    0.00%        2  org.apache.kafka.common.TopicIdPartition
       17424    0.00%        1  zio.stream.internal.ChannelExecutor$Subexecutor$PullFromChild$$Lambda$2836+0x0000000801374ff0
       17416    0.00%        1  zio.ZippableLowPriority2$$anon$3
       17368    0.00%        1  scala.Tuple3
       17296    0.00%        1  zio.stream.ZSink$$$Lambda$1885+0x000000080121fbe0
       16848    0.00%        2  kafka.log.OffsetPosition
       16000    0.00%        1  kafka.cluster.Partition$$Lambda$2642+0x0000000801334200
       16000    0.00%        1  scala.collection.convert.AsScalaExtensions$ListHasAsScala
       15968    0.00%        1  kafka.server.ReplicaManager$$Lambda$2667+0x0000000801339bf0
       15280    0.00%        1  scala.math.Ordering$Tuple3Ordering
       15280    0.00%        1  kafka.server.IncrementalFetchContext$$Lambda$2709+0x000000080134a000
       14656    0.00%        6  zio.internal.FiberMessage$Resume
       14624    0.00%        1  kafka.server.FetchDataInfo
       14256    0.00%        2  java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry
       14224    0.00%        2  java.util.regex.IntHashSet[]
       14024    0.00%        1  kafka.utils.Pool$$Lambda$2038+0x0000000801253b60
       12864    0.00%        1  kafka.cluster.Partition$$Lambda$2671+0x000000080133ab58
       12824    0.00%        1  scala.collection.mutable.HashMap$$anon$1
       12816    0.00%        1  scala.collection.mutable.ArrayBuffer
       12768    0.00%        1  java.util.concurrent.CopyOnWriteArrayList$COWIterator
       12768    0.00%        1  java.lang.invoke.MethodHandles$Lookup$ClassFile
       12224    0.00%        1  org.apache.kafka.common.message.FetchRequestData
       12000    0.00%        1  org.apache.kafka.common.message.ResponseHeaderData
       11776    0.00%        1  java.nio.ByteBuffer[]
       11704    0.00%        1  javax.management.MBeanAttributeInfo[]
       11432    0.00%        1  org.apache.kafka.common.message.FetchRequestData$FetchPartition
       11408    0.00%        1  java.util.concurrent.ConcurrentSkipListMap$Node
       11128    0.00%        1  jdk.internal.ref.CleanerImpl$PhantomCleanableRef
       11128    0.00%        1  kafka.server.ReplicaManager$$Lambda$2669+0x000000080133a3b8
       11104    0.00%        1  org.apache.kafka.common.message.FetchResponseData$LeaderIdAndEpoch
       10872    0.00%        1  scala.collection.immutable.Map$Map1
       10872    0.00%        1  kafka.server.KafkaApis$$Lambda$2742+0x0000000801357a08
       10344    0.00%        1  kafka.server.KafkaApis$$Lambda$2691+0x0000000801343758
        8760    0.00%        1  zio.ZIO$$Lambda$327+0x0000000800dcb1b0
        8040    0.00%        3  javax.management.MBeanServerNotification
        5296    0.00%        2  java.util.Date
        5296    0.00%        2  jdk.internal.org.objectweb.asm.ByteVector
        5280    0.00%        2  kafka.utils.timer.SystemTimer$$Lambda$2430+0x00000008012ea110
        3168    0.00%        2  long[]
        2704    0.00%        1  short[]
        2688    0.00%        1  java.util.stream.ReferencePipeline$3
        2672    0.00%        1  javax.management.MBeanInfo
        2656    0.00%        1  java.lang.invoke.MethodHandleNatives$CallSiteContext
        2656    0.00%        1  jdk.internal.org.objectweb.asm.Type
        2648    0.00%        1  scala.collection.immutable.Map$Map2$$anon$1
        2648    0.00%        1  scala.collection.immutable.$colon$colon
        2648    0.00%        1  java.util.Collections$UnmodifiableCollection$1
        2648    0.00%        1  java.lang.Class[]
        2648    0.00%        1  org.apache.kafka.common.network.Selector$$Lambda$1076+0x00000008010df438
        2640    0.00%        1  scala.collection.immutable.ArraySeq$ofRef
        2048    0.00%        1  kafka.network.Processor$ConnectionId$$$Lambda$2266+0x00000008012af748
        2048    0.00%        1  kafka.network.RequestChannel$Session
        2048    0.00%        1  kafka.utils.Pool$$Lambda$1249+0x0000000801137d50
        2048    0.00%        1  org.apache.kafka.common.record.FileRecords$$Lambda$2155+0x0000000801284100
        2048    0.00%        1  scala.collection.mutable.CheckedIndexedSeqView$CheckedIterator
        2048    0.00%        1  java.util.HashMap
        2048    0.00%        1  org.apache.kafka.common.message.FetchResponseData
        2048    0.00%        1  org.apache.kafka.common.requests.FetchResponse
        2048    0.00%        1  java.util.AbstractMap$SimpleImmutableEntry
        2048    0.00%        1  scala.math.Ordering$Tuple2Ordering
