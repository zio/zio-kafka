--- Execution profile ---
Total samples       : 1512

--- 584177376 bytes (22.23%), 212 samples
  [ 0] java.nio.HeapByteBuffer
  [ 1] org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint
  [ 2] org.apache.kafka.common.utils.ByteUtils.readVarint
  [ 3] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 4] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 5] org.apache.kafka.common.record.DefaultRecordBatch$3.readNext
  [ 6] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 7] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [11] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [17] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [18] scala.runtime.java8.JFunction0$mcV$sp.apply
  [19] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [20] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 365389496 bytes (13.90%), 120 samples
  [ 0] org.apache.kafka.common.record.DefaultRecord
  [ 1] org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint
  [ 2] org.apache.kafka.common.utils.ByteUtils.readVarint
  [ 3] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 4] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 5] org.apache.kafka.common.record.DefaultRecordBatch$3.readNext
  [ 6] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 7] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [11] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [17] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [18] scala.runtime.java8.JFunction0$mcV$sp.apply
  [19] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [20] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 325802776 bytes (12.40%), 118 samples
  [ 0] org.apache.kafka.clients.consumer.ConsumerRecord
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 240933744 bytes (9.17%), 74 samples
  [ 0] byte[]
  [ 1] org.apache.kafka.common.header.internals.RecordHeaders.<init>
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [12] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [13] scala.runtime.java8.JFunction0$mcV$sp.apply
  [14] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [15] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.evaluateEffect
  [21] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [22] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [23] zio.internal.FiberRuntime.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 197074560 bytes (7.50%), 57 samples
  [ 0] java.util.Optional
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 175930976 bytes (6.69%), 51 samples
  [ 0] java.util.Arrays$ArrayList
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [11] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [12] scala.runtime.java8.JFunction0$mcV$sp.apply
  [13] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [14] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.evaluateEffect
  [20] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [21] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [22] zio.internal.FiberRuntime.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 148721248 bytes (5.66%), 51 samples
  [ 0] org.apache.kafka.common.header.internals.RecordHeaders
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [11] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [12] scala.runtime.java8.JFunction0$mcV$sp.apply
  [13] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [14] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.evaluateEffect
  [20] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [21] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [22] zio.internal.FiberRuntime.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 124500872 bytes (4.74%), 51 samples
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.common.header.internals.RecordHeaders.<init>
  [ 2] org.apache.kafka.common.header.internals.RecordHeaders.<init>
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 112641352 bytes (4.29%), 29 samples
  [ 0] java.lang.Object[]
  [ 1] java.util.Arrays.copyOf
  [ 2] java.util.Arrays.copyOf
  [ 3] java.util.ArrayList.grow
  [ 4] java.util.ArrayList.grow
  [ 5] java.util.ArrayList.add
  [ 6] java.util.ArrayList.add
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [15] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [16] scala.runtime.java8.JFunction0$mcV$sp.apply
  [17] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [18] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 108939512 bytes (4.15%), 43 samples
  [ 0] byte[]
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 96135760 bytes (3.66%), 25 samples
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.kafka.common.memory.MemoryPool$1.tryAllocate
  [ 3] org.apache.kafka.common.network.NetworkReceive.readFrom
  [ 4] org.apache.kafka.common.network.KafkaChannel.receive
  [ 5] org.apache.kafka.common.network.KafkaChannel.read
  [ 6] org.apache.kafka.common.network.Selector.attemptRead
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] org.apache.kafka.clients.NetworkClient.poll
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.transmitSends
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [14] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [15] scala.runtime.java8.JFunction0$mcV$sp.apply
  [16] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [17] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 37750464 bytes (1.44%), 6 samples
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.kafka.common.memory.MemoryPool$1.tryAllocate
  [ 3] org.apache.kafka.common.network.NetworkReceive.readFrom
  [ 4] org.apache.kafka.common.network.KafkaChannel.receive
  [ 5] org.apache.kafka.common.network.KafkaChannel.read
  [ 6] org.apache.kafka.common.network.Selector.attemptRead
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] org.apache.kafka.clients.NetworkClient.poll
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [16] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [17] scala.runtime.java8.JFunction0$mcV$sp.apply
  [18] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [19] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.evaluateEffect
  [25] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [26] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [27] zio.internal.FiberRuntime.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 16717032 bytes (0.64%), 5 samples
  [ 0] java.nio.HeapByteBuffer
  [ 1] org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint
  [ 2] org.apache.kafka.common.utils.ByteUtils.readVarint
  [ 3] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 4] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 5] org.apache.kafka.common.record.DefaultRecordBatch$3.readNext
  [ 6] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 7] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [11] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [17] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [18] scala.runtime.java8.JFunction0$mcV$sp.apply
  [19] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [20] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 8889152 bytes (0.34%), 3 samples
  [ 0] zio.FiberRefs$$Lambda$134+0x0000000800d364f0
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] zio.FiberRefs.getOrDefault
  [ 6] zio.internal.FiberRuntime.getFiberRef
  [ 7] zio.internal.FiberRuntime.getSupervisor
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 8595240 bytes (0.33%), 28 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] java.lang.String
  [ 1] java.util.Arrays.copyOfRange
  [ 2] java.lang.StringLatin1.newString
  [ 3] java.lang.StringBuilder.toString
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.partitionLagMetricName
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.recordPartitionLag
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.access$2100
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] java.nio.HeapByteBuffer
  [ 1] java.nio.Buffer.position
  [ 2] java.nio.ByteBuffer.position
  [ 3] java.nio.ByteBuffer.position
  [ 4] org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatch
  [ 5] org.apache.kafka.common.record.ByteBufferLogInputStream.nextBatch
  [ 6] org.apache.kafka.common.record.RecordBatchIterator.makeNext
  [ 7] org.apache.kafka.common.record.RecordBatchIterator.makeNext
  [ 8] org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext
  [ 9] org.apache.kafka.common.utils.AbstractIterator.hasNext
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [11] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [13] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [14] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [17] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [18] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [19] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [20] scala.runtime.java8.JFunction0$mcV$sp.apply
  [21] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [22] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] java.nio.HeapByteBuffer
  [ 1] org.apache.kafka.common.record.DefaultRecordBatch.streamingIterator
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [11] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [12] scala.runtime.java8.JFunction0$mcV$sp.apply
  [13] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [14] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.evaluateEffect
  [20] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [21] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [22] zio.internal.FiberRuntime.run
  [23] java.util.concurrent.ThreadPoolExecutor.runWorker
  [24] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [25] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] java.util.HashMap
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 4] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 5] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [ 6] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [ 7] scala.runtime.java8.JFunction0$mcV$sp.apply
  [ 8] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [ 9] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] java.lang.String
  [ 1] java.util.Arrays.copyOfRange
  [ 2] java.lang.StringLatin1.newString
  [ 3] java.lang.String.substring
  [ 4] javax.management.ObjectName.getCanonicalKeyPropertyListString
  [ 5] com.sun.jmx.mbeanserver.Repository.retrieveNamedObject
  [ 6] com.sun.jmx.mbeanserver.Repository.retrieve
  [ 7] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean
  [ 8] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean
  [ 9] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean
  [10] com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean
  [11] com.yammer.metrics.reporting.JmxReporter.unregisterBean
  [12] com.yammer.metrics.reporting.JmxReporter.onMetricRemoved
  [13] com.yammer.metrics.core.MetricsRegistry.notifyMetricRemoved
  [14] com.yammer.metrics.core.MetricsRegistry.removeMetric
  [15] kafka.metrics.KafkaMetricsGroup.removeMetric
  [16] kafka.metrics.KafkaMetricsGroup.removeMetric$
  [17] kafka.network.RequestMetrics.removeMetric
  [18] kafka.network.RequestMetrics.removeMetrics
  [19] kafka.network.RequestChannel$Metrics.$anonfun$close$1
  [20] kafka.network.RequestChannel$Metrics.$anonfun$close$1$adapted
  [21] kafka.network.RequestChannel$Metrics$$Lambda$3018.0x0000000801379598.apply
  [22] scala.collection.IterableOnceOps.foreach
  [23] scala.collection.IterableOnceOps.foreach$
  [24] scala.collection.AbstractIterable.foreach
  [25] kafka.network.RequestChannel$Metrics.close
  [26] kafka.network.RequestChannel.shutdown
  [27] kafka.network.SocketServer.shutdown
  [28] kafka.server.KafkaServer.$anonfun$shutdown$24
  [29] kafka.server.KafkaServer$$Lambda$3016.0x0000000801379000.apply$mcV$sp
  [30] kafka.utils.CoreUtils$.swallow
  [31] kafka.server.KafkaServer.shutdown
  [32] io.github.embeddedkafka.EmbeddedK.stop
  [33] zio.kafka.embedded.Kafka$EmbeddedKafkaService.$anonfun$stop$1
  [34] zio.kafka.embedded.Kafka$EmbeddedKafkaService$$Lambda$2848.0x000000080135a4b0.apply$mcV$sp
  [35] scala.runtime.java8.JFunction0$mcV$sp.apply
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.runLoop
  [65] zio.internal.FiberRuntime.runLoop
  [66] zio.internal.FiberRuntime.runLoop
  [67] zio.internal.FiberRuntime.runLoop
  [68] zio.internal.FiberRuntime.runLoop
  [69] zio.internal.FiberRuntime.runLoop
  [70] zio.internal.FiberRuntime.runLoop
  [71] zio.internal.FiberRuntime.runLoop
  [72] zio.internal.FiberRuntime.runLoop
  [73] zio.internal.FiberRuntime.runLoop
  [74] zio.internal.FiberRuntime.runLoop
  [75] zio.internal.FiberRuntime.runLoop
  [76] zio.internal.FiberRuntime.evaluateEffect
  [77] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [78] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [79] zio.internal.FiberRuntime.run
  [80] java.util.concurrent.ThreadPoolExecutor.runWorker
  [81] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [82] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] java.util.Optional
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 4194304 bytes (0.16%), 1 sample
  [ 0] java.lang.invoke.ConstantCallSite
  [ 1] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 2] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 4] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 6] java.lang.invoke.BootstrapMethodInvoker.invoke
  [ 7] java.lang.invoke.CallSite.makeSite
  [ 8] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [ 9] java.lang.invoke.MethodHandleNatives.linkCallSite
  [10] kafka.network.Acceptor.beginShutdown
  [11] kafka.network.SocketServer.$anonfun$stopProcessingRequests$2
  [12] kafka.network.SocketServer.$anonfun$stopProcessingRequests$2$adapted
  [13] kafka.network.SocketServer$$Lambda$2876.0x0000000801360000.apply
  [14] scala.collection.IterableOnceOps.foreach
  [15] scala.collection.IterableOnceOps.foreach$
  [16] scala.collection.AbstractIterable.foreach
  [17] kafka.network.SocketServer.stopProcessingRequests
  [18] kafka.server.KafkaServer.$anonfun$shutdown$4
  [19] kafka.server.KafkaServer$$Lambda$2874.0x000000080135fa60.apply$mcV$sp
  [20] kafka.utils.CoreUtils$.swallow
  [21] kafka.server.KafkaServer.shutdown
  [22] io.github.embeddedkafka.EmbeddedK.stop
  [23] zio.kafka.embedded.Kafka$EmbeddedKafkaService.$anonfun$stop$1
  [24] zio.kafka.embedded.Kafka$EmbeddedKafkaService$$Lambda$2848.0x000000080135a4b0.apply$mcV$sp
  [25] scala.runtime.java8.JFunction0$mcV$sp.apply
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.runLoop
  [65] zio.internal.FiberRuntime.runLoop
  [66] zio.internal.FiberRuntime.evaluateEffect
  [67] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [68] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [69] zio.internal.FiberRuntime.run
  [70] java.util.concurrent.ThreadPoolExecutor.runWorker
  [71] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [72] java.lang.Thread.run

--- 4192256 bytes (0.16%), 1 sample
  [ 0] byte[]
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [13] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [14] scala.runtime.java8.JFunction0$mcV$sp.apply
  [15] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [16] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 4192256 bytes (0.16%), 1 sample
  [ 0] org.apache.kafka.common.record.DefaultRecord
  [ 1] org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint
  [ 2] org.apache.kafka.common.utils.ByteUtils.readVarint
  [ 3] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 4] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 5] org.apache.kafka.common.record.DefaultRecordBatch$3.readNext
  [ 6] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 7] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [11] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [17] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [18] scala.runtime.java8.JFunction0$mcV$sp.apply
  [19] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [20] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 2508904 bytes (0.10%), 2 samples
  [ 0] zio.Exit$$Lambda$2685+0x000000080132cad0
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] zio.Exit.getOrThrow
  [ 4] zio.Exit.getOrThrow$
  [ 5] zio.Exit$Success.getOrThrow
  [ 6] zio.kafka.bench.ZioBenchmark.$anonfun$runZIO$1
  [ 7] zio.kafka.bench.ZioBenchmark$$Lambda$2442.0x00000008012d4938.apply
  [ 8] zio.Unsafe$.unsafe
  [ 9] zio.kafka.bench.ZioBenchmark.runZIO
  [10] zio.kafka.bench.ZioBenchmark.runZIO$
  [11] zio.kafka.bench.ConsumersComparisonBenchmark.runZIO
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.kafkaClients
  [13] zio.kafka.bench.jmh_generated.ConsumersComparisonBenchmark_kafkaClients_jmhTest.kafkaClients_avgt_jmhStub
  [14] zio.kafka.bench.jmh_generated.ConsumersComparisonBenchmark_kafkaClients_jmhTest.kafkaClients_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 2405720 bytes (0.09%), 28 samples
  [ 0] zio.FiberRefs$$Lambda$134+0x0000000800d364f0
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] zio.FiberRefs.getOrDefault
  [ 6] zio.internal.FiberRuntime.getFiberRef
  [ 7] zio.internal.FiberRuntime.getSupervisor
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 1731296 bytes (0.07%), 1 sample
  [ 0] java.util.HashMap$KeyIterator
  [ 1] java.util.HashSet.iterator
  [ 2] sun.nio.ch.Util$2.iterator
  [ 3] org.apache.zookeeper.server.NIOServerCnxnFactory$AcceptThread.select
  [ 4] org.apache.zookeeper.server.NIOServerCnxnFactory$AcceptThread.run

--- 1627272 bytes (0.06%), 8 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 1524488 bytes (0.06%), 6 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 1497048 bytes (0.06%), 18 samples
  [ 0] zio.ChunkBuilder$$anon$1
  [ 1] zio.ChunkBuilder$.make
  [ 2] zio.internal.RingBuffer.pollUpTo
  [ 3] zio.internal.ZScheduler$$anon$4.run

--- 1404368 bytes (0.05%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.clients.NetworkClient.poll
  [ 2] org.apache.kafka.clients.producer.internals.Sender.runOnce
  [ 3] org.apache.kafka.clients.producer.internals.Sender.run
  [ 4] java.lang.Thread.run

--- 1207920 bytes (0.05%), 2 samples
  [ 0] java.util.HashMap$Node
  [ 1] java.util.HashMap.newNode
  [ 2] java.util.HashMap.putVal
  [ 3] java.util.HashMap.put
  [ 4] java.util.HashSet.add
  [ 5] sun.nio.ch.SelectorImpl.processReadyEvents
  [ 6] sun.nio.ch.KQueueSelectorImpl.processEvents
  [ 7] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 8] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 9] sun.nio.ch.SelectorImpl.select
  [10] org.apache.zookeeper.server.NIOServerCnxnFactory$SelectorThread.select
  [11] org.apache.zookeeper.server.NIOServerCnxnFactory$SelectorThread.run

--- 1125304 bytes (0.04%), 1 sample
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.zookeeper.server.ExpiryQueue.poll
  [ 3] org.apache.zookeeper.server.NIOServerCnxnFactory$ConnectionExpirerThread.run

--- 1065376 bytes (0.04%), 1 sample
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ArrayBlockingQueue.take
  [ 3] kafka.server.LogDirFailureChannel.takeNextOfflineLogDir
  [ 4] kafka.server.ReplicaManager$LogDirFailureHandler.doWork
  [ 5] kafka.utils.ShutdownableThread.run

--- 942976 bytes (0.04%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] java.util.ArrayList.add
  [ 2] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 3] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 4] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 5] org.openjdk.jmh.runner.BaseRunner.doSingle
  [ 6] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [ 7] org.openjdk.jmh.runner.ForkedRunner.run
  [ 8] org.openjdk.jmh.runner.ForkedMain.main

--- 940080 bytes (0.04%), 3 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 900608 bytes (0.03%), 2 samples
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.zookeeper.server.NIOServerCnxn.readLength
  [ 3] org.apache.zookeeper.server.NIOServerCnxn.doIO
  [ 4] org.apache.zookeeper.server.NIOServerCnxnFactory$IOWorkRequest.doWork
  [ 5] org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 900288 bytes (0.03%), 2 samples
  [ 0] java.util.concurrent.LinkedBlockingQueue$Itr
  [ 1] java.util.concurrent.LinkedBlockingQueue.iterator
  [ 2] org.apache.zookeeper.server.NIOServerCnxn.handleWrite
  [ 3] org.apache.zookeeper.server.NIOServerCnxn.doIO
  [ 4] org.apache.zookeeper.server.NIOServerCnxnFactory$IOWorkRequest.doWork
  [ 5] org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 805424 bytes (0.03%), 6 samples
  [ 0] java.lang.String

--- 780560 bytes (0.03%), 2 samples
  [ 0] java.util.HashMap$KeySet
  [ 1] java.util.HashSet.iterator
  [ 2] org.apache.zookeeper.ClientCnxn$EventThread.processEvent
  [ 3] org.apache.zookeeper.ClientCnxn$EventThread.run

--- 725128 bytes (0.03%), 1 sample
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 722320 bytes (0.03%), 2 samples
  [ 0] java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1
  [ 1] java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator
  [ 2] jdk.vm.ci.services.Services.serializeProperties
  [ 3] jdk.vm.ci.services.Services.serializeSavedProperties

--- 691088 bytes (0.03%), 3 samples
  [ 0] java.lang.ref.WeakReference
  [ 1] zio.internal.WeakConcurrentBag.graduate
  [ 2] zio.internal.ZScheduler$$anon$3.run

--- 622752 bytes (0.02%), 1 sample
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$SharedNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 3] java.util.concurrent.CountDownLatch.await
  [ 4] org.openjdk.jmh.runner.InfraControlL2.awaitWarmdownReady
  [ 5] org.openjdk.jmh.runner.InfraControl.awaitWarmdownReady
  [ 6] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 7] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 8] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 9] org.openjdk.jmh.runner.BaseRunner.doSingle
  [10] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [11] org.openjdk.jmh.runner.ForkedRunner.run
  [12] org.openjdk.jmh.runner.ForkedMain.main

--- 590440 bytes (0.02%), 1 sample
  [ 0] java.lang.Double
  [ 1] java.util.concurrent.atomic.AtomicLong.incrementAndGet
  [ 2] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 3] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 4] com.yammer.metrics.core.Histogram.update
  [ 5] kafka.controller.ControllerEventManager$ControllerEventThread.doWork
  [ 6] kafka.utils.ShutdownableThread.run

--- 485896 bytes (0.02%), 1 sample
  [ 0] java.io.ByteArrayOutputStream
  [ 1] org.apache.zookeeper.server.persistence.Util.marshallTxnEntry
  [ 2] org.apache.zookeeper.server.persistence.FileTxnLog.append
  [ 3] org.apache.zookeeper.server.persistence.FileTxnSnapLog.append
  [ 4] org.apache.zookeeper.server.ZKDatabase.append
  [ 5] org.apache.zookeeper.server.SyncRequestProcessor.run

--- 484880 bytes (0.02%), 1 sample
  [ 0] org.apache.zookeeper.txn.TxnHeader
  [ 1] org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn
  [ 2] org.apache.zookeeper.server.PrepRequestProcessor.pRequest
  [ 3] org.apache.zookeeper.server.PrepRequestProcessor.run

--- 475504 bytes (0.02%), 1 sample
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.zookeeper.server.SessionTrackerImpl.touchSession
  [ 3] org.apache.zookeeper.server.ZooKeeperServer.touch
  [ 4] org.apache.zookeeper.server.ZooKeeperServer.submitRequestNow
  [ 5] org.apache.zookeeper.server.RequestThrottler.run

--- 467328 bytes (0.02%), 1 sample
  [ 0] java.lang.Integer
  [ 1] sun.nio.ch.KQueueSelectorImpl.processEvents
  [ 2] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 3] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 4] sun.nio.ch.SelectorImpl.select
  [ 5] org.apache.kafka.common.network.Selector.select
  [ 6] org.apache.kafka.common.network.Selector.poll
  [ 7] org.apache.kafka.clients.NetworkClient.poll
  [ 8] kafka.common.InterBrokerSendThread.pollOnce
  [ 9] kafka.server.BrokerToControllerRequestThread.doWork
  [10] kafka.utils.ShutdownableThread.run

--- 458792 bytes (0.02%), 1 sample
  [ 0] java.lang.String
  [ 1] kafka.utils.ShutdownableThread.pause
  [ 2] kafka.log.LogCleaner$CleanerThread.doWork
  [ 3] kafka.utils.ShutdownableThread.run

--- 456552 bytes (0.02%), 6 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 450168 bytes (0.02%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.clients.NetworkClient.poll
  [ 2] kafka.common.InterBrokerSendThread.pollOnce
  [ 3] kafka.server.BrokerToControllerRequestThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 425112 bytes (0.02%), 1 sample
  [ 0] zio.FiberRefs$$Lambda$134+0x0000000800d364f0
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] zio.FiberRefs.getOrDefault
  [ 6] zio.internal.FiberRuntime.getFiberRef
  [ 7] zio.internal.FiberRuntime.addInterruptedCause
  [ 8] zio.internal.FiberRuntime.processNewInterruptSignal
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] java.util.concurrent.ThreadPoolExecutor.runWorker
  [13] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [14] java.lang.Thread.run

--- 406400 bytes (0.02%), 3 samples
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.zookeeper.server.ExpiryQueue.poll
  [ 3] org.apache.zookeeper.server.SessionTrackerImpl.run

--- 361184 bytes (0.01%), 1 sample
  [ 0] java.lang.invoke.MemberName
  [ 1] java.lang.Object.clone
  [ 2] java.lang.invoke.MemberName.clone
  [ 3] java.lang.invoke.MemberName$Factory.resolve
  [ 4] java.lang.invoke.MemberName$Factory.resolveOrNull
  [ 5] java.lang.invoke.MethodHandles$Lookup.resolveOrNull
  [ 6] java.lang.invoke.MethodHandles$Lookup.canBeCached
  [ 7] java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant
  [ 8] java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant
  [ 9] kafka.log.UnifiedLog.close
  [10] kafka.log.LogManager.$anonfun$shutdown$8
  [11] kafka.log.LogManager$$Lambda$2969.0x0000000801373ad0.run
  [12] java.util.concurrent.Executors$RunnableAdapter.call
  [13] java.util.concurrent.FutureTask.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 358016 bytes (0.01%), 13 samples
  [ 0] kafka.server.KafkaRequestHandler$$Lambda$1155+0x00000008010eb218
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] kafka.server.KafkaRequestHandler.run
  [ 4] java.lang.Thread.run

--- 293432 bytes (0.01%), 1 sample
  [ 0] java.util.IdentityHashMap$KeyIterator
  [ 1] java.util.IdentityHashMap$KeySet.iterator
  [ 2] java.util.Collections$SetFromMap.iterator
  [ 3] jdk.internal.misc.TerminatingThreadLocal.threadTerminated
  [ 4] java.lang.Thread.exit

--- 282480 bytes (0.01%), 2 samples
  [ 0] java.util.HashMap$KeyIterator
  [ 1] java.util.HashSet.iterator
  [ 2] sun.nio.ch.Util$2.iterator
  [ 3] org.apache.zookeeper.ClientCnxnSocketNIO.doTransport
  [ 4] org.apache.zookeeper.ClientCnxn$SendThread.run

--- 260648 bytes (0.01%), 1 sample
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] kafka.controller.RequestSendThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 207480 bytes (0.01%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.clients.NetworkClient.poll
  [ 2] kafka.common.InterBrokerSendThread.pollOnce
  [ 3] kafka.common.InterBrokerSendThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 188912 bytes (0.01%), 1 sample
  [ 0] kafka.utils.KafkaScheduler$$Lambda$847+0x00000008010397a8
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] kafka.utils.KafkaScheduler.$anonfun$schedule$2
  [ 4] kafka.utils.KafkaScheduler$$Lambda$638.0x0000000800f88c30.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.runAndReset
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 178944 bytes (0.01%), 12 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.DelayQueue.poll
  [ 3] kafka.server.ClientQuotaManager$ThrottledChannelReaper.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 178560 bytes (0.01%), 4 samples
  [ 0] org.apache.kafka.common.network.ByteBufferSend
  [ 1] org.apache.kafka.common.protocol.SendBuilder.flushPendingSend
  [ 2] org.apache.kafka.common.protocol.SendBuilder.build
  [ 3] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [ 4] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [ 5] org.apache.kafka.common.requests.AbstractResponse.toSend
  [ 6] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [ 7] kafka.network.RequestChannel$Request.buildResponseSend
  [ 8] kafka.network.RequestChannel.sendResponse
  [ 9] kafka.server.KafkaApis.processResponseCallback$1
  [10] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [11] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [12] kafka.server.KafkaApis$$Lambda$2626.0x0000000801313a70.apply
  [13] kafka.server.ReplicaManager.fetchMessages
  [14] kafka.server.KafkaApis.handleFetchRequest
  [15] kafka.server.KafkaApis.handle
  [16] kafka.server.KafkaRequestHandler.run
  [17] java.lang.Thread.run

--- 162704 bytes (0.01%), 3 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 157816 bytes (0.01%), 5 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.ArrayBlockingQueue.poll
  [ 3] kafka.network.RequestChannel.receiveRequest
  [ 4] kafka.server.KafkaRequestHandler.run
  [ 5] java.lang.Thread.run

--- 142896 bytes (0.01%), 5 samples
  [ 0] java.lang.Integer
  [ 1] sun.nio.ch.KQueueSelectorImpl.processEvents
  [ 2] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 3] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 4] sun.nio.ch.SelectorImpl.select
  [ 5] org.apache.kafka.common.network.Selector.select
  [ 6] org.apache.kafka.common.network.Selector.poll
  [ 7] kafka.network.Processor.poll
  [ 8] kafka.network.Processor.run
  [ 9] java.lang.Thread.run

--- 136536 bytes (0.01%), 9 samples
  [ 0] java.lang.Object[]
  [ 1] org.apache.kafka.common.record.MultiRecordsSend.writeTo
  [ 2] org.apache.kafka.common.network.NetworkSend.writeTo
  [ 3] org.apache.kafka.common.network.KafkaChannel.write
  [ 4] org.apache.kafka.common.network.Selector.write
  [ 5] org.apache.kafka.common.network.Selector.attemptWrite
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 128296 bytes (0.00%), 10 samples
  [ 0] java.util.HashMap$KeyIterator
  [ 1] java.util.HashSet.iterator
  [ 2] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 3] org.apache.kafka.common.network.Selector.poll
  [ 4] kafka.network.Processor.poll
  [ 5] kafka.network.Processor.run
  [ 6] java.lang.Thread.run

--- 124760 bytes (0.00%), 9 samples
  [ 0] byte[]
  [ 1] java.lang.StringLatin1.newString
  [ 2] java.lang.StringBuilder.toString
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 4] org.apache.kafka.common.network.Selector.write
  [ 5] org.apache.kafka.common.network.Selector.attemptWrite
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 114008 bytes (0.00%), 15 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.DelayQueue.poll
  [ 3] kafka.utils.timer.SystemTimer.advanceClock
  [ 4] kafka.server.DelayedOperationPurgatory.advanceClock
  [ 5] kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper.doWork
  [ 6] kafka.utils.ShutdownableThread.run

--- 98712 bytes (0.00%), 9 samples
  [ 0] java.lang.StringBuilder
  [ 1] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 2] org.apache.kafka.common.network.Selector.write
  [ 3] org.apache.kafka.common.network.Selector.attemptWrite
  [ 4] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 5] org.apache.kafka.common.network.Selector.poll
  [ 6] kafka.network.Processor.poll
  [ 7] kafka.network.Processor.run
  [ 8] java.lang.Thread.run

--- 96816 bytes (0.00%), 9 samples
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 4] org.apache.kafka.common.network.Selector.write
  [ 5] org.apache.kafka.common.network.Selector.attemptWrite
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 74448 bytes (0.00%), 5 samples
  [ 0] java.util.HashMap$KeyIterator
  [ 1] java.util.HashSet.iterator
  [ 2] sun.nio.ch.Util$2.iterator
  [ 3] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 4] org.apache.kafka.common.network.Selector.poll
  [ 5] kafka.network.Processor.poll
  [ 6] kafka.network.Processor.run
  [ 7] java.lang.Thread.run

--- 73608 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ByteVector.putUTF8
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
  [ 5] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMethodref
  [ 6] jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn
  [ 7] jdk.internal.org.objectweb.asm.MethodVisitor.visitMethodInsn
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [11] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [12] java.lang.invoke.LambdaMetafactory.altMetafactory
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [14] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [15] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [16] java.lang.invoke.BootstrapMethodInvoker.invoke
  [17] java.lang.invoke.CallSite.makeSite
  [18] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [19] java.lang.invoke.MethodHandleNatives.linkCallSite
  [20] zio.Hub$$anon$1.$anonfun$shutdown$3
  [21] zio.Hub$$anon$1$$Lambda$2777.0x000000080134a208.apply
  [22] zio.ZIO$WhenZIO$.$anonfun$apply$5
  [23] zio.ZIO$WhenZIO$.$anonfun$apply$5$adapted
  [24] zio.ZIO$WhenZIO$$$Lambda$2714.0x0000000801339978.apply
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.evaluateEffect
  [31] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [32] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [33] zio.internal.FiberRuntime.run
  [34] zio.internal.ZScheduler$$anon$4.run

--- 73608 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry[]
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.<init>
  [ 2] jdk.internal.org.objectweb.asm.ClassWriter.<init>
  [ 3] jdk.internal.org.objectweb.asm.ClassWriter.<init>
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] zio.Promise.$anonfun$interruptJoiner$1
  [14] zio.Promise$$Lambda$330.0x0000000800dcbd88.apply$mcV$sp
  [15] scala.runtime.java8.JFunction0$mcV$sp.apply
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.evaluateEffect
  [19] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [20] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [21] zio.internal.FiberRuntime.run
  [22] zio.internal.ZScheduler$$anon$4.run

--- 73400 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ClassWriter.toByteArray
  [ 2] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] zio.stream.internal.ChannelExecutor.runFinalizers
  [14] zio.stream.internal.ChannelExecutor.popAllFinalizers
  [15] zio.stream.internal.ChannelExecutor.close
  [16] zio.stream.ZChannel.$anonfun$runScoped$5
  [17] zio.stream.ZChannel$$Lambda$1474.0x000000080117f978.apply
  [18] zio.ZIO$ReleaseExit.$anonfun$apply$13
  [19] zio.ZIO$ReleaseExit$$Lambda$1351.0x00000008011568d0.apply
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] zio.internal.ZScheduler$$anon$4.run

--- 73256 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.Object.clone
  [ 2] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.Cause.stripFailures
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 72648 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.MethodVisitor.<init>
  [ 2] jdk.internal.org.objectweb.asm.MethodVisitor.<init>
  [ 3] jdk.internal.org.objectweb.asm.MethodWriter.<init>
  [ 4] jdk.internal.org.objectweb.asm.ClassWriter.visitMethod
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 8] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [10] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [11] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [12] java.lang.invoke.BootstrapMethodInvoker.invoke
  [13] java.lang.invoke.CallSite.makeSite
  [14] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [15] java.lang.invoke.MethodHandleNatives.linkCallSite
  [16] zio.Cause.stripFailures
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.evaluateEffect
  [19] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [20] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [21] zio.internal.FiberRuntime.run
  [22] zio.internal.ZScheduler$$anon$4.run

--- 72624 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.put
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass
  [ 5] jdk.internal.org.objectweb.asm.ClassWriter.visit
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.Hub$$anon$1.shutdown
  [18] zio.stream.ZStream.$anonfun$toHub$2
  [19] zio.stream.ZStream$$Lambda$1576.0x000000080119b990.apply
  [20] zio.ZIO$.$anonfun$acquireRelease$1
  [21] zio.ZIO$$$Lambda$338.0x0000000800dcf3e8.apply
  [22] zio.ZIO$.$anonfun$acquireReleaseExit$3
  [23] zio.ZIO$$$Lambda$1146.0x00000008010e2ff8.apply
  [24] zio.ZIO$.$anonfun$addFinalizerExit$3
  [25] zio.ZIO$$$Lambda$1150.0x00000008010e13d0.apply
  [26] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$releaseAll$2
  [27] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2709.0x0000000801333000.apply
  [28] zio.ZIO$.$anonfun$foreach$3
  [29] zio.ZIO$$$Lambda$2261.0x0000000801290ba8.apply
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.evaluateEffect
  [32] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [33] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [34] zio.internal.FiberRuntime.run
  [35] zio.internal.ZScheduler$$anon$4.run

--- 72608 bytes (0.00%), 1 sample
  [ 0] java.util.HashMap$EntryIterator
  [ 1] java.util.HashMap$EntrySet.iterator
  [ 2] zio.stm.ZSTM$internal$.collectTodos
  [ 3] zio.stm.ZSTM$internal$.completeTodos
  [ 4] zio.stm.ZSTM$internal$.tryCommit
  [ 5] zio.stm.ZSTM$internal$.$anonfun$tryCommitAsync$3
  [ 6] zio.stm.ZSTM$internal$.tryCommitAsync
  [ 7] zio.stm.ZSTM$internal$.$anonfun$tryCommitAsync$2
  [ 8] zio.stm.ZSTM$internal$$$Lambda$347.0x0000000800dd5fa8.apply$mcV$sp
  [ 9] scala.runtime.java8.JFunction0$mcV$sp.apply
  [10] zio.stm.ZSTM$internal$.execTodos
  [11] zio.stm.ZSTM$internal$.$anonfun$completeTodos$1
  [12] zio.stm.ZSTM$internal$$$Lambda$353.0x0000000800dd2000.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 72608 bytes (0.00%), 1 sample
  [ 0] java.lang.invoke.MethodType
  [ 1] java.lang.invoke.MethodType.makeImpl
  [ 2] java.lang.invoke.MethodHandleNatives.findMethodHandleType
  [ 3] zio.Exit.$times$greater
  [ 4] zio.Exit.$times$greater$
  [ 5] zio.Exit$Success.$times$greater
  [ 6] zio.stream.internal.ChannelExecutor.$anonfun$close$7
  [ 7] zio.stream.internal.ChannelExecutor$$Lambda$1788.0x00000008011ea3c0.apply
  [ 8] zio.ZIO.$anonfun$map$2
  [ 9] zio.ZIO$$Lambda$136.0x0000000800d47cb0.apply
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.evaluateEffect
  [65] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [66] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [67] zio.internal.FiberRuntime.run
  [68] zio.internal.ZScheduler$$anon$4.run

--- 72592 bytes (0.00%), 1 sample
  [ 0] java.lang.String
  [ 1] jdk.internal.org.objectweb.asm.ClassReader.readUtf
  [ 2] jdk.internal.org.objectweb.asm.ClassReader.readUtf
  [ 3] jdk.internal.org.objectweb.asm.ClassReader.readUTF8
  [ 4] jdk.internal.org.objectweb.asm.ClassReader.readConst
  [ 5] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 6] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 7] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [11] java.lang.invoke.LambdaMetafactory.altMetafactory
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [13] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [14] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [15] java.lang.invoke.BootstrapMethodInvoker.invoke
  [16] java.lang.invoke.CallSite.makeSite
  [17] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [18] java.lang.invoke.MethodHandleNatives.linkCallSite
  [19] zio.Hub$Strategy$BackPressure.$anonfun$shutdown$16
  [20] zio.Hub$Strategy$BackPressure$$Lambda$2782.0x000000080134b0d8.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] zio.internal.ZScheduler$$anon$4.run

--- 72584 bytes (0.00%), 1 sample
  [ 0] zio.internal.FiberRuntime$$Lambda$2751+0x00000008013436d8
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 71664 bytes (0.00%), 3 samples
  [ 0] kafka.coordinator.group.InitialDelayedJoin$$Lambda$2515+0x00000008012ef8b8
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] kafka.coordinator.group.InitialDelayedJoin.onComplete
  [ 4] kafka.server.DelayedOperation.forceComplete
  [ 5] kafka.server.DelayedOperation.run
  [ 6] java.util.concurrent.Executors$RunnableAdapter.call
  [ 7] java.util.concurrent.FutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 70240 bytes (0.00%), 3 samples
  [ 0] scala.collection.mutable.ArrayBuffer$$anon$1
  [ 1] scala.collection.mutable.ArrayBuffer$.newBuilder
  [ 2] scala.collection.StrictOptimizedIterableOps.map
  [ 3] scala.collection.StrictOptimizedIterableOps.map$
  [ 4] scala.collection.mutable.ArrayBuffer.map
  [ 5] kafka.server.DelayedFetch.onComplete
  [ 6] kafka.server.DelayedOperation.forceComplete
  [ 7] kafka.server.DelayedOperation.run
  [ 8] java.util.concurrent.Executors$RunnableAdapter.call
  [ 9] java.util.concurrent.FutureTask.run
  [10] java.util.concurrent.ThreadPoolExecutor.runWorker
  [11] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [12] java.lang.Thread.run

--- 66040 bytes (0.00%), 6 samples
  [ 0] kafka.network.Processor$$Lambda$1140+0x00000008010e6250
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] kafka.network.Processor.processDisconnected
  [ 6] kafka.network.Processor.run
  [ 7] java.lang.Thread.run

--- 62096 bytes (0.00%), 1 sample
  [ 0] java.lang.Integer
  [ 1] sun.nio.ch.SelectionKeyImpl.getFDVal
  [ 2] sun.nio.ch.KQueueSelectorImpl.processUpdateQueue
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 5] sun.nio.ch.SelectorImpl.select
  [ 6] org.apache.kafka.common.network.Selector.select
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 61328 bytes (0.00%), 4 samples
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.kafka.common.record.MultiRecordsSend.writeTo
  [ 3] org.apache.kafka.common.network.NetworkSend.writeTo
  [ 4] org.apache.kafka.common.network.KafkaChannel.write
  [ 5] org.apache.kafka.common.network.Selector.write
  [ 6] org.apache.kafka.common.network.Selector.attemptWrite
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] kafka.network.Processor.poll
  [10] kafka.network.Processor.run
  [11] java.lang.Thread.run

--- 60376 bytes (0.00%), 1 sample
  [ 0] kafka.log.LocalLog$$Lambda$2634+0x0000000801317d18
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.LambdaForm$DMH.0x00000008012b5400.newInvokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x00000008012b5c00.linkToTargetMethod
  [ 5] kafka.log.LocalLog.$anonfun$read$2
  [ 6] kafka.log.LocalLog.read
  [ 7] kafka.log.UnifiedLog.read
  [ 8] kafka.cluster.Partition.readRecords
  [ 9] kafka.cluster.Partition.readFromLocalLog$1
  [10] kafka.cluster.Partition.$anonfun$fetchRecords$2
  [11] kafka.cluster.Partition.fetchRecords
  [12] kafka.server.ReplicaManager.read$1
  [13] kafka.server.ReplicaManager.$anonfun$readFromLocalLog$7
  [14] kafka.server.ReplicaManager$$Lambda$2627.0x0000000801316000.apply
  [15] scala.collection.IterableOnceOps.foreach
  [16] scala.collection.IterableOnceOps.foreach$
  [17] scala.collection.AbstractIterable.foreach
  [18] kafka.server.ReplicaManager.readFromLocalLog
  [19] kafka.server.ReplicaManager.fetchMessages
  [20] kafka.server.KafkaApis.handleFetchRequest
  [21] kafka.server.KafkaApis.handle
  [22] kafka.server.KafkaRequestHandler.run
  [23] java.lang.Thread.run

--- 56752 bytes (0.00%), 2 samples
  [ 0] org.apache.kafka.common.utils.Timer
  [ 1] org.apache.kafka.common.utils.Timer.reset
  [ 2] org.apache.kafka.common.utils.Timer.<init>
  [ 3] org.apache.kafka.common.utils.Time.timer
  [ 4] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup
  [ 5] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run

--- 56456 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.record.FileRecords$TimestampAndOffset
  [ 1] kafka.log.UnifiedLog.$anonfun$fetchOffsetByTimestamp$2
  [ 2] kafka.log.UnifiedLog.fetchOffsetByTimestamp
  [ 3] kafka.cluster.Partition.$anonfun$fetchOffsetForTimestamp$4
  [ 4] kafka.cluster.Partition$$Lambda$2605.0x000000080130a880.apply
  [ 5] scala.Option.flatMap
  [ 6] kafka.cluster.Partition.getOffsetByTimestamp$1
  [ 7] kafka.cluster.Partition.$anonfun$fetchOffsetForTimestamp$1
  [ 8] kafka.cluster.Partition.fetchOffsetForTimestamp
  [ 9] kafka.server.ReplicaManager.fetchOffsetForTimestamp
  [10] kafka.server.KafkaApis.$anonfun$handleListOffsetRequestV1AndAbove$5
  [11] kafka.server.KafkaApis$$Lambda$2602.0x0000000801309af0.apply
  [12] scala.collection.StrictOptimizedIterableOps.map
  [13] scala.collection.StrictOptimizedIterableOps.map$
  [14] scala.collection.convert.JavaCollectionWrappers$JListWrapper.map
  [15] kafka.server.KafkaApis.$anonfun$handleListOffsetRequestV1AndAbove$4
  [16] kafka.server.KafkaApis$$Lambda$2601.0x0000000801309720.apply
  [17] scala.collection.immutable.List.map
  [18] scala.collection.immutable.List.map
  [19] kafka.server.KafkaApis.handleListOffsetRequestV1AndAbove
  [20] kafka.server.KafkaApis.handleListOffsetRequest
  [21] kafka.server.KafkaApis.handle
  [22] kafka.server.KafkaRequestHandler.run
  [23] java.lang.Thread.run

--- 55368 bytes (0.00%), 1 sample
  [ 0] java.nio.HeapByteBuffer
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch.loadBatchWithSize
  [ 3] org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch.loadBatchHeader
  [ 4] org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch.lastOffset
  [ 5] org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize
  [ 6] kafka.log.LogSegment.translateOffset
  [ 7] kafka.log.LogSegment.read
  [ 8] kafka.log.LocalLog.$anonfun$read$2
  [ 9] kafka.log.LocalLog.read
  [10] kafka.log.UnifiedLog.read
  [11] kafka.cluster.Partition.readRecords
  [12] kafka.cluster.Partition.readFromLocalLog$1
  [13] kafka.cluster.Partition.$anonfun$fetchRecords$2
  [14] kafka.cluster.Partition.fetchRecords
  [15] kafka.server.ReplicaManager.read$1
  [16] kafka.server.ReplicaManager.$anonfun$readFromLocalLog$7
  [17] kafka.server.ReplicaManager$$Lambda$2627.0x0000000801316000.apply
  [18] scala.collection.IterableOnceOps.foreach
  [19] scala.collection.IterableOnceOps.foreach$
  [20] scala.collection.AbstractIterable.foreach
  [21] kafka.server.ReplicaManager.readFromLocalLog
  [22] kafka.server.ReplicaManager.fetchMessages
  [23] kafka.server.KafkaApis.handleFetchRequest
  [24] kafka.server.KafkaApis.handle
  [25] kafka.server.KafkaRequestHandler.run
  [26] java.lang.Thread.run

--- 53360 bytes (0.00%), 11 samples
  [ 0] javax.management.MBeanAttributeInfo
  [ 1] org.apache.kafka.common.metrics.JmxReporter$KafkaMbean.getMBeanInfo
  [ 2] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName
  [ 3] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean
  [ 4] com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean
  [ 5] org.apache.kafka.common.metrics.JmxReporter.reregister
  [ 6] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [ 7] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 8] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 9] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [10] org.apache.kafka.common.utils.Utils.closeQuietly
  [11] org.apache.kafka.common.network.Selector.close
  [12] kafka.network.Processor.closeAll
  [13] kafka.network.Processor.$anonfun$run$8
  [14] kafka.network.Processor$$Lambda$2883.0x00000008013617a8.apply$mcV$sp
  [15] kafka.utils.CoreUtils$.swallow
  [16] kafka.network.Processor.run
  [17] java.lang.Thread.run

--- 52632 bytes (0.00%), 1 sample
  [ 0] java.lang.Integer
  [ 1] java.lang.Integer.valueOf
  [ 2] scala.runtime.BoxesRunTime.boxToInteger
  [ 3] scala.Tuple2$mcJI$sp._2
  [ 4] scala.math.Ordering$Tuple2Ordering.compare
  [ 5] scala.math.Ordering$Tuple2Ordering.compare
  [ 6] scala.math.Ordered$$anon$1.compare
  [ 7] kafka.server.LastUsedKey.compareTo
  [ 8] kafka.server.LastUsedKey.compareTo
  [ 9] java.util.TreeMap.compare
  [10] java.util.TreeMap.addEntryToEmptyMap
  [11] java.util.TreeMap.put
  [12] java.util.TreeMap.put
  [13] kafka.server.FetchSessionCache.touch
  [14] kafka.server.FetchManager.newContext
  [15] kafka.server.KafkaApis.handleFetchRequest
  [16] kafka.server.KafkaApis.handle
  [17] kafka.server.KafkaRequestHandler.run
  [18] java.lang.Thread.run

--- 52416 bytes (0.00%), 6 samples
  [ 0] java.util.HashMap$EntryIterator
  [ 1] java.util.HashMap.entrySet
  [ 2] org.apache.kafka.common.network.Selector.clear
  [ 3] org.apache.kafka.common.network.Selector.poll
  [ 4] kafka.network.Processor.poll
  [ 5] kafka.network.Processor.run
  [ 6] java.lang.Thread.run

--- 51864 bytes (0.00%), 1 sample
  [ 0] scala.collection.mutable.CheckedIndexedSeqView$CheckedIterator
  [ 1] scala.collection.mutable.ArrayBufferView.iterator
  [ 2] scala.collection.IndexedSeqOps.iterator
  [ 3] scala.collection.IndexedSeqOps.iterator$
  [ 4] scala.collection.mutable.ArrayBuffer.iterator
  [ 5] scala.collection.IterableOnceOps.foreach
  [ 6] scala.collection.IterableOnceOps.foreach$
  [ 7] scala.collection.AbstractIterable.foreach
  [ 8] kafka.server.ReplicaManager.fetchMessages
  [ 9] kafka.server.KafkaApis.handleFetchRequest
  [10] kafka.server.KafkaApis.handle
  [11] kafka.server.KafkaRequestHandler.run
  [12] java.lang.Thread.run

--- 51168 bytes (0.00%), 6 samples
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 4] org.apache.kafka.common.network.Selector.write
  [ 5] org.apache.kafka.common.network.Selector.attemptWrite
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 50648 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.loader.Resource.getBytes
  [ 2] jdk.internal.loader.URLClassPath$JarLoader$2.getBytes
  [ 3] jdk.internal.loader.BuiltinClassLoader.defineClass
  [ 4] jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull
  [ 5] jdk.internal.loader.BuiltinClassLoader.loadClassOrNull
  [ 6] jdk.internal.loader.BuiltinClassLoader.loadClass
  [ 7] jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass
  [ 8] java.lang.ClassLoader.loadClass
  [ 9] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [10] zio.kafka.consumer.internal.Runloop$$Lambda$1549.0x0000000801197778.apply
  [11] zio.ZIO.$anonfun$onError$1
  [12] zio.ZIO$$Lambda$1551.0x000000080119c000.apply
  [13] zio.ZIO.$anonfun$onExit$3
  [14] zio.ZIO$$Lambda$166.0x0000000800d817b8.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 50248 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry[]
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.<init>
  [ 2] jdk.internal.org.objectweb.asm.ClassWriter.<init>
  [ 3] jdk.internal.org.objectweb.asm.ClassWriter.<init>
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] zio.internal.FiberRuntime.interruptAllChildren
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] zio.internal.ZScheduler$$anon$4.run

--- 49632 bytes (0.00%), 1 sample
  [ 0] kafka.utils.Pool$$Lambda$2013+0x0000000801235d28
  [ 1] kafka.utils.Pool.getAndMaybePut
  [ 2] kafka.server.BrokerTopicStats.topicStats
  [ 3] kafka.server.ReplicaManager.$anonfun$fetchMessages$1
  [ 4] kafka.server.ReplicaManager$$Lambda$2636.0x000000080131f168.apply
  [ 5] scala.collection.IterableOnceOps.foreach
  [ 6] scala.collection.IterableOnceOps.foreach$
  [ 7] scala.collection.AbstractIterable.foreach
  [ 8] kafka.server.ReplicaManager.fetchMessages
  [ 9] kafka.server.KafkaApis.handleFetchRequest
  [10] kafka.server.KafkaApis.handle
  [11] kafka.server.KafkaRequestHandler.run
  [12] java.lang.Thread.run

--- 49632 bytes (0.00%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.common.requests.FetchResponse.toMessage
  [ 2] org.apache.kafka.common.requests.FetchResponse.of
  [ 3] kafka.server.KafkaApis.processResponseCallback$1
  [ 4] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [ 5] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [ 6] kafka.server.KafkaApis$$Lambda$2626.0x0000000801313a70.apply
  [ 7] kafka.server.ReplicaManager.fetchMessages
  [ 8] kafka.server.KafkaApis.handleFetchRequest
  [ 9] kafka.server.KafkaApis.handle
  [10] kafka.server.KafkaRequestHandler.run
  [11] java.lang.Thread.run

--- 49264 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMethodref
  [ 4] jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.generateConstructor
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.stm.ZSTM$Release.$anonfun$apply$10
  [18] zio.stm.ZSTM$Release$$Lambda$219.0x0000000800da3158.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.evaluateEffect
  [21] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [22] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [23] zio.internal.FiberRuntime.run
  [24] zio.internal.ZScheduler$$anon$4.run

--- 48776 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.Object.clone
  [ 2] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.ZIO$.logDebugCause
  [15] zio.ZIO$.logDebug
  [16] zio.kafka.consumer.internal.Runloop$.$anonfun$apply$20
  [17] zio.kafka.consumer.internal.Runloop$$$Lambda$1460.0x000000080117bea0.apply
  [18] zio.ZIO$.$anonfun$addFinalizer$1
  [19] zio.ZIO$$$Lambda$1461.0x000000080117c158.apply
  [20] zio.ZIO$.$anonfun$addFinalizerExit$3
  [21] zio.ZIO$$$Lambda$1150.0x00000008010e13d0.apply
  [22] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$releaseAll$2
  [23] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2709.0x0000000801333000.apply
  [24] zio.ZIO$.$anonfun$foreach$3
  [25] zio.ZIO$$$Lambda$2261.0x0000000801290ba8.apply
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] zio.internal.ZScheduler$$anon$4.run

--- 48600 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ByteVector.putUTF8
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.MethodWriter.<init>
  [ 4] jdk.internal.org.objectweb.asm.ClassWriter.visitMethod
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.stream.internal.ChannelExecutor.$anonfun$finishSubexecutorWithCloseEffect$1
  [18] zio.stream.internal.ChannelExecutor$$Lambda$1806.0x00000008011ee578.apply
  [19] zio.stream.internal.ChannelExecutor.$anonfun$runFinalizers$1
  [20] zio.stream.internal.ChannelExecutor$$Lambda$2763.0x00000008013469c0.apply
  [21] zio.ZIO$.$anonfun$foreach$3
  [22] zio.ZIO$$$Lambda$2261.0x0000000801290ba8.apply
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.evaluateEffect
  [46] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [47] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [48] zio.internal.FiberRuntime.run
  [49] zio.internal.ZScheduler$$anon$4.run

--- 48600 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry[]
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.<init>
  [ 2] jdk.internal.org.objectweb.asm.ClassWriter.<init>
  [ 3] jdk.internal.org.objectweb.asm.ClassWriter.<init>
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] zio.Queue$$anon$1.$anonfun$shutdown$3
  [14] zio.Queue$$anon$1$$Lambda$2812.0x00000008013523a0.apply
  [15] zio.ZIO$WhenZIO$.$anonfun$apply$5
  [16] zio.ZIO$WhenZIO$.$anonfun$apply$5$adapted
  [17] zio.ZIO$WhenZIO$$$Lambda$2714.0x0000000801339978.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] zio.internal.ZScheduler$$anon$4.run

--- 48488 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.Object.clone
  [ 2] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.ZIO$.$anonfun$foreachDiscard$1
  [15] zio.ZIO$$$Lambda$2804.0x0000000801350a60.apply
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.evaluateEffect
  [42] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [43] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [44] zio.internal.FiberRuntime.run
  [45] zio.internal.ZScheduler$$anon$4.run

--- 47704 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ByteVector.putUTF8
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass
  [ 5] jdk.internal.org.objectweb.asm.ClassWriter.visit
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.ZIO$.$anonfun$foreachParUnbounded$1
  [18] zio.ZIO$$$Lambda$2822.0x0000000801354578.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] zio.internal.ZScheduler$$anon$4.run

--- 47704 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ByteVector.putUTF8
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass
  [ 5] jdk.internal.org.objectweb.asm.ClassWriter.visit
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.Queue$$anon$1.$anonfun$shutdown$1
  [18] zio.Queue$$anon$1$$Lambda$2810.0x0000000801351d10.apply
  [19] zio.ZIO$.$anonfun$fiberIdWith$1
  [20] zio.ZIO$$$Lambda$225.0x0000000800da4f48.apply
  [21] zio.ZIO$.$anonfun$descriptorWith$1
  [22] zio.ZIO$$$Lambda$226.0x0000000800da5318.apply
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] zio.internal.ZScheduler$$anon$4.run

--- 47680 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.StringLatin1.newString
  [ 2] java.lang.StringBuilder.toString
  [ 3] sun.invoke.util.BytecodeDescriptor.unparseMethod
  [ 4] java.lang.invoke.MethodType.toMethodDescriptorString
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.generateConstructor
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.kafka.consumer.internal.ConsumerAccess$.$anonfun$make$5
  [18] zio.kafka.consumer.internal.ConsumerAccess$$$Lambda$1295.0x0000000801139310.apply
  [19] zio.ZIO$.$anonfun$acquireRelease$1
  [20] zio.ZIO$$$Lambda$338.0x0000000800dcf3e8.apply
  [21] zio.ZIO$.$anonfun$acquireReleaseExit$3
  [22] zio.ZIO$$$Lambda$1146.0x00000008010e2ff8.apply
  [23] zio.ZIO$.$anonfun$addFinalizerExit$3
  [24] zio.ZIO$$$Lambda$1150.0x00000008010e13d0.apply
  [25] zio.Scope$ReleaseMap$unsafe$$anon$3.$anonfun$releaseAll$2
  [26] zio.Scope$ReleaseMap$unsafe$$anon$3$$Lambda$2709.0x0000000801333000.apply
  [27] zio.ZIO$.$anonfun$foreach$3
  [28] zio.ZIO$$$Lambda$2261.0x0000000801290ba8.apply
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.evaluateEffect
  [31] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [32] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [33] zio.internal.FiberRuntime.run
  [34] zio.internal.ZScheduler$$anon$4.run

--- 47672 bytes (0.00%), 1 sample
  [ 0] java.lang.Class
  [ 1] java.lang.ClassLoader.defineClass0
  [ 2] java.lang.System$2.defineClass
  [ 3] java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClass
  [ 4] java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClassAsLookup
  [ 5] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 9] java.lang.invoke.LambdaMetafactory.altMetafactory
  [10] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [11] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [12] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [13] java.lang.invoke.BootstrapMethodInvoker.invoke
  [14] java.lang.invoke.CallSite.makeSite
  [15] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [16] java.lang.invoke.MethodHandleNatives.linkCallSite
  [17] zio.ZIO$.$anonfun$foreachParUnbounded$1
  [18] zio.ZIO$$$Lambda$2822.0x0000000801354578.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] zio.internal.ZScheduler$$anon$4.run

--- 47624 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ClassReader.readUtf
  [ 2] jdk.internal.org.objectweb.asm.ClassReader.readUtf
  [ 3] jdk.internal.org.objectweb.asm.ClassReader.readUTF8
  [ 4] jdk.internal.org.objectweb.asm.ClassReader.readConst
  [ 5] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 6] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 7] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [11] java.lang.invoke.LambdaMetafactory.altMetafactory
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [13] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [14] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [15] java.lang.invoke.BootstrapMethodInvoker.invoke
  [16] java.lang.invoke.CallSite.makeSite
  [17] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [18] java.lang.invoke.MethodHandleNatives.linkCallSite
  [19] zio.Queue$Strategy$BackPressure.$anonfun$shutdown$7
  [20] zio.Queue$Strategy$BackPressure$$Lambda$2816.0x0000000801352fb0.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] zio.internal.ZScheduler$$anon$4.run

--- 47616 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.SymbolTable$Entry
  [ 1] jdk.internal.org.objectweb.asm.SymbolTable.put
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8Reference
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantClass
  [ 5] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
  [ 6] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMethodref
  [ 7] jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn
  [ 8] jdk.internal.org.objectweb.asm.MethodVisitor.visitMethodInsn
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate
  [10] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [11] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [12] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [13] java.lang.invoke.LambdaMetafactory.altMetafactory
  [14] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [15] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [16] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [17] java.lang.invoke.BootstrapMethodInvoker.invoke
  [18] java.lang.invoke.CallSite.makeSite
  [19] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [20] java.lang.invoke.MethodHandleNatives.linkCallSite
  [21] zio.stream.Take$.failCause
  [22] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [23] zio.kafka.consumer.internal.Runloop$$Lambda$1549.0x0000000801197778.apply
  [24] zio.ZIO.$anonfun$onError$1
  [25] zio.ZIO$$Lambda$1551.0x000000080119c000.apply
  [26] zio.ZIO.$anonfun$onExit$3
  [27] zio.ZIO$$Lambda$166.0x0000000800d817b8.apply
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.evaluateEffect
  [30] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [31] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [32] zio.internal.FiberRuntime.run
  [33] zio.internal.ZScheduler$$anon$4.run

--- 47608 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ClassReader.readUtf
  [ 2] jdk.internal.org.objectweb.asm.ClassReader.readUtf
  [ 3] jdk.internal.org.objectweb.asm.ClassReader.readUTF8
  [ 4] jdk.internal.org.objectweb.asm.ClassReader.readConst
  [ 5] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 6] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 7] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [11] java.lang.invoke.LambdaMetafactory.altMetafactory
  [12] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [13] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [14] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [15] java.lang.invoke.BootstrapMethodInvoker.invoke
  [16] java.lang.invoke.CallSite.makeSite
  [17] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [18] java.lang.invoke.MethodHandleNatives.linkCallSite
  [19] zio.Queue$$anon$1.$anonfun$offer$1
  [20] zio.Queue$$anon$1$$Lambda$1831.0x00000008011f6868.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.evaluateEffect
  [25] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [26] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [27] zio.internal.FiberRuntime.run
  [28] zio.internal.ZScheduler$$anon$4.run

--- 47592 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.invoke.TypeConvertingMethodAdapter.cast
  [ 2] java.lang.invoke.TypeConvertingMethodAdapter.convertType
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.convertArgumentTypes
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 8] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 9] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [10] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [11] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [12] java.lang.invoke.BootstrapMethodInvoker.invoke
  [13] java.lang.invoke.CallSite.makeSite
  [14] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [15] java.lang.invoke.MethodHandleNatives.linkCallSite
  [16] zio.Cause.flatMap
  [17] zio.Cause.map
  [18] zio.stream.Take$.failCause
  [19] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [20] zio.kafka.consumer.internal.Runloop$$Lambda$1549.0x0000000801197778.apply
  [21] zio.ZIO.$anonfun$onError$1
  [22] zio.ZIO$$Lambda$1551.0x000000080119c000.apply
  [23] zio.ZIO.$anonfun$onExit$3
  [24] zio.ZIO$$Lambda$166.0x0000000800d817b8.apply
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.evaluateEffect
  [27] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [28] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [29] zio.internal.FiberRuntime.run
  [30] zio.internal.ZScheduler$$anon$4.run

--- 47584 bytes (0.00%), 1 sample
  [ 0] zio.ZIO$UpdateRuntimeFlagsWithin$Uninterruptible
  [ 1] zio.ZIO.uninterruptible
  [ 2] zio.ZIO.uninterruptible$
  [ 3] zio.ZIO$OnSuccess.uninterruptible
  [ 4] zio.stream.internal.ChannelExecutor.close
  [ 5] zio.stream.internal.ChannelExecutor.$anonfun$pullFromUpstream$10
  [ 6] zio.stream.internal.ChannelExecutor$$Lambda$1804.0x00000008011ee1a8.apply
  [ 7] zio.stream.internal.ChannelExecutor.$anonfun$finishSubexecutorWithCloseEffect$4
  [ 8] zio.stream.internal.ChannelExecutor$$Lambda$2808.0x0000000801351688.apply
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.evaluateEffect
  [36] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [37] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [38] zio.internal.FiberRuntime.run
  [39] zio.internal.ZScheduler$$anon$4.run

--- 47584 bytes (0.00%), 1 sample
  [ 0] java.lang.String
  [ 1] java.lang.StringLatin1.replace
  [ 2] java.lang.String.replace
  [ 3] java.lang.Class.descriptorString
  [ 4] sun.invoke.util.BytecodeDescriptor.unparse
  [ 5] java.lang.invoke.TypeConvertingMethodAdapter.convertType
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator.generate
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.ZIO$.foreachPar
  [19] zio.Queue$Strategy$BackPressure.$anonfun$shutdown$9
  [20] zio.Queue$Strategy$BackPressure$$Lambda$2818.0x0000000801353640.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] zio.internal.ZScheduler$$anon$4.run

--- 47584 bytes (0.00%), 1 sample
  [ 0] java.lang.String
  [ 1] java.lang.StringLatin1.replace
  [ 2] java.lang.String.replace
  [ 3] java.lang.Class.descriptorString
  [ 4] sun.invoke.util.BytecodeDescriptor.unparseSig
  [ 5] sun.invoke.util.BytecodeDescriptor.unparseMethod
  [ 6] java.lang.invoke.MethodType.toMethodDescriptorString
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] zio.Cause.flatMap
  [19] zio.Cause.map
  [20] zio.stream.Take$.failCause
  [21] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [22] zio.kafka.consumer.internal.Runloop$$Lambda$1549.0x0000000801197778.apply
  [23] zio.ZIO.$anonfun$onError$1
  [24] zio.ZIO$$Lambda$1551.0x000000080119c000.apply
  [25] zio.ZIO.$anonfun$onExit$3
  [26] zio.ZIO$$Lambda$166.0x0000000800d817b8.apply
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.evaluateEffect
  [29] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [30] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [31] zio.internal.FiberRuntime.run
  [32] zio.internal.ZScheduler$$anon$4.run

--- 47336 bytes (0.00%), 4 samples
  [ 0] java.lang.Integer
  [ 1] java.lang.Integer.valueOf
  [ 2] org.apache.kafka.common.record.MultiRecordsSend.writeTo
  [ 3] org.apache.kafka.common.network.NetworkSend.writeTo
  [ 4] org.apache.kafka.common.network.KafkaChannel.write
  [ 5] org.apache.kafka.common.network.Selector.write
  [ 6] org.apache.kafka.common.network.Selector.attemptWrite
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] kafka.network.Processor.poll
  [10] kafka.network.Processor.run
  [11] java.lang.Thread.run

--- 46608 bytes (0.00%), 3 samples
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.kafka.common.record.MultiRecordsSend.writeTo
  [ 3] org.apache.kafka.common.network.NetworkSend.writeTo
  [ 4] org.apache.kafka.common.network.KafkaChannel.write
  [ 5] org.apache.kafka.common.network.Selector.write
  [ 6] org.apache.kafka.common.network.Selector.attemptWrite
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] kafka.network.Processor.poll
  [10] kafka.network.Processor.run
  [11] java.lang.Thread.run

--- 45048 bytes (0.00%), 3 samples
  [ 0] byte[]
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] org.apache.kafka.common.protocol.Readable.readString
  [ 4] org.apache.kafka.common.message.RequestHeaderData.read
  [ 5] org.apache.kafka.common.message.RequestHeaderData.<init>
  [ 6] org.apache.kafka.common.requests.RequestHeader.parse
  [ 7] kafka.network.Processor.parseRequestHeader
  [ 8] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [ 9] kafka.network.Processor$$Lambda$1138.0x00000008010e5b90.accept
  [10] java.util.LinkedHashMap$LinkedValues.forEach
  [11] kafka.network.Processor.processCompletedReceives
  [12] kafka.network.Processor.run
  [13] java.lang.Thread.run

--- 44952 bytes (0.00%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] java.util.ArrayList.grow
  [ 2] java.util.ArrayList.grow
  [ 3] java.util.ArrayList.add
  [ 4] java.util.ArrayList.add
  [ 5] org.apache.kafka.common.requests.FetchResponse.toMessage
  [ 6] org.apache.kafka.common.requests.FetchResponse.of
  [ 7] kafka.server.KafkaApis.processResponseCallback$1
  [ 8] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [ 9] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [10] kafka.server.KafkaApis$$Lambda$2626.0x0000000801313a70.apply
  [11] kafka.server.ReplicaManager.fetchMessages
  [12] kafka.server.KafkaApis.handleFetchRequest
  [13] kafka.server.KafkaApis.handle
  [14] kafka.server.KafkaRequestHandler.run
  [15] java.lang.Thread.run

--- 44920 bytes (0.00%), 1 sample
  [ 0] scala.collection.Iterator$$anon$9
  [ 1] scala.collection.Iterator.map
  [ 2] scala.collection.Iterator.map$
  [ 3] scala.collection.AbstractIterator.map
  [ 4] scala.collection.View$Map.iterator
  [ 5] scala.collection.mutable.Growable.addAll
  [ 6] scala.collection.mutable.Growable.addAll$
  [ 7] scala.collection.immutable.MapBuilderImpl.addAll
  [ 8] scala.collection.immutable.Map$.from
  [ 9] scala.collection.immutable.Map$.from
  [10] scala.collection.MapOps.map
  [11] scala.collection.MapOps.map$
  [12] scala.collection.AbstractMap.map
  [13] kafka.server.DelayedProduce.onComplete
  [14] kafka.server.DelayedOperation.forceComplete
  [15] kafka.server.DelayedProduce.tryComplete
  [16] kafka.server.DelayedOperation.safeTryCompleteOrElse
  [17] kafka.server.DelayedOperationPurgatory.tryCompleteElseWatch
  [18] kafka.server.ReplicaManager.appendRecords
  [19] kafka.coordinator.group.GroupMetadataManager.storeGroup
  [20] kafka.coordinator.group.GroupCoordinator.$anonfun$doSyncGroup$1
  [21] kafka.coordinator.group.GroupCoordinator$$Lambda$2537.0x00000008012f7c58.apply$mcV$sp
  [22] scala.runtime.java8.JFunction0$mcV$sp.apply
  [23] kafka.coordinator.group.GroupMetadata.inLock
  [24] kafka.coordinator.group.GroupCoordinator.handleSyncGroup
  [25] kafka.coordinator.group.GroupCoordinatorAdapter.syncGroup
  [26] kafka.server.KafkaApis.handleSyncGroupRequest
  [27] kafka.server.KafkaApis.handle
  [28] kafka.server.KafkaRequestHandler.run
  [29] java.lang.Thread.run

--- 42376 bytes (0.00%), 6 samples
  [ 0] kafka.network.Processor$$Lambda$1138+0x00000008010e5b90
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] kafka.network.Processor.processCompletedReceives
  [ 6] kafka.network.Processor.run
  [ 7] java.lang.Thread.run

--- 42352 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.String.<init>
  [ 2] java.lang.String.<init>
  [ 3] org.apache.kafka.common.protocol.Readable.readString
  [ 4] org.apache.kafka.common.message.SyncGroupRequestData$SyncGroupRequestAssignment.read
  [ 5] org.apache.kafka.common.message.SyncGroupRequestData$SyncGroupRequestAssignment.<init>
  [ 6] org.apache.kafka.common.message.SyncGroupRequestData.read
  [ 7] org.apache.kafka.common.message.SyncGroupRequestData.<init>
  [ 8] org.apache.kafka.common.requests.SyncGroupRequest.parse
  [ 9] org.apache.kafka.common.requests.AbstractRequest.doParseRequest
  [10] org.apache.kafka.common.requests.AbstractRequest.parseRequest
  [11] org.apache.kafka.common.requests.RequestContext.parseRequest
  [12] kafka.network.RequestChannel$Request.<init>
  [13] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [14] kafka.network.Processor$$Lambda$1138.0x00000008010e5b90.accept
  [15] java.util.LinkedHashMap$LinkedValues.forEach
  [16] kafka.network.Processor.processCompletedReceives
  [17] kafka.network.Processor.run
  [18] java.lang.Thread.run

--- 40688 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.message.FetchResponseData$EpochEndOffset
  [ 1] org.apache.kafka.common.message.FetchResponseData$PartitionData.write
  [ 2] org.apache.kafka.common.message.FetchResponseData$FetchableTopicResponse.write
  [ 3] org.apache.kafka.common.message.FetchResponseData.write
  [ 4] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [ 5] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [ 6] org.apache.kafka.common.requests.AbstractResponse.toSend
  [ 7] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [ 8] kafka.network.RequestChannel$Request.buildResponseSend
  [ 9] kafka.network.RequestChannel.sendResponse
  [10] kafka.server.KafkaApis.processResponseCallback$1
  [11] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [12] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [13] kafka.server.KafkaApis$$Lambda$2626.0x0000000801313a70.apply
  [14] kafka.server.ReplicaManager.fetchMessages
  [15] kafka.server.KafkaApis.handleFetchRequest
  [16] kafka.server.KafkaApis.handle
  [17] kafka.server.KafkaRequestHandler.run
  [18] java.lang.Thread.run

--- 40672 bytes (0.00%), 1 sample
  [ 0] scala.Some
  [ 1] kafka.log.UnifiedLog.maybeIncrementHighWatermark
  [ 2] kafka.cluster.Partition.maybeIncrementLeaderHW
  [ 3] kafka.cluster.Partition.$anonfun$appendRecordsToLeader$1
  [ 4] kafka.cluster.Partition.appendRecordsToLeader
  [ 5] kafka.server.ReplicaManager.$anonfun$appendToLocalLog$6
  [ 6] kafka.server.ReplicaManager$$Lambda$2317.0x00000008012a6ff0.apply
  [ 7] scala.collection.Iterator$$anon$9.next
  [ 8] scala.collection.mutable.Growable.addAll
  [ 9] scala.collection.mutable.Growable.addAll$
  [10] scala.collection.immutable.MapBuilderImpl.addAll
  [11] scala.collection.immutable.Map$.from
  [12] scala.collection.immutable.Map$.from
  [13] scala.collection.MapOps.map
  [14] scala.collection.MapOps.map$
  [15] scala.collection.AbstractMap.map
  [16] kafka.server.ReplicaManager.appendToLocalLog
  [17] kafka.server.ReplicaManager.appendRecords
  [18] kafka.coordinator.group.GroupMetadataManager.storeGroup
  [19] kafka.coordinator.group.GroupCoordinator.$anonfun$doSyncGroup$1
  [20] kafka.coordinator.group.GroupCoordinator$$Lambda$2537.0x00000008012f7c58.apply$mcV$sp
  [21] scala.runtime.java8.JFunction0$mcV$sp.apply
  [22] kafka.coordinator.group.GroupMetadata.inLock
  [23] kafka.coordinator.group.GroupCoordinator.handleSyncGroup
  [24] kafka.coordinator.group.GroupCoordinatorAdapter.syncGroup
  [25] kafka.server.KafkaApis.handleSyncGroupRequest
  [26] kafka.server.KafkaApis.handle
  [27] kafka.server.KafkaRequestHandler.run
  [28] java.lang.Thread.run

--- 40672 bytes (0.00%), 1 sample
  [ 0] scala.collection.convert.JavaCollectionWrappers$JIteratorWrapper
  [ 1] scala.collection.convert.JavaCollectionWrappers$JCollectionWrapper.iterator
  [ 2] scala.collection.IterableOnceOps.foreach
  [ 3] scala.collection.IterableOnceOps.foreach$
  [ 4] scala.collection.AbstractIterable.foreach
  [ 5] kafka.cluster.Partition.maybeIncrementLeaderHW
  [ 6] kafka.cluster.Partition.$anonfun$appendRecordsToLeader$1
  [ 7] kafka.cluster.Partition.appendRecordsToLeader
  [ 8] kafka.server.ReplicaManager.$anonfun$appendToLocalLog$6
  [ 9] kafka.server.ReplicaManager$$Lambda$2317.0x00000008012a6ff0.apply
  [10] scala.collection.Iterator$$anon$9.next
  [11] scala.collection.mutable.Growable.addAll
  [12] scala.collection.mutable.Growable.addAll$
  [13] scala.collection.immutable.MapBuilderImpl.addAll
  [14] scala.collection.immutable.Map$.from
  [15] scala.collection.immutable.Map$.from
  [16] scala.collection.MapOps.map
  [17] scala.collection.MapOps.map$
  [18] scala.collection.AbstractMap.map
  [19] kafka.server.ReplicaManager.appendToLocalLog
  [20] kafka.server.ReplicaManager.appendRecords
  [21] kafka.coordinator.group.GroupMetadataManager.storeGroup
  [22] kafka.coordinator.group.GroupCoordinator.$anonfun$onCompleteJoin$1
  [23] kafka.coordinator.group.GroupCoordinator$$Lambda$2516.0x00000008012efb78.apply
  [24] kafka.coordinator.group.GroupMetadata.inLock
  [25] kafka.coordinator.group.GroupCoordinator.onCompleteJoin
  [26] kafka.coordinator.group.DelayedJoin.onComplete
  [27] kafka.server.DelayedOperation.forceComplete
  [28] kafka.coordinator.group.DelayedJoin.$anonfun$tryComplete$1
  [29] kafka.coordinator.group.DelayedJoin$$Lambda$2694.0x000000080132efc8.apply$mcZ$sp
  [30] kafka.coordinator.group.GroupCoordinator.$anonfun$tryCompleteJoin$1
  [31] kafka.coordinator.group.GroupCoordinator$$Lambda$2695.0x000000080132f2a8.apply$mcZ$sp
  [32] scala.runtime.java8.JFunction0$mcZ$sp.apply
  [33] kafka.coordinator.group.GroupMetadata.inLock
  [34] kafka.coordinator.group.GroupCoordinator.tryCompleteJoin
  [35] kafka.coordinator.group.DelayedJoin.tryComplete
  [36] kafka.server.DelayedOperation.safeTryCompleteOrElse
  [37] kafka.server.DelayedOperationPurgatory.tryCompleteElseWatch
  [38] kafka.coordinator.group.GroupCoordinator.prepareRebalance
  [39] kafka.coordinator.group.GroupCoordinator.$anonfun$maybePrepareRebalance$1
  [40] kafka.coordinator.group.GroupCoordinator$$Lambda$2512.0x00000008012ee7a0.apply$mcV$sp
  [41] scala.runtime.java8.JFunction0$mcV$sp.apply
  [42] kafka.coordinator.group.GroupMetadata.inLock
  [43] kafka.coordinator.group.GroupCoordinator.maybePrepareRebalance
  [44] kafka.coordinator.group.GroupCoordinator.removeMemberAndUpdateGroup
  [45] kafka.coordinator.group.GroupCoordinator.removeCurrentMemberFromGroup$1
  [46] kafka.coordinator.group.GroupCoordinator.$anonfun$handleLeaveGroup$8
  [47] kafka.coordinator.group.GroupCoordinator$$Lambda$2689.0x000000080132dee0.apply
  [48] scala.Option.getOrElse
  [49] kafka.coordinator.group.GroupCoordinator.$anonfun$handleLeaveGroup$5
  [50] kafka.coordinator.group.GroupCoordinator$$Lambda$2688.0x000000080132db10.apply
  [51] scala.collection.immutable.List.map
  [52] kafka.coordinator.group.GroupCoordinator.$anonfun$handleLeaveGroup$4
  [53] kafka.coordinator.group.GroupCoordinator$$Lambda$2687.0x000000080132d548.apply$mcV$sp
  [54] scala.runtime.java8.JFunction0$mcV$sp.apply
  [55] kafka.coordinator.group.GroupMetadata.inLock
  [56] kafka.coordinator.group.GroupCoordinator.handleLeaveGroup
  [57] kafka.coordinator.group.GroupCoordinatorAdapter.leaveGroup
  [58] kafka.server.KafkaApis.handleLeaveGroupRequest
  [59] kafka.server.KafkaApis.handle
  [60] kafka.server.KafkaRequestHandler.run
  [61] java.lang.Thread.run

--- 40320 bytes (0.00%), 6 samples
  [ 0] java.util.regex.Matcher
  [ 1] java.util.regex.Matcher.getTextLength
  [ 2] java.util.regex.Matcher.reset
  [ 3] java.util.regex.Matcher.<init>
  [ 4] java.util.regex.Pattern.matcher
  [ 5] org.apache.kafka.common.utils.Sanitizer.jmxSanitize
  [ 6] org.apache.kafka.common.metrics.JmxReporter.getMBeanName
  [ 7] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [ 8] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 9] org.apache.kafka.common.metrics.Metrics.removeSensor
  [10] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [11] org.apache.kafka.common.utils.Utils.closeQuietly
  [12] org.apache.kafka.common.network.Selector.close
  [13] kafka.network.Processor.closeAll
  [14] kafka.network.Processor.$anonfun$run$8
  [15] kafka.network.Processor$$Lambda$2883.0x00000008013617a8.apply$mcV$sp
  [16] kafka.utils.CoreUtils$.swallow
  [17] kafka.network.Processor.run
  [18] java.lang.Thread.run

--- 39728 bytes (0.00%), 3 samples
  [ 0] byte[]
  [ 1] jdk.internal.loader.Resource.getBytes
  [ 2] jdk.internal.loader.URLClassPath$JarLoader$2.getBytes
  [ 3] jdk.internal.loader.BuiltinClassLoader.defineClass
  [ 4] jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull
  [ 5] jdk.internal.loader.BuiltinClassLoader.loadClassOrNull
  [ 6] jdk.internal.loader.BuiltinClassLoader.loadClass
  [ 7] jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass
  [ 8] java.lang.ClassLoader.loadClass
  [ 9] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [10] zio.kafka.consumer.internal.Runloop$$Lambda$1549.0x0000000801197778.apply
  [11] zio.ZIO.$anonfun$onError$1
  [12] zio.ZIO$$Lambda$1551.0x000000080119c000.apply
  [13] zio.ZIO.$anonfun$onExit$3
  [14] zio.ZIO$$Lambda$166.0x0000000800d817b8.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 38304 bytes (0.00%), 4 samples
  [ 0] kafka.utils.timer.SystemTimer$$Lambda$2391+0x00000008012c5388
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] kafka.utils.timer.SystemTimer.advanceClock
  [ 4] kafka.server.DelayedOperationPurgatory.advanceClock
  [ 5] kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper.doWork
  [ 6] kafka.utils.ShutdownableThread.run

--- 37576 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.kafka.common.protocol.SendBuilder.<init>
  [ 3] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [ 4] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [ 5] org.apache.kafka.common.requests.AbstractResponse.toSend
  [ 6] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [ 7] kafka.network.RequestChannel$Request.buildResponseSend
  [ 8] kafka.network.RequestChannel.sendResponse
  [ 9] kafka.server.RequestHandlerHelper.sendResponseMaybeThrottle
  [10] kafka.server.KafkaApis.handleOffsetFetchRequestV8AndAbove
  [11] kafka.server.KafkaApis.handleOffsetFetchRequest
  [12] kafka.server.KafkaApis.handle
  [13] kafka.server.KafkaRequestHandler.run
  [14] java.lang.Thread.run

--- 37480 bytes (0.00%), 2 samples
  [ 0] kafka.server.CachedPartition
  [ 1] kafka.server.FetchSession.$anonfun$update$2
  [ 2] kafka.server.FetchSession$$Lambda$2668.0x0000000801328920.accept
  [ 3] java.util.ArrayList.forEach
  [ 4] kafka.server.FetchSession.update
  [ 5] kafka.server.FetchManager.newContext
  [ 6] kafka.server.KafkaApis.handleFetchRequest
  [ 7] kafka.server.KafkaApis.handle
  [ 8] kafka.server.KafkaRequestHandler.run
  [ 9] java.lang.Thread.run

--- 37416 bytes (0.00%), 1 sample
  [ 0] scala.collection.immutable.Map$Map4
  [ 1] scala.collection.immutable.Map$Map3.updated
  [ 2] scala.collection.immutable.Map$Map3.updated
  [ 3] scala.collection.immutable.MapBuilderImpl.addOne
  [ 4] scala.collection.immutable.MapBuilderImpl.addOne
  [ 5] scala.collection.immutable.MapBuilderImpl.addOne
  [ 6] scala.collection.mutable.Growable.addAll
  [ 7] scala.collection.mutable.Growable.addAll$
  [ 8] scala.collection.immutable.MapBuilderImpl.addAll
  [ 9] scala.collection.immutable.Map$.from
  [10] scala.collection.IterableOnceOps.toMap
  [11] scala.collection.IterableOnceOps.toMap$
  [12] scala.collection.AbstractIterable.toMap
  [13] kafka.coordinator.group.GroupMetadataManager.$anonfun$getOffsets$5
  [14] kafka.coordinator.group.GroupMetadataManager$$Lambda$2578.0x0000000801303b10.apply
  [15] kafka.coordinator.group.GroupMetadata.inLock
  [16] kafka.coordinator.group.GroupMetadataManager.getOffsets
  [17] kafka.coordinator.group.GroupCoordinator.handleFetchOffsets
  [18] kafka.server.KafkaApis.fetchOffsets
  [19] kafka.server.KafkaApis.$anonfun$handleOffsetFetchRequestV8AndAbove$1
  [20] kafka.server.KafkaApis$$Lambda$2573.0x0000000801302a90.apply
  [21] scala.collection.IterableOnceOps.foreach
  [22] scala.collection.IterableOnceOps.foreach$
  [23] scala.collection.AbstractIterable.foreach
  [24] kafka.server.KafkaApis.handleOffsetFetchRequestV8AndAbove
  [25] kafka.server.KafkaApis.handleOffsetFetchRequest
  [26] kafka.server.KafkaApis.handle
  [27] kafka.server.KafkaRequestHandler.run
  [28] java.lang.Thread.run

--- 37408 bytes (0.00%), 1 sample
  [ 0] java.util.LinkedHashMap$Entry
  [ 1] java.util.LinkedHashMap.newNode
  [ 2] java.util.HashMap.putVal
  [ 3] java.util.HashMap.put
  [ 4] kafka.server.KafkaApis.$anonfun$handleFetchRequest$22
  [ 5] kafka.server.KafkaApis$$Lambda$2652.0x00000008013228a0.accept
  [ 6] java.util.ArrayList.forEach
  [ 7] kafka.server.KafkaApis.$anonfun$handleFetchRequest$21
  [ 8] kafka.server.KafkaApis$$Lambda$2651.0x0000000801322668.accept
  [ 9] java.util.ArrayList.forEach
  [10] kafka.server.KafkaApis.processResponseCallback$1
  [11] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [12] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [13] kafka.server.KafkaApis$$Lambda$2626.0x0000000801313a70.apply
  [14] kafka.server.ReplicaManager.fetchMessages
  [15] kafka.server.KafkaApis.handleFetchRequest
  [16] kafka.server.KafkaApis.handle
  [17] kafka.server.KafkaRequestHandler.run
  [18] java.lang.Thread.run

--- 36608 bytes (0.00%), 1 sample
  [ 0] java.lang.StringBuilder
  [ 1] java.net.Inet4Address.numericToTextFormat
  [ 2] java.net.Inet4Address.getHostAddress
  [ 3] kafka.security.authorizer.AclAuthorizer.authorizeAction
  [ 4] kafka.security.authorizer.AclAuthorizer.$anonfun$authorize$1
  [ 5] kafka.security.authorizer.AclAuthorizer$$Lambda$1169.0x00000008010f4ad0.apply
  [ 6] scala.collection.StrictOptimizedIterableOps.map
  [ 7] scala.collection.StrictOptimizedIterableOps.map$
  [ 8] scala.collection.mutable.ArrayBuffer.map
  [ 9] kafka.security.authorizer.AclAuthorizer.authorize
  [10] kafka.server.AuthHelper.filterByAuthorized
  [11] kafka.server.KafkaApis.handleFetchRequest
  [12] kafka.server.KafkaApis.handle
  [13] kafka.server.KafkaRequestHandler.run
  [14] java.lang.Thread.run

--- 35560 bytes (0.00%), 1 sample
  [ 0] java.util.TreeMap$Entry
  [ 1] java.util.TreeMap.addEntryToEmptyMap
  [ 2] java.util.TreeMap.put
  [ 3] java.util.TreeMap.put
  [ 4] kafka.server.FetchSessionCache.touch
  [ 5] kafka.server.FetchManager.newContext
  [ 6] kafka.server.KafkaApis.handleFetchRequest
  [ 7] kafka.server.KafkaApis.handle
  [ 8] kafka.server.KafkaRequestHandler.run
  [ 9] java.lang.Thread.run

--- 35544 bytes (0.00%), 1 sample
  [ 0] scala.collection.immutable.SetBuilderImpl
  [ 1] scala.collection.immutable.Set$.from
  [ 2] scala.collection.IterableOnceOps.toSet
  [ 3] scala.collection.IterableOnceOps.toSet$
  [ 4] scala.collection.AbstractIterable.toSet
  [ 5] kafka.server.KafkaApis.handleTopicMetadataRequest
  [ 6] kafka.server.KafkaApis.handle
  [ 7] kafka.server.KafkaRequestHandler.run
  [ 8] java.lang.Thread.run

--- 35544 bytes (0.00%), 1 sample
  [ 0] kafka.utils.Pool$$Lambda$2013+0x0000000801235d28
  [ 1] kafka.utils.Pool.getAndMaybePut
  [ 2] kafka.server.BrokerTopicStats.topicStats
  [ 3] kafka.server.BrokerTopicStats.updateBytesOut
  [ 4] kafka.server.KafkaApis.$anonfun$handleFetchRequest$25
  [ 5] kafka.server.KafkaApis$$Lambda$2657.0x0000000801323868.accept
  [ 6] java.util.ArrayList.forEach
  [ 7] kafka.server.KafkaApis.$anonfun$handleFetchRequest$24
  [ 8] kafka.server.KafkaApis$$Lambda$2656.0x0000000801323630.accept
  [ 9] java.util.ArrayList.forEach
  [10] kafka.server.KafkaApis.processResponseCallback$1
  [11] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [12] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [13] kafka.server.KafkaApis$$Lambda$2626.0x0000000801313a70.apply
  [14] kafka.server.ReplicaManager.fetchMessages
  [15] kafka.server.KafkaApis.handleFetchRequest
  [16] kafka.server.KafkaApis.handle
  [17] kafka.server.KafkaRequestHandler.run
  [18] java.lang.Thread.run

--- 35384 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator
  [ 1] org.apache.kafka.common.utils.ImplicitLinkedHashCollection.listIterator
  [ 2] org.apache.kafka.common.utils.ImplicitLinkedHashCollection.iterator
  [ 3] org.apache.kafka.common.message.MetadataResponseData.write
  [ 4] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [ 5] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [ 6] org.apache.kafka.common.requests.AbstractResponse.toSend
  [ 7] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [ 8] kafka.network.RequestChannel$Request.buildResponseSend
  [ 9] kafka.network.RequestChannel.sendResponse
  [10] kafka.server.RequestHandlerHelper.sendResponseMaybeThrottle
  [11] kafka.server.KafkaApis.handleTopicMetadataRequest
  [12] kafka.server.KafkaApis.handle
  [13] kafka.server.KafkaRequestHandler.run
  [14] java.lang.Thread.run

--- 34040 bytes (0.00%), 1 sample
  [ 0] java.util.stream.ReferencePipeline$4
  [ 1] java.util.stream.ReferencePipeline.mapToInt
  [ 2] kafka.server.KafkaApis.processResponseCallback$1
  [ 3] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [ 4] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [ 5] kafka.server.KafkaApis$$Lambda$2626.0x0000000801313a70.apply
  [ 6] kafka.server.ReplicaManager.fetchMessages
  [ 7] kafka.server.KafkaApis.handleFetchRequest
  [ 8] kafka.server.KafkaApis.handle
  [ 9] kafka.server.KafkaRequestHandler.run
  [10] java.lang.Thread.run

--- 33984 bytes (0.00%), 3 samples
  [ 0] int[]
  [ 1] java.util.regex.Pattern.matcher
  [ 2] org.apache.kafka.common.metrics.JmxReporter.lambda$compilePredicate$3
  [ 3] org.apache.kafka.common.metrics.JmxReporter$$Lambda$585.0x0000000800f4a040.test
  [ 4] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [ 5] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 6] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 7] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [ 8] org.apache.kafka.common.utils.Utils.closeQuietly
  [ 9] org.apache.kafka.common.network.Selector.close
  [10] kafka.network.Processor.closeAll
  [11] kafka.network.Processor.$anonfun$run$8
  [12] kafka.network.Processor$$Lambda$2883.0x00000008013617a8.apply$mcV$sp
  [13] kafka.utils.CoreUtils$.swallow
  [14] kafka.network.Processor.run
  [15] java.lang.Thread.run

--- 33936 bytes (0.00%), 4 samples
  [ 0] java.util.HashMap$Node
  [ 1] java.util.HashMap.newNode
  [ 2] java.util.HashMap.putVal
  [ 3] java.util.HashMap.put
  [ 4] java.util.HashSet.add
  [ 5] sun.nio.ch.SelectorImpl.processReadyEvents
  [ 6] sun.nio.ch.KQueueSelectorImpl.processEvents
  [ 7] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 8] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 9] sun.nio.ch.SelectorImpl.select
  [10] org.apache.kafka.common.network.Selector.select
  [11] org.apache.kafka.common.network.Selector.poll
  [12] kafka.network.Processor.poll
  [13] kafka.network.Processor.run
  [14] java.lang.Thread.run

--- 31632 bytes (0.00%), 3 samples
  [ 0] byte[]
  [ 1] java.lang.String.getBytes
  [ 2] java.lang.AbstractStringBuilder.putStringAt
  [ 3] java.lang.AbstractStringBuilder.putStringAt
  [ 4] java.lang.AbstractStringBuilder.append
  [ 5] java.lang.StringBuilder.append
  [ 6] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 7] org.apache.kafka.common.network.Selector.write
  [ 8] org.apache.kafka.common.network.Selector.attemptWrite
  [ 9] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [10] org.apache.kafka.common.network.Selector.poll
  [11] kafka.network.Processor.poll
  [12] kafka.network.Processor.run
  [13] java.lang.Thread.run

--- 31488 bytes (0.00%), 2 samples
  [ 0] scala.collection.StrictOptimizedLinearSeqOps$$anon$1
  [ 1] scala.collection.StrictOptimizedLinearSeqOps.iterator
  [ 2] scala.collection.StrictOptimizedLinearSeqOps.iterator$
  [ 3] scala.collection.immutable.List.iterator
  [ 4] scala.collection.mutable.ListBuffer.addAll
  [ 5] scala.collection.mutable.ListBuffer.addAll
  [ 6] scala.collection.StrictOptimizedSeqOps.appended
  [ 7] scala.collection.StrictOptimizedSeqOps.appended$
  [ 8] scala.collection.immutable.List.appended
  [ 9] scala.collection.SeqOps.$colon$plus
  [10] scala.collection.SeqOps.$colon$plus$
  [11] scala.collection.AbstractSeq.$colon$plus
  [12] kafka.network.RequestChannel$Request.updateRequestMetrics
  [13] kafka.network.Processor.updateRequestMetrics
  [14] kafka.network.Processor.$anonfun$processCompletedSends$1
  [15] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [16] java.util.ArrayList.forEach
  [17] kafka.network.Processor.processCompletedSends
  [18] kafka.network.Processor.run
  [19] java.lang.Thread.run

--- 31472 bytes (0.00%), 2 samples
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] org.apache.kafka.common.metrics.JmxReporter.getMBeanName
  [ 4] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [ 5] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 6] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 7] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [ 8] org.apache.kafka.common.utils.Utils.closeQuietly
  [ 9] org.apache.kafka.common.network.Selector.close
  [10] kafka.network.Processor.closeAll
  [11] kafka.network.Processor.$anonfun$run$8
  [12] kafka.network.Processor$$Lambda$2883.0x00000008013617a8.apply$mcV$sp
  [13] kafka.utils.CoreUtils$.swallow
  [14] kafka.network.Processor.run
  [15] java.lang.Thread.run

--- 31320 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ByteVector.putUTF8
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
  [ 5] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMethodref
  [ 6] jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn
  [ 7] jdk.internal.org.objectweb.asm.MethodVisitor.visitMethodInsn
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [11] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [12] java.lang.invoke.LambdaMetafactory.altMetafactory
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [14] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [15] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [16] java.lang.invoke.BootstrapMethodInvoker.invoke
  [17] java.lang.invoke.CallSite.makeSite
  [18] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [19] java.lang.invoke.MethodHandleNatives.linkCallSite
  [20] kafka.server.KafkaRequestHandler.run
  [21] java.lang.Thread.run

--- 30344 bytes (0.00%), 1 sample
  [ 0] java.nio.DirectByteBuffer
  [ 1] java.nio.DirectByteBuffer.duplicate
  [ 2] java.nio.DirectByteBuffer.duplicate
  [ 3] kafka.log.OffsetIndex.$anonfun$lookup$1
  [ 4] kafka.log.OffsetIndex$$Lambda$2137.0x0000000801265400.apply
  [ 5] kafka.log.AbstractIndex.maybeLock
  [ 6] kafka.log.OffsetIndex.lookup
  [ 7] kafka.log.LogSegment.translateOffset
  [ 8] kafka.log.LogSegment.read
  [ 9] kafka.log.LocalLog.$anonfun$read$2
  [10] kafka.log.LocalLog.read
  [11] kafka.log.UnifiedLog.read
  [12] kafka.cluster.Partition.readRecords
  [13] kafka.cluster.Partition.readFromLocalLog$1
  [14] kafka.cluster.Partition.$anonfun$fetchRecords$2
  [15] kafka.cluster.Partition.fetchRecords
  [16] kafka.server.ReplicaManager.read$1
  [17] kafka.server.ReplicaManager.$anonfun$readFromLocalLog$7
  [18] kafka.server.ReplicaManager$$Lambda$2627.0x0000000801316000.apply
  [19] scala.collection.IterableOnceOps.foreach
  [20] scala.collection.IterableOnceOps.foreach$
  [21] scala.collection.AbstractIterable.foreach
  [22] kafka.server.ReplicaManager.readFromLocalLog
  [23] kafka.server.ReplicaManager.fetchMessages
  [24] kafka.server.KafkaApis.handleFetchRequest
  [25] kafka.server.KafkaApis.handle
  [26] kafka.server.KafkaRequestHandler.run
  [27] java.lang.Thread.run

--- 30312 bytes (0.00%), 1 sample
  [ 0] kafka.server.FetchDataInfo
  [ 1] kafka.log.LogSegment.read
  [ 2] kafka.log.LocalLog.$anonfun$read$2
  [ 3] kafka.log.LocalLog.read
  [ 4] kafka.log.UnifiedLog.read
  [ 5] kafka.cluster.Partition.readRecords
  [ 6] kafka.cluster.Partition.readFromLocalLog$1
  [ 7] kafka.cluster.Partition.$anonfun$fetchRecords$2
  [ 8] kafka.cluster.Partition.fetchRecords
  [ 9] kafka.server.ReplicaManager.read$1
  [10] kafka.server.ReplicaManager.$anonfun$readFromLocalLog$7
  [11] kafka.server.ReplicaManager$$Lambda$2627.0x0000000801316000.apply
  [12] scala.collection.IterableOnceOps.foreach
  [13] scala.collection.IterableOnceOps.foreach$
  [14] scala.collection.AbstractIterable.foreach
  [15] kafka.server.ReplicaManager.readFromLocalLog
  [16] kafka.server.ReplicaManager.fetchMessages
  [17] kafka.server.KafkaApis.handleFetchRequest
  [18] kafka.server.KafkaApis.handle
  [19] kafka.server.KafkaRequestHandler.run
  [20] java.lang.Thread.run

--- 29480 bytes (0.00%), 2 samples
  [ 0] byte[]
  [ 1] org.apache.kafka.common.metrics.Sensor.record
  [ 2] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 3] org.apache.kafka.common.network.Selector.write
  [ 4] org.apache.kafka.common.network.Selector.attemptWrite
  [ 5] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 6] org.apache.kafka.common.network.Selector.poll
  [ 7] kafka.network.Processor.poll
  [ 8] kafka.network.Processor.run
  [ 9] java.lang.Thread.run

--- 29384 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ClassWriter.toByteArray
  [ 2] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] kafka.network.Processor.run
  [14] java.lang.Thread.run

--- 29368 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ClassWriter.toByteArray
  [ 2] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] kafka.network.Processor.$anonfun$close$2
  [14] kafka.network.Processor.$anonfun$close$2$adapted
  [15] kafka.network.Processor$$Lambda$2891.0x0000000801362f28.apply
  [16] scala.Option.foreach
  [17] kafka.network.Processor.close
  [18] kafka.network.Processor.$anonfun$closeAll$1
  [19] kafka.network.Processor$$Lambda$2887.0x0000000801362410.accept
  [20] java.util.ArrayList.forEach
  [21] kafka.network.Processor.closeAll
  [22] kafka.network.Processor.$anonfun$run$8
  [23] kafka.network.Processor$$Lambda$2883.0x00000008013617a8.apply$mcV$sp
  [24] kafka.utils.CoreUtils$.swallow
  [25] kafka.network.Processor.run
  [26] java.lang.Thread.run

--- 28624 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordCompletedReceive
  [ 4] org.apache.kafka.common.network.Selector.addToCompletedReceives
  [ 5] org.apache.kafka.common.network.Selector.attemptRead
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 28576 bytes (0.00%), 1 sample
  [ 0] javax.management.MBeanInfo
  [ 1] org.apache.kafka.common.metrics.JmxReporter$KafkaMbean.getMBeanInfo
  [ 2] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getNewMBeanClassName
  [ 3] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean
  [ 4] com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean
  [ 5] org.apache.kafka.common.metrics.JmxReporter.reregister
  [ 6] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [ 7] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 8] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 9] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [10] org.apache.kafka.common.utils.Utils.closeQuietly
  [11] org.apache.kafka.common.network.Selector.close
  [12] kafka.network.Processor.closeAll
  [13] kafka.network.Processor.$anonfun$run$8
  [14] kafka.network.Processor$$Lambda$2883.0x00000008013617a8.apply$mcV$sp
  [15] kafka.utils.CoreUtils$.swallow
  [16] kafka.network.Processor.run
  [17] java.lang.Thread.run

--- 28560 bytes (0.00%), 1 sample
  [ 0] java.util.ArrayList$Itr
  [ 1] java.util.ArrayList.iterator
  [ 2] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 3] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 4] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [ 5] org.apache.kafka.common.utils.Utils.closeQuietly
  [ 6] org.apache.kafka.common.network.Selector.close
  [ 7] kafka.network.Processor.closeAll
  [ 8] kafka.network.Processor.$anonfun$run$8
  [ 9] kafka.network.Processor$$Lambda$2883.0x00000008013617a8.apply$mcV$sp
  [10] kafka.utils.CoreUtils$.swallow
  [11] kafka.network.Processor.run
  [12] java.lang.Thread.run

--- 28552 bytes (0.00%), 1 sample
  [ 0] java.lang.invoke.ResolvedMethodName
  [ 1] java.lang.invoke.MethodHandleNatives.resolve
  [ 2] java.lang.invoke.MemberName$Factory.resolve
  [ 3] java.lang.invoke.MemberName$Factory.resolveOrFail
  [ 4] java.lang.invoke.MethodHandles$Lookup.resolveOrFail
  [ 5] java.lang.invoke.MethodHandles$Lookup.findConstructor
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 7] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 9] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [10] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [11] java.lang.invoke.BootstrapMethodInvoker.invoke
  [12] java.lang.invoke.CallSite.makeSite
  [13] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [14] java.lang.invoke.MethodHandleNatives.linkCallSite
  [15] kafka.network.Processor.closeAll
  [16] kafka.network.Processor.$anonfun$run$8
  [17] kafka.network.Processor$$Lambda$2883.0x00000008013617a8.apply$mcV$sp
  [18] kafka.utils.CoreUtils$.swallow
  [19] kafka.network.Processor.run
  [20] java.lang.Thread.run

--- 28552 bytes (0.00%), 1 sample
  [ 0] java.util.concurrent.CopyOnWriteArrayList$COWIterator
  [ 1] java.util.concurrent.CopyOnWriteArrayList.iterator
  [ 2] javax.management.NotificationBroadcasterSupport.sendNotification
  [ 3] javax.management.MBeanServerDelegate.sendNotification
  [ 4] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.sendNotification
  [ 5] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterFromRepository
  [ 6] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean
  [ 7] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean
  [ 8] com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean
  [ 9] org.apache.kafka.common.metrics.JmxReporter.unregister
  [10] org.apache.kafka.common.metrics.JmxReporter.reregister
  [11] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [12] org.apache.kafka.common.metrics.Metrics.removeMetric
  [13] org.apache.kafka.common.metrics.Metrics.removeSensor
  [14] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [15] org.apache.kafka.common.utils.Utils.closeQuietly
  [16] org.apache.kafka.common.network.Selector.close
  [17] kafka.network.Processor.closeAll
  [18] kafka.network.Processor.$anonfun$run$8
  [19] kafka.network.Processor$$Lambda$2883.0x00000008013617a8.apply$mcV$sp
  [20] kafka.utils.CoreUtils$.swallow
  [21] kafka.network.Processor.run
  [22] java.lang.Thread.run

--- 28312 bytes (0.00%), 1 sample
  [ 0] java.lang.String[]
  [ 1] jdk.internal.org.objectweb.asm.ClassReader.<init>
  [ 2] jdk.internal.org.objectweb.asm.ClassReader.<init>
  [ 3] jdk.internal.org.objectweb.asm.ClassReader.<init>
  [ 4] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 5] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 6] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] kafka.server.KafkaRequestHandler.run
  [19] java.lang.Thread.run

--- 28184 bytes (0.00%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] java.util.ArrayList.add
  [ 2] org.apache.kafka.common.protocol.SendBuilder.addBuffer
  [ 3] org.apache.kafka.common.protocol.SendBuilder.flushPendingBuffer
  [ 4] org.apache.kafka.common.protocol.SendBuilder.flushPendingSend
  [ 5] org.apache.kafka.common.protocol.SendBuilder.writeRecords
  [ 6] org.apache.kafka.common.message.FetchResponseData$PartitionData.write
  [ 7] org.apache.kafka.common.message.FetchResponseData$FetchableTopicResponse.write
  [ 8] org.apache.kafka.common.message.FetchResponseData.write
  [ 9] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [10] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [11] org.apache.kafka.common.requests.AbstractResponse.toSend
  [12] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [13] kafka.network.RequestChannel$Request.buildResponseSend
  [14] kafka.network.RequestChannel.sendResponse
  [15] kafka.server.KafkaApis.processResponseCallback$1
  [16] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [17] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [18] kafka.server.KafkaApis$$Lambda$2626.0x0000000801313a70.apply
  [19] kafka.server.ReplicaManager.fetchMessages
  [20] kafka.server.KafkaApis.handleFetchRequest
  [21] kafka.server.KafkaApis.handle
  [22] kafka.server.KafkaRequestHandler.run
  [23] java.lang.Thread.run

--- 28152 bytes (0.00%), 1 sample
  [ 0] kafka.server.ProduceMetadata
  [ 1] kafka.server.ReplicaManager.appendRecords
  [ 2] kafka.coordinator.group.GroupMetadataManager.storeGroup
  [ 3] kafka.coordinator.group.GroupCoordinator.$anonfun$doSyncGroup$1
  [ 4] kafka.coordinator.group.GroupCoordinator$$Lambda$2537.0x00000008012f7c58.apply$mcV$sp
  [ 5] scala.runtime.java8.JFunction0$mcV$sp.apply
  [ 6] kafka.coordinator.group.GroupMetadata.inLock
  [ 7] kafka.coordinator.group.GroupCoordinator.handleSyncGroup
  [ 8] kafka.coordinator.group.GroupCoordinatorAdapter.syncGroup
  [ 9] kafka.server.KafkaApis.handleSyncGroupRequest
  [10] kafka.server.KafkaApis.handle
  [11] kafka.server.KafkaRequestHandler.run
  [12] java.lang.Thread.run

--- 28056 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ByteVector.putUTF8
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.addConstantUtf8
  [ 3] jdk.internal.org.objectweb.asm.SymbolTable.addConstantNameAndType
  [ 4] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMemberReference
  [ 5] jdk.internal.org.objectweb.asm.SymbolTable.addConstantMethodref
  [ 6] jdk.internal.org.objectweb.asm.MethodWriter.visitMethodInsn
  [ 7] jdk.internal.org.objectweb.asm.MethodVisitor.visitMethodInsn
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [10] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [11] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [12] java.lang.invoke.LambdaMetafactory.altMetafactory
  [13] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [14] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [15] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [16] java.lang.invoke.BootstrapMethodInvoker.invoke
  [17] java.lang.invoke.CallSite.makeSite
  [18] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [19] java.lang.invoke.MethodHandleNatives.linkCallSite
  [20] zio.stream.internal.ChannelExecutor$Subexecutor$PullFromChild.close
  [21] zio.stream.internal.ChannelExecutor.close
  [22] zio.stream.internal.ChannelExecutor.restorePipe
  [23] zio.stream.internal.ChannelExecutor.$anonfun$run$13
  [24] zio.stream.internal.ChannelExecutor$$Lambda$1494.0x000000080118a550.apply
  [25] zio.stream.internal.ChannelExecutor.$anonfun$runFinalizers$1
  [26] zio.stream.internal.ChannelExecutor$$Lambda$2763.0x00000008013469c0.apply
  [27] zio.ZIO$.$anonfun$foreach$3
  [28] zio.ZIO$$$Lambda$2261.0x0000000801290ba8.apply
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.runLoop
  [65] zio.internal.FiberRuntime.runLoop
  [66] zio.internal.FiberRuntime.runLoop
  [67] zio.internal.FiberRuntime.runLoop
  [68] zio.internal.FiberRuntime.runLoop
  [69] zio.internal.FiberRuntime.runLoop
  [70] zio.internal.FiberRuntime.runLoop
  [71] zio.internal.FiberRuntime.runLoop
  [72] zio.internal.FiberRuntime.runLoop
  [73] zio.internal.FiberRuntime.runLoop
  [74] zio.internal.FiberRuntime.runLoop
  [75] zio.internal.FiberRuntime.runLoop
  [76] zio.internal.FiberRuntime.runLoop
  [77] zio.internal.FiberRuntime.runLoop
  [78] zio.internal.FiberRuntime.runLoop
  [79] zio.internal.FiberRuntime.runLoop
  [80] zio.internal.FiberRuntime.evaluateEffect
  [81] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [82] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [83] zio.internal.FiberRuntime.run
  [84] zio.internal.ZScheduler$$anon$4.run

--- 27096 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ByteVector.<init>
  [ 2] jdk.internal.org.objectweb.asm.SymbolTable.<init>
  [ 3] jdk.internal.org.objectweb.asm.ClassWriter.<init>
  [ 4] jdk.internal.org.objectweb.asm.ClassWriter.<init>
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] zio.stream.ZChannel$ScopedPartiallyApplied$.$anonfun$apply$4
  [15] zio.stream.ZChannel$ScopedPartiallyApplied$$$Lambda$1599.0x00000008011a83f0.apply
  [16] zio.stream.internal.ChannelExecutor.$anonfun$runBracketOut$7
  [17] zio.stream.internal.ChannelExecutor$$Lambda$1710.0x00000008011c9ac0.apply
  [18] zio.stream.internal.ChannelExecutor.$anonfun$runFinalizers$1
  [19] zio.stream.internal.ChannelExecutor$$Lambda$2763.0x00000008013469c0.apply
  [20] zio.ZIO$.$anonfun$foreach$3
  [21] zio.ZIO$$$Lambda$2261.0x0000000801290ba8.apply
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.runLoop
  [65] zio.internal.FiberRuntime.runLoop
  [66] zio.internal.FiberRuntime.runLoop
  [67] zio.internal.FiberRuntime.runLoop
  [68] zio.internal.FiberRuntime.runLoop
  [69] zio.internal.FiberRuntime.runLoop
  [70] zio.internal.FiberRuntime.runLoop
  [71] zio.internal.FiberRuntime.runLoop
  [72] zio.internal.FiberRuntime.runLoop
  [73] zio.internal.FiberRuntime.runLoop
  [74] zio.internal.FiberRuntime.runLoop
  [75] zio.internal.FiberRuntime.runLoop
  [76] zio.internal.FiberRuntime.runLoop
  [77] zio.internal.FiberRuntime.runLoop
  [78] zio.internal.FiberRuntime.runLoop
  [79] zio.internal.FiberRuntime.runLoop
  [80] zio.internal.FiberRuntime.runLoop
  [81] zio.internal.FiberRuntime.runLoop
  [82] zio.internal.FiberRuntime.runLoop
  [83] zio.internal.FiberRuntime.runLoop
  [84] zio.internal.FiberRuntime.runLoop
  [85] zio.internal.FiberRuntime.runLoop
  [86] zio.internal.FiberRuntime.runLoop
  [87] zio.internal.FiberRuntime.runLoop
  [88] zio.internal.FiberRuntime.runLoop
  [89] zio.internal.FiberRuntime.runLoop
  [90] zio.internal.FiberRuntime.runLoop
  [91] zio.internal.FiberRuntime.evaluateEffect
  [92] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [93] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [94] zio.internal.FiberRuntime.run
  [95] zio.internal.ZScheduler$$anon$4.run

--- 27048 bytes (0.00%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] java.lang.invoke.MemberName.hashCode
  [ 2] java.util.concurrent.ConcurrentHashMap.get
  [ 3] java.lang.invoke.MethodHandles$Lookup.linkMethodHandleConstant
  [ 4] java.lang.invoke.MethodHandleNatives.linkMethodHandleConstant
  [ 5] zio.stream.internal.ChannelExecutor$Subexecutor$PullFromChild.close
  [ 6] zio.stream.internal.ChannelExecutor.close
  [ 7] zio.stream.internal.ChannelExecutor.restorePipe
  [ 8] zio.stream.internal.ChannelExecutor.$anonfun$run$13
  [ 9] zio.stream.internal.ChannelExecutor$$Lambda$1494.0x000000080118a550.apply
  [10] zio.stream.internal.ChannelExecutor.$anonfun$runFinalizers$1
  [11] zio.stream.internal.ChannelExecutor$$Lambda$2763.0x00000008013469c0.apply
  [12] zio.ZIO$.$anonfun$foreach$3
  [13] zio.ZIO$$$Lambda$2261.0x0000000801290ba8.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.runLoop
  [64] zio.internal.FiberRuntime.runLoop
  [65] zio.internal.FiberRuntime.evaluateEffect
  [66] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [67] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [68] zio.internal.FiberRuntime.run
  [69] zio.internal.ZScheduler$$anon$4.run

--- 25768 bytes (0.00%), 1 sample
  [ 0] scala.collection.mutable.CheckedIndexedSeqView$CheckedIterator
  [ 1] scala.collection.mutable.ArrayBufferView.iterator
  [ 2] scala.collection.IndexedSeqOps.iterator
  [ 3] scala.collection.IndexedSeqOps.iterator$
  [ 4] scala.collection.mutable.ArrayBuffer.iterator
  [ 5] scala.collection.IterableOnceOps.foreach
  [ 6] scala.collection.IterableOnceOps.foreach$
  [ 7] scala.collection.AbstractIterable.foreach
  [ 8] kafka.server.ReplicaManager.readFromLocalLog
  [ 9] kafka.server.ReplicaManager.fetchMessages
  [10] kafka.server.KafkaApis.handleFetchRequest
  [11] kafka.server.KafkaApis.handle
  [12] kafka.server.KafkaRequestHandler.run
  [13] java.lang.Thread.run

--- 25720 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.ClassWriter
  [ 1] java.lang.invoke.InnerClassLambdaMetafactory.<init>
  [ 2] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 4] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 5] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 6] java.lang.invoke.BootstrapMethodInvoker.invoke
  [ 7] java.lang.invoke.CallSite.makeSite
  [ 8] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [ 9] java.lang.invoke.MethodHandleNatives.linkCallSite
  [10] kafka.server.KafkaRequestHandler.run
  [11] java.lang.Thread.run

--- 25648 bytes (0.00%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] scala.collection.mutable.ArrayBuffer.<init>
  [ 2] scala.collection.mutable.ArrayBuffer$$anon$1.<init>
  [ 3] scala.collection.mutable.ArrayBuffer$.newBuilder
  [ 4] scala.collection.StrictOptimizedIterableOps.collect
  [ 5] scala.collection.StrictOptimizedIterableOps.collect$
  [ 6] scala.collection.mutable.ArrayBuffer.collect
  [ 7] kafka.server.AuthHelper.filterByAuthorized
  [ 8] kafka.server.KafkaApis.handleFetchRequest
  [ 9] kafka.server.KafkaApis.handle
  [10] kafka.server.KafkaRequestHandler.run
  [11] java.lang.Thread.run

--- 25592 bytes (0.00%), 1 sample
  [ 0] scala.math.Ordered$$anon$1
  [ 1] scala.math.Ordered$.orderingToOrdered
  [ 2] kafka.server.EvictableKey.compareTo
  [ 3] kafka.server.EvictableKey.compareTo
  [ 4] java.util.TreeMap.getEntry
  [ 5] java.util.TreeMap.remove
  [ 6] kafka.server.FetchSessionCache.touch
  [ 7] kafka.server.FetchManager.newContext
  [ 8] kafka.server.KafkaApis.handleFetchRequest
  [ 9] kafka.server.KafkaApis.handle
  [10] kafka.server.KafkaRequestHandler.run
  [11] java.lang.Thread.run

--- 24904 bytes (0.00%), 1 sample
  [ 0] char[]
  [ 1] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 2] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 3] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 7] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 9] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [10] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [11] java.lang.invoke.BootstrapMethodInvoker.invoke
  [12] java.lang.invoke.CallSite.makeSite
  [13] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [14] java.lang.invoke.MethodHandleNatives.linkCallSite
  [15] kafka.server.KafkaApis.handleControlledShutdownRequest
  [16] kafka.server.KafkaApis.handle
  [17] kafka.server.KafkaRequestHandler.run
  [18] java.lang.Thread.run

--- 24856 bytes (0.00%), 1 sample
  [ 0] char[]
  [ 1] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 2] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 3] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 6] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 7] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 8] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 9] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [10] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [11] java.lang.invoke.BootstrapMethodInvoker.invoke
  [12] java.lang.invoke.CallSite.makeSite
  [13] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [14] java.lang.invoke.MethodHandleNatives.linkCallSite
  [15] kafka.server.KafkaRequestHandler.run
  [16] java.lang.Thread.run

--- 24768 bytes (0.00%), 1 sample
  [ 0] jdk.internal.org.objectweb.asm.MethodWriter
  [ 1] jdk.internal.org.objectweb.asm.ClassWriter.visitMethod
  [ 2] java.lang.invoke.InnerClassLambdaMetafactory.generateSerializationFriendlyMethods
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 5] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 6] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 7] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 8] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 9] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [10] java.lang.invoke.BootstrapMethodInvoker.invoke
  [11] java.lang.invoke.CallSite.makeSite
  [12] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [13] java.lang.invoke.MethodHandleNatives.linkCallSite
  [14] kafka.server.KafkaApis.handleControlledShutdownRequest
  [15] kafka.server.KafkaApis.handle
  [16] kafka.server.KafkaRequestHandler.run
  [17] java.lang.Thread.run

--- 24520 bytes (0.00%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.common.message.OffsetFetchResponseData$OffsetFetchResponseTopics.<init>
  [ 2] org.apache.kafka.common.requests.OffsetFetchResponse.<init>
  [ 3] kafka.server.KafkaApis.createResponse$4
  [ 4] kafka.server.KafkaApis.$anonfun$handleOffsetFetchRequestV8AndAbove$3
  [ 5] kafka.server.KafkaApis.$anonfun$handleOffsetFetchRequestV8AndAbove$3$adapted
  [ 6] kafka.server.KafkaApis$$Lambda$2584.0x00000008013077e0.apply
  [ 7] kafka.server.RequestHandlerHelper.sendResponseMaybeThrottle
  [ 8] kafka.server.KafkaApis.handleOffsetFetchRequestV8AndAbove
  [ 9] kafka.server.KafkaApis.handleOffsetFetchRequest
  [10] kafka.server.KafkaApis.handle
  [11] kafka.server.KafkaRequestHandler.run
  [12] java.lang.Thread.run

--- 23696 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.requests.FetchRequest$PartitionData
  [ 1] kafka.server.CachedPartition.reqData
  [ 2] kafka.server.IncrementalFetchContext.$anonfun$foreachPartition$3
  [ 3] kafka.server.IncrementalFetchContext$$Lambda$2670.0x00000008013291f0.accept
  [ 4] java.lang.Iterable.forEach
  [ 5] kafka.server.IncrementalFetchContext.foreachPartition
  [ 6] kafka.server.KafkaApis.handleFetchRequest
  [ 7] kafka.server.KafkaApis.handle
  [ 8] kafka.server.KafkaRequestHandler.run
  [ 9] java.lang.Thread.run

--- 23672 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.message.FetchResponseData$LeaderIdAndEpoch
  [ 1] org.apache.kafka.common.message.FetchResponseData$PartitionData.write
  [ 2] org.apache.kafka.common.message.FetchResponseData$FetchableTopicResponse.write
  [ 3] org.apache.kafka.common.message.FetchResponseData.write
  [ 4] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [ 5] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [ 6] org.apache.kafka.common.requests.AbstractResponse.toSend
  [ 7] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [ 8] kafka.network.RequestChannel$Request.buildResponseSend
  [ 9] kafka.network.RequestChannel.sendResponse
  [10] kafka.server.KafkaApis.processResponseCallback$1
  [11] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [12] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [13] kafka.server.KafkaApis$$Lambda$2626.0x0000000801313a70.apply
  [14] kafka.server.ReplicaManager.fetchMessages
  [15] kafka.server.KafkaApis.handleFetchRequest
  [16] kafka.server.KafkaApis.handle
  [17] kafka.server.KafkaRequestHandler.run
  [18] java.lang.Thread.run

--- 23216 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] jdk.internal.org.objectweb.asm.Type.getDescriptor
  [ 4] java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance
  [ 5] java.lang.invoke.MethodHandles$Lookup.makeHiddenClassDefiner
  [ 6] java.lang.invoke.MethodHandles$Lookup.defineHiddenClass
  [ 7] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 8] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 9] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [10] java.lang.invoke.LambdaMetafactory.altMetafactory
  [11] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [12] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [13] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [14] java.lang.invoke.BootstrapMethodInvoker.invoke
  [15] java.lang.invoke.CallSite.makeSite
  [16] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [17] java.lang.invoke.MethodHandleNatives.linkCallSite
  [18] kafka.server.KafkaRequestHandler.run
  [19] java.lang.Thread.run

--- 23192 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.network.ByteBufferSend
  [ 1] org.apache.kafka.common.protocol.SendBuilder.flushPendingSend
  [ 2] org.apache.kafka.common.protocol.SendBuilder.writeRecords
  [ 3] org.apache.kafka.common.message.FetchResponseData$PartitionData.write
  [ 4] org.apache.kafka.common.message.FetchResponseData$FetchableTopicResponse.write
  [ 5] org.apache.kafka.common.message.FetchResponseData.write
  [ 6] org.apache.kafka.common.protocol.SendBuilder.buildSend
  [ 7] org.apache.kafka.common.protocol.SendBuilder.buildResponseSend
  [ 8] org.apache.kafka.common.requests.AbstractResponse.toSend
  [ 9] org.apache.kafka.common.requests.RequestContext.buildResponseSend
  [10] kafka.network.RequestChannel$Request.buildResponseSend
  [11] kafka.network.RequestChannel.sendResponse
  [12] kafka.server.KafkaApis.processResponseCallback$1
  [13] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33
  [14] kafka.server.KafkaApis.$anonfun$handleFetchRequest$33$adapted
  [15] kafka.server.KafkaApis$$Lambda$2626.0x0000000801313a70.apply
  [16] kafka.server.ReplicaManager.fetchMessages
  [17] kafka.server.KafkaApis.handleFetchRequest
  [18] kafka.server.KafkaApis.handle
  [19] kafka.server.KafkaRequestHandler.run
  [20] java.lang.Thread.run

--- 23176 bytes (0.00%), 1 sample
  [ 0] scala.collection.Iterator$$anon$9
  [ 1] scala.collection.Iterator.map
  [ 2] scala.collection.Iterator.map$
  [ 3] scala.collection.AbstractIterator.map
  [ 4] kafka.server.AuthHelper.filterByAuthorized
  [ 5] kafka.server.KafkaApis.handleFetchRequest
  [ 6] kafka.server.KafkaApis.handle
  [ 7] kafka.server.KafkaRequestHandler.run
  [ 8] java.lang.Thread.run

--- 21448 bytes (0.00%), 3 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.DelayQueue.poll
  [ 3] kafka.utils.timer.SystemTimer.advanceClock
  [ 4] kafka.server.DelayedOperationPurgatory.advanceClock
  [ 5] kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper.doWork
  [ 6] kafka.utils.ShutdownableThread.run

--- 17800 bytes (0.00%), 2 samples
  [ 0] java.util.concurrent.ConcurrentSkipListMap$Node
  [ 1] java.util.concurrent.ConcurrentSkipListMap.doPut
  [ 2] java.util.concurrent.ConcurrentSkipListMap.put
  [ 3] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 4] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 5] com.yammer.metrics.core.Histogram.update
  [ 6] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1
  [ 7] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1$adapted
  [ 8] kafka.network.RequestChannel$Request$$Lambda$1234.0x000000080111c208.apply
  [ 9] scala.collection.immutable.List.foreach
  [10] kafka.network.RequestChannel$Request.updateRequestMetrics
  [11] kafka.network.Processor.updateRequestMetrics
  [12] kafka.network.Processor.$anonfun$processCompletedSends$1
  [13] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [14] java.util.ArrayList.forEach
  [15] kafka.network.Processor.processCompletedSends
  [16] kafka.network.Processor.run
  [17] java.lang.Thread.run

--- 17488 bytes (0.00%), 6 samples
  [ 0] java.lang.Object[]
  [ 1] java.util.Arrays.copyOf
  [ 2] java.util.Arrays.copyOf
  [ 3] java.util.ArrayList.grow
  [ 4] java.util.ArrayList.grow
  [ 5] java.util.ArrayList.add
  [ 6] java.util.ArrayList.add
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] zio.kafka.bench.ConsumersComparisonBenchmark.$anonfun$kafkaClients$2
  [15] zio.kafka.bench.ConsumersComparisonBenchmark$$Lambda$2443.0x00000008012d5998.apply$mcV$sp
  [16] scala.runtime.java8.JFunction0$mcV$sp.apply
  [17] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [18] zio.ZIOCompanionVersionSpecific$$Lambda$350.0x0000000800dd6810.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 17480 bytes (0.00%), 2 samples
  [ 0] byte[]
  [ 1] javax.management.ObjectName.getCanonicalKeyPropertyListString
  [ 2] com.sun.jmx.mbeanserver.Repository.retrieveNamedObject
  [ 3] com.sun.jmx.mbeanserver.Repository.retrieve
  [ 4] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean
  [ 5] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean
  [ 6] com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean
  [ 7] com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean
  [ 8] org.apache.kafka.common.metrics.JmxReporter.unregister
  [ 9] org.apache.kafka.common.metrics.JmxReporter.reregister
  [10] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [11] org.apache.kafka.common.metrics.Metrics.removeMetric
  [12] org.apache.kafka.common.metrics.Metrics.removeSensor
  [13] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [14] org.apache.kafka.common.utils.Utils.closeQuietly
  [15] org.apache.kafka.common.network.Selector.close
  [16] kafka.network.Processor.closeAll
  [17] kafka.network.Processor.$anonfun$run$8
  [18] kafka.network.Processor$$Lambda$2883.0x00000008013617a8.apply$mcV$sp
  [19] kafka.utils.CoreUtils$.swallow
  [20] kafka.network.Processor.run
  [21] java.lang.Thread.run

--- 17200 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.util.zip.InflaterInputStream.<init>
  [ 2] java.util.zip.ZipFile$ZipFileInflaterInputStream.<init>
  [ 3] java.util.zip.ZipFile$ZipFileInflaterInputStream.<init>
  [ 4] java.util.zip.ZipFile.getInputStream
  [ 5] java.util.jar.JarFile.getInputStream
  [ 6] jdk.internal.loader.URLClassPath$JarLoader$2.getInputStream
  [ 7] jdk.internal.loader.Resource.cachedInputStream
  [ 8] jdk.internal.loader.Resource.getByteBuffer
  [ 9] jdk.internal.loader.BuiltinClassLoader.defineClass
  [10] jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull
  [11] jdk.internal.loader.BuiltinClassLoader.loadClassOrNull
  [12] jdk.internal.loader.BuiltinClassLoader.loadClass
  [13] jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass
  [14] java.lang.ClassLoader.loadClass
  [15] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [16] zio.kafka.consumer.internal.Runloop$$Lambda$1549.0x0000000801197778.apply
  [17] zio.ZIO.$anonfun$onError$1
  [18] zio.ZIO$$Lambda$1551.0x000000080119c000.apply
  [19] zio.ZIO.$anonfun$onExit$3
  [20] zio.ZIO$$Lambda$166.0x0000000800d817b8.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] zio.internal.ZScheduler$$anon$4.run

--- 17168 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.util.zip.InflaterInputStream.<init>
  [ 2] java.util.zip.ZipFile$ZipFileInflaterInputStream.<init>
  [ 3] java.util.zip.ZipFile$ZipFileInflaterInputStream.<init>
  [ 4] java.util.zip.ZipFile.getInputStream
  [ 5] java.util.jar.JarFile.getInputStream
  [ 6] jdk.internal.loader.URLClassPath$JarLoader$2.getInputStream
  [ 7] jdk.internal.loader.Resource.cachedInputStream
  [ 8] jdk.internal.loader.Resource.getByteBuffer
  [ 9] jdk.internal.loader.BuiltinClassLoader.defineClass
  [10] jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull
  [11] jdk.internal.loader.BuiltinClassLoader.loadClassOrNull
  [12] jdk.internal.loader.BuiltinClassLoader.loadClass
  [13] jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass
  [14] java.lang.ClassLoader.loadClass
  [15] zio.kafka.consumer.internal.Runloop.$anonfun$run$20
  [16] zio.kafka.consumer.internal.Runloop$$Lambda$1549.0x0000000801197778.apply
  [17] zio.ZIO.$anonfun$onError$1
  [18] zio.ZIO$$Lambda$1551.0x000000080119c000.apply
  [19] zio.ZIO.$anonfun$onExit$3
  [20] zio.ZIO$$Lambda$166.0x0000000800d817b8.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] zio.internal.ZScheduler$$anon$4.run

--- 17144 bytes (0.00%), 2 samples
  [ 0] kafka.network.Processor$$Lambda$1139+0x00000008010e6018
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] kafka.network.Processor.processCompletedSends
  [ 6] kafka.network.Processor.run
  [ 7] java.lang.Thread.run

--- 16808 bytes (0.00%), 2 samples
  [ 0] byte[]
  [ 1] java.lang.String.getBytes
  [ 2] java.lang.AbstractStringBuilder.putStringAt
  [ 3] java.lang.AbstractStringBuilder.putStringAt
  [ 4] java.lang.AbstractStringBuilder.append
  [ 5] java.lang.StringBuilder.append
  [ 6] org.apache.kafka.common.network.Selector$SelectorMetrics.recordBytesSent
  [ 7] org.apache.kafka.common.network.Selector.write
  [ 8] org.apache.kafka.common.network.Selector.attemptWrite
  [ 9] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [10] org.apache.kafka.common.network.Selector.poll
  [11] kafka.network.Processor.poll
  [12] kafka.network.Processor.run
  [13] java.lang.Thread.run

--- 15768 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.message.ListOffsetsRequestData$ListOffsetsPartition
  [ 1] org.apache.kafka.common.message.ListOffsetsRequestData$ListOffsetsTopic.read
  [ 2] org.apache.kafka.common.message.ListOffsetsRequestData$ListOffsetsTopic.<init>
  [ 3] org.apache.kafka.common.message.ListOffsetsRequestData.read
  [ 4] org.apache.kafka.common.message.ListOffsetsRequestData.<init>
  [ 5] org.apache.kafka.common.requests.ListOffsetsRequest.parse
  [ 6] org.apache.kafka.common.requests.AbstractRequest.doParseRequest
  [ 7] org.apache.kafka.common.requests.AbstractRequest.parseRequest
  [ 8] org.apache.kafka.common.requests.RequestContext.parseRequest
  [ 9] kafka.network.RequestChannel$Request.<init>
  [10] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [11] kafka.network.Processor$$Lambda$1138.0x00000008010e5b90.accept
  [12] java.util.LinkedHashMap$LinkedValues.forEach
  [13] kafka.network.Processor.processCompletedReceives
  [14] kafka.network.Processor.run
  [15] java.lang.Thread.run

--- 15760 bytes (0.00%), 1 sample
  [ 0] double[]
  [ 1] com.yammer.metrics.core.Histogram.updateVariance
  [ 2] com.yammer.metrics.core.Histogram.update
  [ 3] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1
  [ 4] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1$adapted
  [ 5] kafka.network.RequestChannel$Request$$Lambda$1234.0x000000080111c208.apply
  [ 6] scala.collection.immutable.List.foreach
  [ 7] kafka.network.RequestChannel$Request.updateRequestMetrics
  [ 8] kafka.network.Processor.updateRequestMetrics
  [ 9] kafka.network.Processor.$anonfun$processCompletedSends$1
  [10] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [11] java.util.ArrayList.forEach
  [12] kafka.network.Processor.processCompletedSends
  [13] kafka.network.Processor.run
  [14] java.lang.Thread.run

--- 15760 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.message.FetchRequestData$FetchTopic
  [ 1] org.apache.kafka.common.message.FetchRequestData.read
  [ 2] org.apache.kafka.common.message.FetchRequestData.<init>
  [ 3] org.apache.kafka.common.requests.FetchRequest.parse
  [ 4] org.apache.kafka.common.requests.AbstractRequest.doParseRequest
  [ 5] org.apache.kafka.common.requests.AbstractRequest.parseRequest
  [ 6] org.apache.kafka.common.requests.RequestContext.parseRequest
  [ 7] kafka.network.RequestChannel$Request.<init>
  [ 8] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [ 9] kafka.network.Processor$$Lambda$1138.0x00000008010e5b90.accept
  [10] java.util.LinkedHashMap$LinkedValues.forEach
  [11] kafka.network.Processor.processCompletedReceives
  [12] kafka.network.Processor.run
  [13] java.lang.Thread.run

--- 15752 bytes (0.00%), 1 sample
  [ 0] kafka.network.Processor$$Lambda$1220+0x0000000801113de8
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] kafka.network.Processor.sendResponse
  [ 6] kafka.network.Processor.processNewResponses
  [ 7] kafka.network.Processor.run
  [ 8] java.lang.Thread.run

--- 15752 bytes (0.00%), 1 sample
  [ 0] java.lang.Double
  [ 1] java.util.concurrent.atomic.AtomicLong.incrementAndGet
  [ 2] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 3] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 4] com.yammer.metrics.core.Histogram.update
  [ 5] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$3
  [ 6] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$3$adapted
  [ 7] kafka.network.RequestChannel$Request$$Lambda$1249.0x000000080111b478.apply
  [ 8] scala.Option.foreach
  [ 9] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1
  [10] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1$adapted
  [11] kafka.network.RequestChannel$Request$$Lambda$1234.0x000000080111c208.apply
  [12] scala.collection.immutable.List.foreach
  [13] kafka.network.RequestChannel$Request.updateRequestMetrics
  [14] kafka.network.Processor.updateRequestMetrics
  [15] kafka.network.Processor.$anonfun$processCompletedSends$1
  [16] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [17] java.util.ArrayList.forEach
  [18] kafka.network.Processor.processCompletedSends
  [19] kafka.network.Processor.run
  [20] java.lang.Thread.run

--- 15752 bytes (0.00%), 1 sample
  [ 0] kafka.network.RequestChannel$Request$$Lambda$1251+0x0000000801119800
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.LambdaForm$DMH.0x0000000800d9c800.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] kafka.network.RequestChannel$Request.updateRequestMetrics
  [ 6] kafka.network.Processor.updateRequestMetrics
  [ 7] kafka.network.Processor.$anonfun$processCompletedSends$1
  [ 8] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [ 9] java.util.ArrayList.forEach
  [10] kafka.network.Processor.processCompletedSends
  [11] kafka.network.Processor.run
  [12] java.lang.Thread.run

--- 15752 bytes (0.00%), 1 sample
  [ 0] java.lang.String
  [ 1] java.util.Arrays.copyOfRange
  [ 2] java.lang.StringLatin1.newString
  [ 3] java.lang.StringBuilder.toString
  [ 4] org.apache.kafka.common.network.Selector$SelectorMetrics.recordCompletedSend
  [ 5] org.apache.kafka.common.network.Selector.write
  [ 6] org.apache.kafka.common.network.Selector.attemptWrite
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] kafka.network.Processor.poll
  [10] kafka.network.Processor.run
  [11] java.lang.Thread.run

--- 15744 bytes (0.00%), 1 sample
  [ 0] scala.Some
  [ 1] scala.reflect.ClassTag.unapply
  [ 2] scala.reflect.ClassTag.unapply$
  [ 3] scala.reflect.ClassTag$GenericClassTag.unapply
  [ 4] kafka.network.RequestChannel$Request.body
  [ 5] kafka.network.RequestChannel$Request.updateRequestMetrics
  [ 6] kafka.network.Processor.updateRequestMetrics
  [ 7] kafka.network.Processor.$anonfun$processCompletedSends$1
  [ 8] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [ 9] java.util.ArrayList.forEach
  [10] kafka.network.Processor.processCompletedSends
  [11] kafka.network.Processor.run
  [12] java.lang.Thread.run

--- 15152 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.StringLatin1.newString
  [ 2] java.lang.StringBuilder.toString
  [ 3] org.apache.kafka.common.network.Selector$SelectorMetrics.recordCompletedReceive
  [ 4] org.apache.kafka.common.network.Selector.addToCompletedReceives
  [ 5] org.apache.kafka.common.network.Selector.attemptRead
  [ 6] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 7] org.apache.kafka.common.network.Selector.poll
  [ 8] kafka.network.Processor.poll
  [ 9] kafka.network.Processor.run
  [10] java.lang.Thread.run

--- 15112 bytes (0.00%), 1 sample
  [ 0] scala.collection.mutable.ListBuffer
  [ 1] scala.collection.immutable.List$.newBuilder
  [ 2] scala.collection.StrictOptimizedSeqOps.appended
  [ 3] scala.collection.StrictOptimizedSeqOps.appended$
  [ 4] scala.collection.immutable.List.appended
  [ 5] scala.collection.SeqOps.$colon$plus
  [ 6] scala.collection.SeqOps.$colon$plus$
  [ 7] scala.collection.AbstractSeq.$colon$plus
  [ 8] kafka.network.RequestChannel$Request.updateRequestMetrics
  [ 9] kafka.network.Processor.updateRequestMetrics
  [10] kafka.network.Processor.$anonfun$processCompletedSends$1
  [11] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [12] java.util.ArrayList.forEach
  [13] kafka.network.Processor.processCompletedSends
  [14] kafka.network.Processor.run
  [15] java.lang.Thread.run

--- 15112 bytes (0.00%), 1 sample
  [ 0] double[]
  [ 1] com.yammer.metrics.core.Histogram.updateVariance
  [ 2] com.yammer.metrics.core.Histogram.update
  [ 3] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1
  [ 4] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1$adapted
  [ 5] kafka.network.RequestChannel$Request$$Lambda$1234.0x000000080111c208.apply
  [ 6] scala.collection.immutable.List.foreach
  [ 7] kafka.network.RequestChannel$Request.updateRequestMetrics
  [ 8] kafka.network.Processor.updateRequestMetrics
  [ 9] kafka.network.Processor.$anonfun$processCompletedSends$1
  [10] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [11] java.util.ArrayList.forEach
  [12] kafka.network.Processor.processCompletedSends
  [13] kafka.network.Processor.run
  [14] java.lang.Thread.run

--- 15112 bytes (0.00%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.<init>
  [ 2] java.lang.StringBuilder.<init>
  [ 3] org.apache.kafka.common.utils.Sanitizer.sanitize
  [ 4] kafka.network.RequestChannel$Session.<init>
  [ 5] kafka.network.RequestChannel$Request.<init>
  [ 6] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [ 7] kafka.network.Processor$$Lambda$1138.0x00000008010e5b90.accept
  [ 8] java.util.LinkedHashMap$LinkedValues.forEach
  [ 9] kafka.network.Processor.processCompletedReceives
  [10] kafka.network.Processor.run
  [11] java.lang.Thread.run

--- 15104 bytes (0.00%), 1 sample
  [ 0] java.lang.Double
  [ 1] java.util.concurrent.atomic.AtomicLong.incrementAndGet
  [ 2] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 3] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 4] com.yammer.metrics.core.Histogram.update
  [ 5] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1
  [ 6] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1$adapted
  [ 7] kafka.network.RequestChannel$Request$$Lambda$1234.0x000000080111c208.apply
  [ 8] scala.collection.immutable.List.foreach
  [ 9] kafka.network.RequestChannel$Request.updateRequestMetrics
  [10] kafka.network.Processor.updateRequestMetrics
  [11] kafka.network.Processor.$anonfun$processCompletedSends$1
  [12] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [13] java.util.ArrayList.forEach
  [14] kafka.network.Processor.processCompletedSends
  [15] kafka.network.Processor.run
  [16] java.lang.Thread.run

--- 15104 bytes (0.00%), 1 sample
  [ 0] org.apache.kafka.common.requests.RequestAndSize
  [ 1] org.apache.kafka.common.requests.AbstractRequest.parseRequest
  [ 2] org.apache.kafka.common.requests.RequestContext.parseRequest
  [ 3] kafka.network.RequestChannel$Request.<init>
  [ 4] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [ 5] kafka.network.Processor$$Lambda$1138.0x00000008010e5b90.accept
  [ 6] java.util.LinkedHashMap$LinkedValues.forEach
  [ 7] kafka.network.Processor.processCompletedReceives
  [ 8] kafka.network.Processor.run
  [ 9] java.lang.Thread.run

--- 15104 bytes (0.00%), 1 sample
  [ 0] kafka.network.RequestMetrics$$Lambda$1240+0x000000080111e718
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.LambdaForm$DMH.0x0000000801020c00.newInvokeSpecial
  [ 4] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 5] kafka.network.RequestMetrics.requestRate
  [ 6] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1
  [ 7] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1$adapted
  [ 8] kafka.network.RequestChannel$Request$$Lambda$1234.0x000000080111c208.apply
  [ 9] scala.collection.immutable.List.foreach
  [10] kafka.network.RequestChannel$Request.updateRequestMetrics
  [11] kafka.network.Processor.updateRequestMetrics
  [12] kafka.network.Processor.$anonfun$processCompletedSends$1
  [13] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [14] java.util.ArrayList.forEach
  [15] kafka.network.Processor.processCompletedSends
  [16] kafka.network.Processor.run
  [17] java.lang.Thread.run

--- 15104 bytes (0.00%), 1 sample
  [ 0] java.lang.Double
  [ 1] java.util.concurrent.atomic.AtomicLong.incrementAndGet
  [ 2] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 3] com.yammer.metrics.stats.ExponentiallyDecayingSample.update
  [ 4] com.yammer.metrics.core.Histogram.update
  [ 5] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1
  [ 6] kafka.network.RequestChannel$Request.$anonfun$updateRequestMetrics$1$adapted
  [ 7] kafka.network.RequestChannel$Request$$Lambda$1234.0x000000080111c208.apply
  [ 8] scala.collection.immutable.List.foreach
  [ 9] kafka.network.RequestChannel$Request.updateRequestMetrics
  [10] kafka.network.Processor.updateRequestMetrics
  [11] kafka.network.Processor.$anonfun$processCompletedSends$1
  [12] kafka.network.Processor$$Lambda$1139.0x00000008010e6018.accept
  [13] java.util.ArrayList.forEach
  [14] kafka.network.Processor.processCompletedSends
  [15] kafka.network.Processor.run
  [16] java.lang.Thread.run

--- 15104 bytes (0.00%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.common.message.FetchRequestData.read
  [ 2] org.apache.kafka.common.message.FetchRequestData.<init>
  [ 3] org.apache.kafka.common.requests.FetchRequest.parse
  [ 4] org.apache.kafka.common.requests.AbstractRequest.doParseRequest
  [ 5] org.apache.kafka.common.requests.AbstractRequest.parseRequest
  [ 6] org.apache.kafka.common.requests.RequestContext.parseRequest
  [ 7] kafka.network.RequestChannel$Request.<init>
  [ 8] kafka.network.Processor.$anonfun$processCompletedReceives$1
  [ 9] kafka.network.Processor$$Lambda$1138.0x00000008010e5b90.accept
  [10] java.util.LinkedHashMap$LinkedValues.forEach
  [11] kafka.network.Processor.processCompletedReceives
  [12] kafka.network.Processor.run
  [13] java.lang.Thread.run

       bytes  percent  samples  top
  ----------  -------  -------  ---
   609342480   23.19%      222  java.nio.HeapByteBuffer
   490648656   18.67%      286  byte[]
   369581752   14.06%      121  org.apache.kafka.common.record.DefaultRecord
   325802776   12.40%      118  org.apache.kafka.clients.consumer.ConsumerRecord
   201268864    7.66%       58  java.util.Optional
   175945696    6.70%       52  java.util.Arrays$ArrayList
   148721248    5.66%       51  org.apache.kafka.common.header.internals.RecordHeaders
   126654792    4.82%       58  java.util.ArrayList
   113886824    4.33%       53  java.lang.Object[]
    14738232    0.56%       48  java.lang.InterruptedException
    11719984    0.45%       32  zio.FiberRefs$$Lambda$134+0x0000000800d364f0
     9895464    0.38%       26  java.lang.String
     4194304    0.16%        1  java.util.HashMap
     4194304    0.16%        1  java.lang.invoke.ConstantCallSite
     2508904    0.10%        2  zio.Exit$$Lambda$2685+0x000000080132cad0
     2216520    0.08%       18  java.util.HashMap$KeyIterator
     2130248    0.08%       13  java.lang.Long
     1497048    0.06%       18  zio.ChunkBuilder$$anon$1
     1249824    0.05%        9  java.util.HashMap$Node
     1096784    0.04%       46  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
      900288    0.03%        2  java.util.concurrent.LinkedBlockingQueue$Itr
      780560    0.03%        2  java.util.HashMap$KeySet
      772288    0.03%       12  java.lang.Integer
      722320    0.03%        2  java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1
      691088    0.03%        3  java.lang.ref.WeakReference
      655816    0.02%        7  java.lang.Double
      622752    0.02%        1  java.util.concurrent.locks.AbstractQueuedSynchronizer$SharedNode
      485896    0.02%        1  java.io.ByteArrayOutputStream
      484880    0.02%        1  org.apache.zookeeper.txn.TxnHeader
      367088    0.01%        3  java.lang.invoke.MemberName
      358016    0.01%       13  kafka.server.KafkaRequestHandler$$Lambda$1155+0x00000008010eb218
      293432    0.01%        1  java.util.IdentityHashMap$KeyIterator
      216256    0.01%       14  jdk.internal.org.objectweb.asm.SymbolTable$Entry
      201752    0.01%        5  org.apache.kafka.common.network.ByteBufferSend
      188912    0.01%        1  kafka.utils.KafkaScheduler$$Lambda$847+0x00000008010397a8
      178696    0.01%        9  jdk.internal.org.objectweb.asm.SymbolTable$Entry[]
      152688    0.01%       12  java.lang.StringBuilder
      125024    0.00%        7  java.util.HashMap$EntryIterator
       85176    0.00%        2  kafka.utils.Pool$$Lambda$2013+0x0000000801235d28
       77936    0.00%        3  java.lang.invoke.MethodType
       77632    0.00%        2  scala.collection.mutable.CheckedIndexedSeqView$CheckedIterator
       72584    0.00%        1  zio.internal.FiberRuntime$$Lambda$2751+0x00000008013436d8
       71664    0.00%        3  kafka.coordinator.group.InitialDelayedJoin$$Lambda$2515+0x00000008012ef8b8
       70240    0.00%        3  scala.collection.mutable.ArrayBuffer$$anon$1
       68096    0.00%        2  scala.collection.Iterator$$anon$9
       66040    0.00%        6  kafka.network.Processor$$Lambda$1140+0x00000008010e6250
       64728    0.00%       17  java.util.regex.Matcher
       63744    0.00%        5  scala.Some
       60376    0.00%        1  kafka.log.LocalLog$$Lambda$2634+0x0000000801317d18
       58672    0.00%       13  javax.management.MBeanAttributeInfo
       56752    0.00%        2  org.apache.kafka.common.utils.Timer
       56456    0.00%        1  org.apache.kafka.common.record.FileRecords$TimestampAndOffset
       56288    0.00%       18  int[]
       53744    0.00%        5  char[]
       47672    0.00%        1  java.lang.Class
       47584    0.00%        1  zio.ZIO$UpdateRuntimeFlagsWithin$Uninterruptible
       43272    0.00%        2  java.util.concurrent.CopyOnWriteArrayList$COWIterator
       42376    0.00%        6  kafka.network.Processor$$Lambda$1138+0x00000008010e5b90
       40688    0.00%        1  org.apache.kafka.common.message.FetchResponseData$EpochEndOffset
       40672    0.00%        1  scala.collection.convert.JavaCollectionWrappers$JIteratorWrapper
       40568    0.00%        2  jdk.internal.org.objectweb.asm.ClassWriter
       39456    0.00%        2  java.util.LinkedHashMap$Entry
       38304    0.00%        4  kafka.utils.timer.SystemTimer$$Lambda$2391+0x00000008012c5388
       37480    0.00%        2  kafka.server.CachedPartition
       37416    0.00%        1  scala.collection.immutable.Map$Map4
       35560    0.00%        1  java.util.TreeMap$Entry
       35544    0.00%        1  scala.collection.immutable.SetBuilderImpl
       35384    0.00%        1  org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator
       34040    0.00%        1  java.util.stream.ReferencePipeline$4
       32920    0.00%        3  double[]
       31488    0.00%        2  scala.collection.StrictOptimizedLinearSeqOps$$anon$1
       31376    0.00%        2  java.lang.String[]
       30608    0.00%        2  java.util.ArrayList$Itr
       30344    0.00%        1  java.nio.DirectByteBuffer
       30312    0.00%        1  kafka.server.FetchDataInfo
       28576    0.00%        1  javax.management.MBeanInfo
       28552    0.00%        1  java.lang.invoke.ResolvedMethodName
       28152    0.00%        1  kafka.server.ProduceMetadata
       27640    0.00%        2  scala.math.Ordered$$anon$1
       25720    0.00%        2  org.apache.kafka.common.message.FetchResponseData$LeaderIdAndEpoch
       25272    0.00%        5  java.util.regex.IntHashSet[]
       25216    0.00%        3  jdk.internal.org.objectweb.asm.MethodWriter
       23696    0.00%        1  org.apache.kafka.common.requests.FetchRequest$PartitionData
       19848    0.00%        3  java.util.concurrent.ConcurrentSkipListMap$Node
       17144    0.00%        2  kafka.network.Processor$$Lambda$1139+0x00000008010e6018
       16008    0.00%        4  scala.collection.mutable.ArrayBufferView
       15768    0.00%        1  org.apache.kafka.common.message.ListOffsetsRequestData$ListOffsetsPartition
       15760    0.00%        1  org.apache.kafka.common.message.FetchRequestData$FetchTopic
       15752    0.00%        1  kafka.network.Processor$$Lambda$1220+0x0000000801113de8
       15752    0.00%        1  kafka.network.RequestChannel$Request$$Lambda$1251+0x0000000801119800
       15112    0.00%        1  scala.collection.mutable.ListBuffer
       15104    0.00%        1  kafka.network.RequestMetrics$$Lambda$1240+0x000000080111e718
       15104    0.00%        1  org.apache.kafka.common.requests.RequestAndSize
       14720    0.00%        1  scala.collection.immutable.$colon$colon
       14720    0.00%        1  org.apache.kafka.common.network.NetworkSend
       10720    0.00%        4  javax.management.MBeanServerNotification
        7328    0.00%        3  zio.internal.FiberMessage$Resume
        5640    0.00%        2  jdk.internal.org.objectweb.asm.Label
        2928    0.00%        1  jdk.internal.org.objectweb.asm.ByteVector
        2704    0.00%        1  java.util.concurrent.ConcurrentHashMap$Node[]
        2680    0.00%        1  javax.management.MBeanAttributeInfo[]
        2672    0.00%        1  com.yammer.metrics.stats.EWMA
        2672    0.00%        1  jdk.internal.org.objectweb.asm.ClassReader
        2664    0.00%        1  java.lang.invoke.DirectMethodHandle$Constructor
        2664    0.00%        1  java.util.HashMap$ValueIterator
        2648    0.00%        1  java.util.Collections$UnmodifiableRandomAccessList
        2648    0.00%        1  java.util.Date
        2648    0.00%        1  scala.Tuple2
        2648    0.00%        1  java.util.Collections$UnmodifiableCollection$1
        2648    0.00%        1  java.lang.Class[]
        2048    0.00%        1  org.apache.kafka.common.record.DefaultRecordBatch
        2048    0.00%        1  short[]
        2048    0.00%        1  org.apache.kafka.common.protocol.MessageSizeAccumulator
        2048    0.00%        1  kafka.network.Processor$$Lambda$1254+0x0000000801120980
        2048    0.00%        1  kafka.network.Processor$$Lambda$1145+0x00000008010e23c8
        2048    0.00%        1  kafka.log.UnifiedLog$$Lambda$2344+0x00000008012b26c0
