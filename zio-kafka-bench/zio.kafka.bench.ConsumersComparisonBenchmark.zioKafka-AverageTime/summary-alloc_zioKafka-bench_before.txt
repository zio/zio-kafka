--- Execution profile ---
Total samples       : 3448

--- 302570512 bytes (15.78%), 207 samples
  [ 0] java.nio.HeapByteBuffer
  [ 1] org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint
  [ 2] org.apache.kafka.common.utils.ByteUtils.readVarint
  [ 3] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 4] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 5] org.apache.kafka.common.record.DefaultRecordBatch$3.readNext
  [ 6] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 7] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [11] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.consumer.internal.Runloop.doPoll
  [17] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [18] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [19] zio.ZIO$.$anonfun$suspend$1
  [20] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [21] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [22] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 209016872 bytes (10.90%), 133 samples
  [ 0] org.apache.kafka.clients.consumer.ConsumerRecord
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.consumer.internal.Runloop.doPoll
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 180739128 bytes (9.43%), 120 samples
  [ 0] org.apache.kafka.common.record.DefaultRecord
  [ 1] org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint
  [ 2] org.apache.kafka.common.utils.ByteUtils.readVarint
  [ 3] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 4] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 5] org.apache.kafka.common.record.DefaultRecordBatch$3.readNext
  [ 6] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 7] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [11] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.consumer.internal.Runloop.doPoll
  [17] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [18] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [19] zio.ZIO$.$anonfun$suspend$1
  [20] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [21] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [22] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 108412704 bytes (5.66%), 51 samples
  [ 0] byte[]
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.consumer.internal.Runloop.doPoll
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 98882440 bytes (5.16%), 65 samples
  [ 0] byte[]
  [ 1] org.apache.kafka.common.header.internals.RecordHeaders.<init>
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] zio.kafka.consumer.internal.Runloop.doPoll
  [12] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [13] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [14] zio.ZIO$.$anonfun$suspend$1
  [15] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [16] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [17] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 84684744 bytes (4.42%), 51 samples
  [ 0] java.util.Arrays$ArrayList
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.consumer.internal.Runloop.doPoll
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [13] zio.ZIO$.$anonfun$suspend$1
  [14] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [15] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [16] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 81005032 bytes (4.23%), 42 samples
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.common.header.internals.RecordHeaders.<init>
  [ 2] org.apache.kafka.common.header.internals.RecordHeaders.<init>
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.consumer.internal.Runloop.doPoll
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 80537840 bytes (4.20%), 58 samples
  [ 0] zio.kafka.consumer.OffsetImpl
  [ 1] java.util.concurrent.atomic.AtomicLong.set
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.release
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.groupMetadata
  [ 4] zio.kafka.consumer.internal.Runloop.getConsumerGroupMetadataIfAny
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$4
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$2992.0x00000008013777a0.apply
  [ 7] zio.Chunk$Arr.mapChunk
  [ 8] zio.ChunkLike.map
  [ 9] zio.ChunkLike.map$
  [10] zio.Chunk.map
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2991.0x0000000801377268.apply
  [13] zio.ZIO.$anonfun$$times$greater$1
  [14] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 76975384 bytes (4.02%), 51 samples
  [ 0] zio.kafka.consumer.CommittableRecord
  [ 1] java.util.concurrent.atomic.AtomicLong.set
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.release
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.groupMetadata
  [ 4] zio.kafka.consumer.internal.Runloop.getConsumerGroupMetadataIfAny
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$4
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$2992.0x00000008013777a0.apply
  [ 7] zio.Chunk$Arr.mapChunk
  [ 8] zio.ChunkLike.map
  [ 9] zio.ChunkLike.map$
  [10] zio.Chunk.map
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2991.0x0000000801377268.apply
  [13] zio.ZIO.$anonfun$$times$greater$1
  [14] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 66559696 bytes (3.47%), 47 samples
  [ 0] org.apache.kafka.common.header.internals.RecordHeaders
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.consumer.internal.Runloop.doPoll
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [13] zio.ZIO$.$anonfun$suspend$1
  [14] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [15] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [16] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 65538432 bytes (3.42%), 42 samples
  [ 0] org.apache.kafka.common.TopicPartition
  [ 1] java.util.concurrent.atomic.AtomicLong.set
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.release
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.groupMetadata
  [ 4] zio.kafka.consumer.internal.Runloop.getConsumerGroupMetadataIfAny
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$4
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$2992.0x00000008013777a0.apply
  [ 7] zio.Chunk$Arr.mapChunk
  [ 8] zio.ChunkLike.map
  [ 9] zio.ChunkLike.map$
  [10] zio.Chunk.map
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2991.0x0000000801377268.apply
  [13] zio.ZIO.$anonfun$$times$greater$1
  [14] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 43140184 bytes (2.25%), 30 samples
  [ 0] zio.kafka.consumer.internal.Runloop$$Lambda$2993+0x0000000801378000
  [ 1] java.util.concurrent.atomic.AtomicLong.set
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.release
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.groupMetadata
  [ 4] zio.kafka.consumer.internal.Runloop.getConsumerGroupMetadataIfAny
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$4
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$2992.0x00000008013777a0.apply
  [ 7] zio.Chunk$Arr.mapChunk
  [ 8] zio.ChunkLike.map
  [ 9] zio.ChunkLike.map$
  [10] zio.Chunk.map
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2991.0x0000000801377268.apply
  [13] zio.ZIO.$anonfun$$times$greater$1
  [14] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 38079384 bytes (1.99%), 29 samples
  [ 0] scala.Some
  [ 1] java.util.concurrent.atomic.AtomicLong.set
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.release
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.groupMetadata
  [ 4] zio.kafka.consumer.internal.Runloop.getConsumerGroupMetadataIfAny
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$4
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$2992.0x00000008013777a0.apply
  [ 7] zio.Chunk$Arr.mapChunk
  [ 8] zio.ChunkLike.map
  [ 9] zio.ChunkLike.map$
  [10] zio.Chunk.map
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2991.0x0000000801377268.apply
  [13] zio.ZIO.$anonfun$$times$greater$1
  [14] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 33737712 bytes (1.76%), 23 samples
  [ 0] java.lang.Object[]
  [ 1] java.util.Arrays.copyOf
  [ 2] java.util.Arrays.copyOf
  [ 3] java.util.ArrayList.grow
  [ 4] java.util.ArrayList.grow
  [ 5] java.util.ArrayList.add
  [ 6] java.util.ArrayList.add
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] zio.kafka.consumer.internal.Runloop.doPoll
  [15] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [16] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [17] zio.ZIO$.$anonfun$suspend$1
  [18] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [19] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [20] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.evaluateEffect
  [26] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [27] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [28] zio.internal.FiberRuntime.run
  [29] java.util.concurrent.ThreadPoolExecutor.runWorker
  [30] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [31] java.lang.Thread.run

--- 33023032 bytes (1.72%), 36 samples
  [ 0] java.util.Optional
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.consumer.internal.Runloop.doPoll
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 29542376 bytes (1.54%), 15 samples
  [ 0] java.lang.Object[]
  [ 1] scala.collection.mutable.ArrayBuilder$ofRef.mkArray
  [ 2] scala.collection.mutable.ArrayBuilder$ofRef.resize
  [ 3] scala.collection.mutable.ArrayBuilder.ensureSize
  [ 4] scala.collection.mutable.ArrayBuilder$ofRef.addOne
  [ 5] scala.collection.mutable.ArrayBuilder$ofRef.addOne
  [ 6] zio.ChunkBuilder$$anon$1.addOne
  [ 7] zio.ChunkBuilder$$anon$1.addOne
  [ 8] scala.collection.mutable.Growable.$plus$eq
  [ 9] scala.collection.mutable.Growable.$plus$eq$
  [10] zio.ChunkBuilder.$plus$eq
  [11] zio.Chunk$.fromJavaIterator
  [12] zio.Chunk$.fromJavaIterable
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$1
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2590.0x00000008012fc6e8.apply
  [15] scala.collection.ArrayOps$.foreach$extension
  [16] zio.Chunk$Arr.foreach
  [17] zio.kafka.consumer.internal.Runloop.fulfillRequests
  [18] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$16
  [19] zio.kafka.consumer.internal.Runloop$$Lambda$2585.0x00000008012fb6d8.apply
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.evaluateEffect
  [25] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [26] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [27] zio.internal.FiberRuntime.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 22515064 bytes (1.17%), 9 samples
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.kafka.common.memory.MemoryPool$1.tryAllocate
  [ 3] org.apache.kafka.common.network.NetworkReceive.readFrom
  [ 4] org.apache.kafka.common.network.KafkaChannel.receive
  [ 5] org.apache.kafka.common.network.KafkaChannel.read
  [ 6] org.apache.kafka.common.network.Selector.attemptRead
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] org.apache.kafka.clients.NetworkClient.poll
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] zio.kafka.consumer.internal.Runloop.doPoll
  [16] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [17] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [18] zio.ZIO$.$anonfun$suspend$1
  [19] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [20] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [21] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.evaluateEffect
  [27] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [28] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [29] zio.internal.FiberRuntime.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 13736824 bytes (0.72%), 9 samples
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.kafka.common.memory.MemoryPool$1.tryAllocate
  [ 3] org.apache.kafka.common.network.NetworkReceive.readFrom
  [ 4] org.apache.kafka.common.network.KafkaChannel.receive
  [ 5] org.apache.kafka.common.network.KafkaChannel.read
  [ 6] org.apache.kafka.common.network.Selector.attemptRead
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] org.apache.kafka.clients.NetworkClient.poll
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.transmitSends
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] zio.kafka.consumer.internal.Runloop.doPoll
  [14] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [15] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [16] zio.ZIO$.$anonfun$suspend$1
  [17] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [18] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [19] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.evaluateEffect
  [25] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [26] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [27] zio.internal.FiberRuntime.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 13292000 bytes (0.69%), 5 samples
  [ 0] java.nio.HeapByteBuffer
  [ 1] org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint
  [ 2] org.apache.kafka.common.utils.ByteUtils.readVarint
  [ 3] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 4] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 5] org.apache.kafka.common.record.DefaultRecordBatch$3.readNext
  [ 6] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 7] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [11] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.consumer.internal.Runloop.doPoll
  [17] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [18] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [19] zio.ZIO$.$anonfun$suspend$1
  [20] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [21] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [22] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 12937432 bytes (0.67%), 4 samples
  [ 0] zio.ZIO$EvaluationStep[]
  [ 1] zio.internal.PinchableArray.pinch
  [ 2] zio.internal.FiberRuntime.evaluateEffect
  [ 3] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 4] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 5] zio.internal.FiberRuntime.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 10898088 bytes (0.57%), 9 samples
  [ 0] java.lang.Object[]
  [ 1] java.util.Arrays.copyOf
  [ 2] java.util.Arrays.copyOf
  [ 3] scala.collection.mutable.ArrayBuilder$ofRef.mkArray
  [ 4] scala.collection.mutable.ArrayBuilder$ofRef.result
  [ 5] scala.collection.mutable.ArrayBuilder$ofRef.result
  [ 6] zio.ChunkBuilder$$anon$1.result
  [ 7] zio.ChunkBuilder$$anon$1.result
  [ 8] zio.Chunk$.fromJavaIterator
  [ 9] zio.Chunk$.fromJavaIterable
  [10] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$1
  [11] zio.kafka.consumer.internal.Runloop$$Lambda$2590.0x00000008012fc6e8.apply
  [12] scala.collection.ArrayOps$.foreach$extension
  [13] zio.Chunk$Arr.foreach
  [14] zio.kafka.consumer.internal.Runloop.fulfillRequests
  [15] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$16
  [16] zio.kafka.consumer.internal.Runloop$$Lambda$2585.0x00000008012fb6d8.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 5628320 bytes (0.29%), 5 samples
  [ 0] java.lang.Object[]
  [ 1] scala.collection.mutable.ArrayBuilder$ofRef.mkArray
  [ 2] scala.collection.mutable.ArrayBuilder$ofRef.resize
  [ 3] scala.collection.mutable.ArrayBuilder.sizeHint
  [ 4] zio.ChunkBuilder$$anon$1.addOne
  [ 5] zio.ChunkBuilder$$anon$1.addOne
  [ 6] scala.collection.mutable.Growable.$plus$eq
  [ 7] scala.collection.mutable.Growable.$plus$eq$
  [ 8] zio.ChunkBuilder.$plus$eq
  [ 9] zio.Chunk$Arr.mapChunk
  [10] zio.ChunkLike.map
  [11] zio.ChunkLike.map$
  [12] zio.Chunk.map
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2991.0x0000000801377268.apply
  [15] zio.ZIO.$anonfun$$times$greater$1
  [16] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 5053432 bytes (0.26%), 25 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 4] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 5] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 6] java.lang.Thread.run

--- 4548848 bytes (0.24%), 2 samples
  [ 0] org.apache.kafka.common.record.DefaultRecord
  [ 1] org.apache.kafka.common.utils.ByteUtils.readUnsignedVarint
  [ 2] org.apache.kafka.common.utils.ByteUtils.readVarint
  [ 3] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 4] org.apache.kafka.common.record.DefaultRecord.readFrom
  [ 5] org.apache.kafka.common.record.DefaultRecordBatch$3.readNext
  [ 6] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 7] org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator.next
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.nextFetchedRecord
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [10] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [11] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [12] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [16] zio.kafka.consumer.internal.Runloop.doPoll
  [17] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [18] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [19] zio.ZIO$.$anonfun$suspend$1
  [20] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [21] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [22] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.evaluateEffect
  [28] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [29] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [30] zio.internal.FiberRuntime.run
  [31] java.util.concurrent.ThreadPoolExecutor.runWorker
  [32] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [33] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] int[]
  [ 1] scala.collection.immutable.HashSetBuilder.insertValue
  [ 2] scala.collection.immutable.HashSetBuilder.update
  [ 3] scala.collection.immutable.HashSetBuilder.addOne
  [ 4] scala.collection.immutable.SetBuilderImpl.addOne
  [ 5] scala.collection.immutable.SetBuilderImpl.addOne
  [ 6] scala.collection.mutable.Growable.addAll
  [ 7] scala.collection.mutable.Growable.addAll$
  [ 8] scala.collection.immutable.SetBuilderImpl.addAll
  [ 9] scala.collection.immutable.Set$.from
  [10] scala.collection.IterableOnceOps.toSet
  [11] scala.collection.IterableOnceOps.toSet$
  [12] scala.collection.AbstractIterable.toSet
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] zio.Exit$Success
  [ 1] java.lang.invoke.VarHandleInts$FieldInstanceReadWrite.compareAndSet
  [ 2] java.lang.invoke.VarHandleGuards.guard_LII_Z
  [ 3] java.util.concurrent.atomic.AtomicBoolean.compareAndSet
  [ 4] zio.internal.FiberRuntime.$anonfun$initiateAsync$1
  [ 5] zio.internal.FiberRuntime.$anonfun$initiateAsync$1$adapted
  [ 6] zio.internal.FiberRuntime$$Lambda$330.0x0000000800dcc150.apply
  [ 7] zio.ZIOCompanionVersionSpecific.$anonfun$asyncInterrupt$3
  [ 8] zio.ZIOCompanionVersionSpecific.$anonfun$asyncInterrupt$3$adapted
  [ 9] zio.ZIOCompanionVersionSpecific$$Lambda$331.0x0000000800dccb70.apply
  [10] zio.internal.FiberRuntime.$anonfun$await$3
  [11] zio.internal.FiberRuntime.$anonfun$await$3$adapted
  [12] zio.internal.FiberRuntime$$Lambda$2543.0x00000008012f07a0.apply
  [13] zio.internal.FiberRuntime.setExitValue
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] java.util.concurrent.ConcurrentHashMap$ValueIterator
  [ 1] java.util.concurrent.ConcurrentHashMap$ValuesView.iterator
  [ 2] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient$UnsentRequests.hasRequests
  [ 3] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.hasPendingRequests
  [ 4] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 5] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 6] zio.kafka.consumer.internal.Runloop.doPoll
  [ 7] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [ 8] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [ 9] zio.ZIO$.$anonfun$suspend$1
  [10] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [11] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [12] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.evaluateEffect
  [18] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [19] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [20] zio.internal.FiberRuntime.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] zio.ZIO$UpdateRuntimeFlagsWithin$Interruptible
  [ 1] zio.ZIO$ReleaseExit.$anonfun$apply$11
  [ 2] zio.ZIO$ReleaseExit$$Lambda$1276.0x000000080112a640.apply
  [ 3] zio.ZIO$InterruptibilityRestorer$MakeInterruptible$.apply
  [ 4] zio.ZIO$ReleaseExit.$anonfun$apply$10
  [ 5] zio.ZIO$ReleaseExit$$Lambda$1274.0x0000000801129fb0.apply
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.org.objectweb.asm.ClassWriter.toByteArray
  [ 2] java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass
  [ 3] java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass
  [ 4] java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite
  [ 5] java.lang.invoke.LambdaMetafactory.altMetafactory
  [ 6] java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
  [ 7] java.lang.invoke.DelegatingMethodHandle$Holder.delegate
  [ 8] java.lang.invoke.LambdaForm$MH.0x0000000800cac000.invokeExact_MT
  [ 9] java.lang.invoke.BootstrapMethodInvoker.invoke
  [10] java.lang.invoke.CallSite.makeSite
  [11] java.lang.invoke.MethodHandleNatives.linkCallSiteImpl
  [12] java.lang.invoke.MethodHandleNatives.linkCallSite
  [13] kafka.server.BrokerToControllerChannelManagerImpl.shutdown
  [14] kafka.server.DefaultAlterPartitionManager.shutdown
  [15] kafka.server.KafkaServer.$anonfun$shutdown$17
  [16] kafka.server.KafkaServer$$Lambda$3335.0x00000008013d0680.apply$mcV$sp
  [17] kafka.utils.CoreUtils$.swallow
  [18] kafka.server.KafkaServer.shutdown
  [19] io.github.embeddedkafka.EmbeddedK.stop
  [20] zio.kafka.embedded.Kafka$EmbeddedKafkaService.$anonfun$stop$1
  [21] zio.kafka.embedded.Kafka$EmbeddedKafkaService$$Lambda$3232.0x00000008013bb040.apply$mcV$sp
  [22] scala.runtime.java8.JFunction0$mcV$sp.apply
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.runLoop
  [59] zio.internal.FiberRuntime.runLoop
  [60] zio.internal.FiberRuntime.runLoop
  [61] zio.internal.FiberRuntime.runLoop
  [62] zio.internal.FiberRuntime.runLoop
  [63] zio.internal.FiberRuntime.evaluateEffect
  [64] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [65] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [66] zio.internal.FiberRuntime.run
  [67] java.util.concurrent.ThreadPoolExecutor.runWorker
  [68] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [69] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] zio.FiberRef$unsafe$$anon$2$$Lambda$1353+0x0000000801156a80
  [ 1] zio.ZIO$ReleaseExit$$Lambda$1344.0x0000000801154e30.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.evaluateEffect
  [ 6] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 7] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 8] zio.internal.FiberRuntime.run
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [11] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.clients.consumer.internals.SubscriptionState.fetchablePartitions
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.fetchablePartitions
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.prepareFetchRequests
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.sendFetches
  [ 5] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 6] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 7] zio.kafka.consumer.internal.Runloop.doPoll
  [ 8] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [ 9] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [10] zio.ZIO$.$anonfun$suspend$1
  [11] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [12] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [13] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.evaluateEffect
  [19] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [20] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [21] zio.internal.FiberRuntime.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] scala.collection.immutable.Set$Set2
  [ 1] scala.collection.immutable.Set$Set1.contains
  [ 2] scala.collection.immutable.Set$Set1.incl
  [ 3] scala.collection.immutable.Set$Set1.incl
  [ 4] scala.collection.immutable.SetBuilderImpl.addOne
  [ 5] scala.collection.immutable.SetBuilderImpl.addOne
  [ 6] scala.collection.mutable.Growable.addAll
  [ 7] scala.collection.mutable.Growable.addAll$
  [ 8] scala.collection.immutable.SetBuilderImpl.addAll
  [ 9] scala.collection.immutable.Set$.from
  [10] scala.collection.IterableOnceOps.toSet
  [11] scala.collection.IterableOnceOps.toSet$
  [12] scala.collection.AbstractIterable.toSet
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$8
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2570.0x00000008012f7860.apply
  [15] zio.ZIO$IfZIO$.$anonfun$apply$3
  [16] zio.ZIO$IfZIO$.$anonfun$apply$3$adapted
  [17] zio.ZIO$IfZIO$$$Lambda$1891.0x000000080120c3c8.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] java.util.HashMap$EntrySpliterator
  [ 1] java.util.HashMap$EntrySet.spliterator
  [ 2] java.util.Collection.stream
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.regroupFetchPositionsByLeader
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsAsync
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsIfNeeded
  [ 6] org.apache.kafka.clients.consumer.KafkaConsumer.updateFetchPositions
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.consumer.internal.Runloop.doPoll
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [13] zio.ZIO$.$anonfun$suspend$1
  [14] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [15] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [16] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] zio.kafka.consumer.internal.Runloop$BufferedRecords
  [ 1] scala.collection.immutable.MapBuilderImpl.result
  [ 2] scala.collection.immutable.Map$.from
  [ 3] scala.collection.IterableOnceOps.toMap
  [ 4] scala.collection.IterableOnceOps.toMap$
  [ 5] scala.collection.AbstractIterable.toMap
  [ 6] zio.kafka.consumer.internal.Runloop$BufferedRecords$.fromMutableMap
  [ 7] zio.kafka.consumer.internal.Runloop.endRevoked
  [ 8] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$11
  [ 9] zio.kafka.consumer.internal.Runloop$$Lambda$2576.0x00000008012f9368.apply
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] org.apache.kafka.clients.consumer.ConsumerRecord
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.consumer.internal.Runloop.doPoll
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 4194304 bytes (0.22%), 1 sample
  [ 0] scala.collection.immutable.MapBuilderImpl
  [ 1] zio.ChunkBuilder$$anon$1.result
  [ 2] zio.kafka.consumer.internal.Runloop.endRevoked
  [ 3] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$11
  [ 4] zio.kafka.consumer.internal.Runloop$$Lambda$2576.0x00000008012f9368.apply
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 4098976 bytes (0.21%), 1 sample
  [ 0] org.apache.kafka.common.MetricName
  [ 1] org.apache.kafka.common.metrics.Metrics.metricName
  [ 2] org.apache.kafka.common.metrics.Metrics.metricInstance
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.recordPartitionLead
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.access$2200
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.consumer.internal.Runloop.doPoll
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [13] zio.ZIO$.$anonfun$suspend$1
  [14] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [15] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [16] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 3793944 bytes (0.20%), 1 sample
  [ 0] scala.collection.immutable.Set$Set2
  [ 1] scala.collection.immutable.Set$Set1.contains
  [ 2] scala.collection.immutable.Set$Set1.incl
  [ 3] scala.collection.immutable.Set$Set1.incl
  [ 4] scala.collection.immutable.SetBuilderImpl.addOne
  [ 5] scala.collection.immutable.SetBuilderImpl.addOne
  [ 6] scala.collection.mutable.Growable.addAll
  [ 7] scala.collection.mutable.Growable.addAll$
  [ 8] scala.collection.immutable.SetBuilderImpl.addAll
  [ 9] scala.collection.immutable.Set$.from
  [10] scala.collection.IterableOnceOps.toSet
  [11] scala.collection.IterableOnceOps.toSet$
  [12] zio.Chunk.toSet
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 3706752 bytes (0.19%), 1 sample
  [ 0] zio.ZIO$Stateful
  [ 1] zio.kafka.consumer.internal.ConsumerAccess$$Lambda$2539.0x00000008012e9a60.apply
  [ 2] zio.ZIO$.$anonfun$suspend$1
  [ 3] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [ 4] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [ 5] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 3693752 bytes (0.19%), 2 samples
  [ 0] byte[]
  [ 1] org.apache.kafka.common.utils.Utils.toArray
  [ 2] org.apache.kafka.common.utils.Utils.toArray
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.consumer.internal.Runloop.doPoll
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 3457160 bytes (0.18%), 1 sample
  [ 0] java.util.Collections$UnmodifiableMap
  [ 1] java.util.Collections.unmodifiableMap
  [ 2] org.apache.kafka.clients.consumer.internals.Fetch.records
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 4] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 5] zio.kafka.consumer.internal.Runloop.doPoll
  [ 6] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [ 7] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [ 8] zio.ZIO$.$anonfun$suspend$1
  [ 9] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [10] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [11] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 3436000 bytes (0.18%), 1 sample
  [ 0] java.util.stream.ReferencePipeline$2
  [ 1] java.util.stream.ReferencePipeline.filter
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsIfNeeded
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.updateFetchPositions
  [ 4] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded
  [ 5] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 6] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 7] zio.kafka.consumer.internal.Runloop.doPoll
  [ 8] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [ 9] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [10] zio.ZIO$.$anonfun$suspend$1
  [11] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [12] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [13] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.evaluateEffect
  [19] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [20] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [21] zio.internal.FiberRuntime.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 3431384 bytes (0.18%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 4] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 5] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 6] zio.kafka.consumer.internal.Runloop.doPoll
  [ 7] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [ 8] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [ 9] zio.ZIO$.$anonfun$suspend$1
  [10] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [11] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [12] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.evaluateEffect
  [18] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [19] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [20] zio.internal.FiberRuntime.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 3289472 bytes (0.17%), 1 sample
  [ 0] org.apache.kafka.common.message.FetchResponseData$EpochEndOffset
  [ 1] org.apache.kafka.common.message.FetchResponseData$PartitionData.read
  [ 2] org.apache.kafka.common.message.FetchResponseData$PartitionData.<init>
  [ 3] org.apache.kafka.common.message.FetchResponseData$FetchableTopicResponse.read
  [ 4] org.apache.kafka.common.message.FetchResponseData$FetchableTopicResponse.<init>
  [ 5] org.apache.kafka.common.message.FetchResponseData.read
  [ 6] org.apache.kafka.common.message.FetchResponseData.<init>
  [ 7] org.apache.kafka.common.requests.FetchResponse.parse
  [ 8] org.apache.kafka.common.requests.AbstractResponse.parseResponse
  [ 9] org.apache.kafka.common.requests.AbstractResponse.parseResponse
  [10] org.apache.kafka.clients.NetworkClient.parseResponse
  [11] org.apache.kafka.clients.NetworkClient.handleCompletedReceives
  [12] org.apache.kafka.clients.NetworkClient.poll
  [13] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [17] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [18] zio.kafka.consumer.internal.Runloop.doPoll
  [19] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [20] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [21] zio.ZIO$.$anonfun$suspend$1
  [22] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [23] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [24] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.evaluateEffect
  [30] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [31] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [32] zio.internal.FiberRuntime.run
  [33] java.util.concurrent.ThreadPoolExecutor.runWorker
  [34] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [35] java.lang.Thread.run

--- 3288280 bytes (0.17%), 1 sample
  [ 0] java.util.stream.Collectors$$Lambda$399+0x0000000800e618d8
  [ 1] java.util.stream.ReferencePipeline.<init>
  [ 2] java.util.stream.ReferencePipeline$StatelessOp.<init>
  [ 3] java.util.stream.ReferencePipeline$2.<init>
  [ 4] java.util.stream.ReferencePipeline.filter
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsIfNeeded
  [ 6] org.apache.kafka.clients.consumer.KafkaConsumer.updateFetchPositions
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.consumer.internal.Runloop.doPoll
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [13] zio.ZIO$.$anonfun$suspend$1
  [14] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [15] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [16] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 3095920 bytes (0.16%), 1 sample
  [ 0] zio.ZIO$Sync
  [ 1] zio.ZIO$ReleaseExit$$Lambda$1350.0x0000000801155f18.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 3039416 bytes (0.16%), 3 samples
  [ 0] zio.Exit$$Lambda$3174+0x00000008013a9798
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] zio.Exit.getOrThrow
  [ 4] zio.Exit.getOrThrow$
  [ 5] zio.Exit$Success.getOrThrow
  [ 6] zio.kafka.bench.ZioBenchmark.$anonfun$runZIO$1
  [ 7] zio.kafka.bench.ZioBenchmark$$Lambda$2480.0x00000008012df2b8.apply
  [ 8] zio.Unsafe$.unsafe
  [ 9] zio.kafka.bench.ZioBenchmark.runZIO
  [10] zio.kafka.bench.ZioBenchmark.runZIO$
  [11] zio.kafka.bench.ConsumersComparisonBenchmark.runZIO
  [12] zio.kafka.bench.ConsumersComparisonBenchmark.zioKafka
  [13] zio.kafka.bench.jmh_generated.ConsumersComparisonBenchmark_zioKafka_jmhTest.zioKafka_avgt_jmhStub
  [14] zio.kafka.bench.jmh_generated.ConsumersComparisonBenchmark_zioKafka_jmhTest.zioKafka_AverageTime
  [15] jdk.internal.reflect.NativeMethodAccessorImpl.invoke0
  [16] jdk.internal.reflect.NativeMethodAccessorImpl.invoke
  [17] jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke
  [18] java.lang.reflect.Method.invoke
  [19] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [20] org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call
  [21] java.util.concurrent.FutureTask.run
  [22] java.util.concurrent.Executors$RunnableAdapter.call
  [23] java.util.concurrent.FutureTask.run
  [24] java.util.concurrent.ThreadPoolExecutor.runWorker
  [25] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [26] java.lang.Thread.run

--- 2643560 bytes (0.14%), 25 samples
  [ 0] zio.ChunkBuilder$$anon$1
  [ 1] java.lang.invoke.VarHandleLongs$Array.setRelease
  [ 2] java.lang.invoke.VarHandleGuards.guard_LIJ_V
  [ 3] java.util.concurrent.atomic.AtomicLongArray.lazySet
  [ 4] zio.internal.RingBuffer.pollUpTo
  [ 5] zio.internal.ZScheduler$$anon$4.run

--- 2629728 bytes (0.14%), 1 sample
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.clients.NetworkClient.poll
  [ 2] org.apache.kafka.clients.producer.internals.Sender.runOnce
  [ 3] org.apache.kafka.clients.producer.internals.Sender.run
  [ 4] java.lang.Thread.run

--- 2486624 bytes (0.13%), 1 sample
  [ 0] zio.kafka.consumer.CommittableRecord
  [ 1] java.util.concurrent.atomic.AtomicLong.set
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.release
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.groupMetadata
  [ 4] zio.kafka.consumer.internal.Runloop.getConsumerGroupMetadataIfAny
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$4
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$2992.0x00000008013777a0.apply
  [ 7] zio.Chunk$Arr.mapChunk
  [ 8] zio.ChunkLike.map
  [ 9] zio.ChunkLike.map$
  [10] zio.Chunk.map
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2991.0x0000000801377268.apply
  [13] zio.ZIO.$anonfun$$times$greater$1
  [14] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 2097288 bytes (0.11%), 1 sample
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.kafka.common.memory.MemoryPool$1.tryAllocate
  [ 3] org.apache.kafka.common.network.NetworkReceive.readFrom
  [ 4] org.apache.kafka.common.network.KafkaChannel.receive
  [ 5] org.apache.kafka.common.network.KafkaChannel.read
  [ 6] org.apache.kafka.common.network.Selector.attemptRead
  [ 7] org.apache.kafka.common.network.Selector.pollSelectionKeys
  [ 8] org.apache.kafka.common.network.Selector.poll
  [ 9] org.apache.kafka.clients.NetworkClient.poll
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup
  [12] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run

--- 1810344 bytes (0.09%), 17 samples
  [ 0] zio.ZIO$EvaluationStep[]
  [ 1] zio.internal.PinchableArray.pinch
  [ 2] zio.internal.FiberRuntime.evaluateEffect
  [ 3] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 4] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 5] zio.internal.FiberRuntime.run
  [ 6] zio.internal.ZScheduler$$anon$4.run

--- 1799704 bytes (0.09%), 17 samples
  [ 0] zio.Chunk$AnyRefArray
  [ 1] scala.reflect.ClassTag$.apply
  [ 2] zio.Chunk$Arr.<init>
  [ 3] zio.Chunk$AnyRefArray.<init>
  [ 4] zio.Chunk$.fromArray
  [ 5] zio.internal.PinchableArray.pinch
  [ 6] zio.internal.FiberRuntime.evaluateEffect
  [ 7] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 8] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 9] zio.internal.FiberRuntime.run
  [10] zio.internal.ZScheduler$$anon$4.run

--- 1723880 bytes (0.09%), 9 samples
  [ 0] java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1
  [ 1] java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator
  [ 2] jdk.vm.ci.services.Services.serializeProperties
  [ 3] jdk.vm.ci.services.Services.serializeSavedProperties

--- 1649248 bytes (0.09%), 7 samples
  [ 0] java.util.concurrent.LinkedBlockingQueue$Itr
  [ 1] java.util.concurrent.LinkedBlockingQueue.iterator
  [ 2] org.apache.zookeeper.server.NIOServerCnxn.handleWrite
  [ 3] org.apache.zookeeper.server.NIOServerCnxn.doIO
  [ 4] org.apache.zookeeper.server.NIOServerCnxnFactory$IOWorkRequest.doWork
  [ 5] org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 1627992 bytes (0.08%), 1 sample
  [ 0] java.util.HashMap
  [ 1] java.util.stream.ReduceOps$3ReducingSink.begin
  [ 2] java.util.stream.ReferencePipeline$2$1.begin
  [ 3] java.util.stream.AbstractPipeline.copyInto
  [ 4] java.util.stream.AbstractPipeline.wrapAndCopyInto
  [ 5] java.util.stream.ReduceOps$ReduceOp.evaluateSequential
  [ 6] java.util.stream.AbstractPipeline.evaluate
  [ 7] java.util.stream.ReferencePipeline.collect
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.regroupFetchPositionsByLeader
  [ 9] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsAsync
  [10] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsIfNeeded
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.updateFetchPositions
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [15] zio.kafka.consumer.internal.Runloop.doPoll
  [16] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [17] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [18] zio.ZIO$.$anonfun$suspend$1
  [19] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [20] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [21] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.evaluateEffect
  [27] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [28] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [29] zio.internal.FiberRuntime.run
  [30] java.util.concurrent.ThreadPoolExecutor.runWorker
  [31] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [32] java.lang.Thread.run

--- 1396560 bytes (0.07%), 6 samples
  [ 0] byte[]
  [ 1] java.nio.ByteBuffer.allocate
  [ 2] org.apache.zookeeper.server.NIOServerCnxn.readLength
  [ 3] org.apache.zookeeper.server.NIOServerCnxn.doIO
  [ 4] org.apache.zookeeper.server.NIOServerCnxnFactory$IOWorkRequest.doWork
  [ 5] org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 1254120 bytes (0.07%), 12 samples
  [ 0] zio.stream.internal.ChannelExecutor$$$Lambda$1562+0x000000080119e690
  [ 1] scala.collection.mutable.ArrayDeque.scala$collection$mutable$ArrayDeque$$prependAssumingCapacity
  [ 2] scala.collection.mutable.ArrayDeque.prepend
  [ 3] scala.collection.mutable.Stack.push
  [ 4] zio.stream.internal.ChannelExecutor$.read$1
  [ 5] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 6] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 7] zio.ZIO.$anonfun$$times$greater$1
  [ 8] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 1166656 bytes (0.06%), 13 samples
  [ 0] zio.Chunk$Slice
  [ 1] scala.reflect.ClassTag$.apply
  [ 2] zio.Chunk$Arr.<init>
  [ 3] zio.Chunk$AnyRefArray.<init>
  [ 4] zio.Chunk$.fromArray
  [ 5] zio.internal.PinchableArray.pinch
  [ 6] zio.internal.FiberRuntime.evaluateEffect
  [ 7] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 8] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 9] zio.internal.FiberRuntime.run
  [10] zio.internal.ZScheduler$$anon$4.run

--- 1160376 bytes (0.06%), 5 samples
  [ 0] java.util.HashMap$Node
  [ 1] java.util.HashMap.putVal
  [ 2] java.util.HashMap.put
  [ 3] java.util.HashSet.add
  [ 4] sun.nio.ch.SelectorImpl.processReadyEvents
  [ 5] sun.nio.ch.KQueueSelectorImpl.processEvents
  [ 6] sun.nio.ch.KQueueSelectorImpl.doSelect
  [ 7] sun.nio.ch.SelectorImpl.lockAndDoSelect
  [ 8] sun.nio.ch.SelectorImpl.select
  [ 9] org.apache.zookeeper.server.NIOServerCnxnFactory$SelectorThread.select
  [10] org.apache.zookeeper.server.NIOServerCnxnFactory$SelectorThread.run

--- 1126472 bytes (0.06%), 11 samples
  [ 0] scala.collection.mutable.ArrayBuilder$ofRef
  [ 1] scala.collection.mutable.ArrayBuilder$.make
  [ 2] zio.ChunkBuilder$$anon$1.addOne
  [ 3] zio.ChunkBuilder$$anon$1.addOne
  [ 4] scala.collection.mutable.Growable.$plus$eq
  [ 5] scala.collection.mutable.Growable.$plus$eq$
  [ 6] zio.ChunkBuilder.$plus$eq
  [ 7] zio.internal.RingBuffer.pollUpTo
  [ 8] zio.internal.ZScheduler$$anon$4.run

--- 1063328 bytes (0.06%), 1 sample
  [ 0] java.util.HashMap$KeyIterator
  [ 1] java.util.HashSet.iterator
  [ 2] sun.nio.ch.Util$2.iterator
  [ 3] org.apache.zookeeper.server.NIOServerCnxnFactory$AcceptThread.select
  [ 4] org.apache.zookeeper.server.NIOServerCnxnFactory$AcceptThread.run

--- 981368 bytes (0.05%), 11 samples
  [ 0] zio.ZIO$Sync
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800d9cc00.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] zio.stream.internal.ChannelExecutor$.read$1
  [ 4] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 5] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 6] zio.ZIO.$anonfun$$times$greater$1
  [ 7] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 962920 bytes (0.05%), 8 samples
  [ 0] scala.Tuple2
  [ 1] scala.collection.immutable.Map$Map4$Map4Iterator.next
  [ 2] scala.collection.IterableOnceOps.foldLeft
  [ 3] scala.collection.IterableOnceOps.foldLeft$
  [ 4] scala.collection.AbstractIterable.foldLeft
  [ 5] zio.FiberRefs.joinAs
  [ 6] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [ 7] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 960128 bytes (0.05%), 1 sample
  [ 0] byte[]
  [ 1] jdk.internal.loader.Resource.getBytes
  [ 2] jdk.internal.loader.URLClassPath$JarLoader$2.getBytes
  [ 3] jdk.internal.loader.BuiltinClassLoader.defineClass
  [ 4] jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull
  [ 5] jdk.internal.loader.BuiltinClassLoader.loadClassOrNull
  [ 6] jdk.internal.loader.BuiltinClassLoader.loadClass
  [ 7] jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass
  [ 8] java.lang.ClassLoader.loadClass
  [ 9] io.github.embeddedkafka.EmbeddedZ.stop
  [10] io.github.embeddedkafka.EmbeddedK.$anonfun$stop$1
  [11] io.github.embeddedkafka.EmbeddedK.$anonfun$stop$1$adapted
  [12] io.github.embeddedkafka.EmbeddedK$$Lambda$3410.0x00000008013e1968.apply
  [13] scala.Option.foreach
  [14] io.github.embeddedkafka.EmbeddedK.stop
  [15] zio.kafka.embedded.Kafka$EmbeddedKafkaService.$anonfun$stop$1
  [16] zio.kafka.embedded.Kafka$EmbeddedKafkaService$$Lambda$3232.0x00000008013bb040.apply$mcV$sp
  [17] scala.runtime.java8.JFunction0$mcV$sp.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.runLoop
  [25] zio.internal.FiberRuntime.runLoop
  [26] zio.internal.FiberRuntime.runLoop
  [27] zio.internal.FiberRuntime.runLoop
  [28] zio.internal.FiberRuntime.runLoop
  [29] zio.internal.FiberRuntime.runLoop
  [30] zio.internal.FiberRuntime.runLoop
  [31] zio.internal.FiberRuntime.runLoop
  [32] zio.internal.FiberRuntime.runLoop
  [33] zio.internal.FiberRuntime.runLoop
  [34] zio.internal.FiberRuntime.runLoop
  [35] zio.internal.FiberRuntime.runLoop
  [36] zio.internal.FiberRuntime.runLoop
  [37] zio.internal.FiberRuntime.runLoop
  [38] zio.internal.FiberRuntime.runLoop
  [39] zio.internal.FiberRuntime.runLoop
  [40] zio.internal.FiberRuntime.runLoop
  [41] zio.internal.FiberRuntime.runLoop
  [42] zio.internal.FiberRuntime.runLoop
  [43] zio.internal.FiberRuntime.runLoop
  [44] zio.internal.FiberRuntime.runLoop
  [45] zio.internal.FiberRuntime.runLoop
  [46] zio.internal.FiberRuntime.runLoop
  [47] zio.internal.FiberRuntime.runLoop
  [48] zio.internal.FiberRuntime.runLoop
  [49] zio.internal.FiberRuntime.runLoop
  [50] zio.internal.FiberRuntime.runLoop
  [51] zio.internal.FiberRuntime.runLoop
  [52] zio.internal.FiberRuntime.runLoop
  [53] zio.internal.FiberRuntime.runLoop
  [54] zio.internal.FiberRuntime.runLoop
  [55] zio.internal.FiberRuntime.runLoop
  [56] zio.internal.FiberRuntime.runLoop
  [57] zio.internal.FiberRuntime.runLoop
  [58] zio.internal.FiberRuntime.evaluateEffect
  [59] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [60] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [61] zio.internal.FiberRuntime.run
  [62] java.util.concurrent.ThreadPoolExecutor.runWorker
  [63] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [64] java.lang.Thread.run

--- 941432 bytes (0.05%), 10 samples
  [ 0] zio.stream.internal.ChannelExecutor$ChannelState$Read
  [ 1] zio.stream.internal.ChannelExecutor.run
  [ 2] zio.stream.internal.ChannelExecutor$.read$1
  [ 3] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 4] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 5] zio.ZIO.$anonfun$$times$greater$1
  [ 6] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 850464 bytes (0.04%), 8 samples
  [ 0] zio.ZIO$OnSuccess
  [ 1] zio.ZIO.$anonfun$onExit$6
  [ 2] zio.ZIO$$Lambda$167.0x0000000800d81e70.apply
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.evaluateEffect
  [ 5] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 6] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 7] zio.internal.FiberRuntime.run
  [ 8] zio.internal.ZScheduler$$anon$4.run

--- 842056 bytes (0.04%), 7 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 832544 bytes (0.04%), 7 samples
  [ 0] zio.Chunk$Slice
  [ 1] zio.Chunk.drop
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] zio.internal.ZScheduler$$anon$4.run

--- 793992 bytes (0.04%), 9 samples
  [ 0] java.lang.Object[]
  [ 1] scala.collection.mutable.ArrayBuilder$ofRef.mkArray
  [ 2] scala.collection.mutable.ArrayBuilder$ofRef.resize
  [ 3] scala.collection.mutable.ArrayBuilder.sizeHint
  [ 4] zio.ChunkBuilder$$anon$1.addOne
  [ 5] zio.ChunkBuilder$$anon$1.addOne
  [ 6] scala.collection.mutable.Growable.$plus$eq
  [ 7] scala.collection.mutable.Growable.$plus$eq$
  [ 8] zio.ChunkBuilder.$plus$eq
  [ 9] zio.internal.RingBuffer.pollUpTo
  [10] zio.internal.ZScheduler$$anon$4.run

--- 784560 bytes (0.04%), 7 samples
  [ 0] zio.internal.ReifyStack$Trampoline
  [ 1] zio.internal.FiberRuntime.runLoop
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] zio.internal.ZScheduler$$anon$4.run

--- 769392 bytes (0.04%), 7 samples
  [ 0] java.lang.String

--- 765264 bytes (0.04%), 8 samples
  [ 0] zio.Chunk$AnyRefArray
  [ 1] scala.reflect.ClassTag$.apply
  [ 2] zio.Chunk$Arr.<init>
  [ 3] zio.Chunk$AnyRefArray.<init>
  [ 4] zio.Chunk$.fromArray
  [ 5] zio.ChunkBuilder$$anon$1.result
  [ 6] zio.ChunkBuilder$$anon$1.result
  [ 7] zio.internal.RingBuffer.pollUpTo
  [ 8] zio.internal.ZScheduler$$anon$4.run

--- 722904 bytes (0.04%), 7 samples
  [ 0] scala.collection.immutable.Map$Map4
  [ 1] scala.collection.immutable.Map$Map4.updated
  [ 2] scala.collection.immutable.Map$Map4.updated
  [ 3] zio.FiberRefs.updatedAs
  [ 4] zio.internal.FiberRuntime.setFiberRef
  [ 5] zio.internal.FiberRuntime.addInterruptedCause
  [ 6] zio.internal.FiberRuntime.processNewInterruptSignal
  [ 7] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 8] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 9] zio.internal.FiberRuntime.run
  [10] zio.internal.ZScheduler$$anon$4.run

--- 681040 bytes (0.04%), 7 samples
  [ 0] scala.collection.immutable.Map$Map3
  [ 1] scala.collection.immutable.Map$Map3.updated
  [ 2] scala.collection.immutable.Map$Map3.updated
  [ 3] zio.FiberRefs.updatedAs
  [ 4] zio.internal.FiberRuntime.setFiberRef
  [ 5] zio.internal.FiberRuntime.getFiberRefs
  [ 6] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [ 7] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 663616 bytes (0.03%), 6 samples
  [ 0] zio.internal.ReifyStack$Trampoline
  [ 1] zio.internal.FiberRuntime.runLoop
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.evaluateEffect
  [ 6] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 7] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 8] zio.internal.FiberRuntime.run
  [ 9] zio.internal.ZScheduler$$anon$4.run

--- 657688 bytes (0.03%), 3 samples
  [ 0] org.apache.zookeeper.server.DataTree$ProcessTxnResult
  [ 1] org.apache.zookeeper.server.ZooKeeperServer.processTxn
  [ 2] org.apache.zookeeper.server.FinalRequestProcessor.processRequest
  [ 3] org.apache.zookeeper.server.SyncRequestProcessor.run

--- 656584 bytes (0.03%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.String.substring
  [ 2] jdk.internal.util.jar.JarIndex.get
  [ 3] jdk.internal.loader.URLClassPath$JarLoader.getResource
  [ 4] jdk.internal.loader.URLClassPath$JarLoader.getResource
  [ 5] jdk.internal.loader.URLClassPath.getResource
  [ 6] jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull
  [ 7] jdk.internal.loader.BuiltinClassLoader.loadClassOrNull
  [ 8] jdk.internal.loader.BuiltinClassLoader.loadClass
  [ 9] jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass
  [10] java.lang.ClassLoader.loadClass
  [11] org.openjdk.jmh.runner.link.BinaryLinkClient.pushResults
  [12] org.openjdk.jmh.runner.ForkedRunner$1.accept
  [13] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [14] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [15] org.openjdk.jmh.runner.BaseRunner.doSingle
  [16] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [17] org.openjdk.jmh.runner.ForkedRunner.run
  [18] org.openjdk.jmh.runner.ForkedMain.main

--- 656496 bytes (0.03%), 3 samples
  [ 0] byte[]
  [ 1] java.lang.Long.toUnsignedString0
  [ 2] java.lang.Long.toHexString
  [ 3] org.apache.zookeeper.server.SessionTrackerImpl.checkSession
  [ 4] org.apache.zookeeper.server.PrepRequestProcessor.pRequest
  [ 5] org.apache.zookeeper.server.PrepRequestProcessor.run

--- 643840 bytes (0.03%), 3 samples
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.zookeeper.server.SessionTrackerImpl.touchSession
  [ 3] org.apache.zookeeper.server.ZooKeeperServer.touch
  [ 4] org.apache.zookeeper.server.ZooKeeperServer.submitRequestNow
  [ 5] org.apache.zookeeper.server.RequestThrottler.run

--- 643464 bytes (0.03%), 3 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$SharedNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire
  [ 2] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly
  [ 3] java.util.concurrent.CountDownLatch.await
  [ 4] org.openjdk.jmh.runner.InfraControlL2.awaitWarmdownReady
  [ 5] org.openjdk.jmh.runner.InfraControl.awaitWarmdownReady
  [ 6] org.openjdk.jmh.runner.BenchmarkHandler.runIteration
  [ 7] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 8] org.openjdk.jmh.runner.BaseRunner.runBenchmark
  [ 9] org.openjdk.jmh.runner.BaseRunner.doSingle
  [10] org.openjdk.jmh.runner.BaseRunner.runBenchmarksForked
  [11] org.openjdk.jmh.runner.ForkedRunner.run
  [12] org.openjdk.jmh.runner.ForkedMain.main

--- 633096 bytes (0.03%), 8 samples
  [ 0] java.lang.Long
  [ 1] zio.FiberRefs.findAncestor$1
  [ 2] zio.FiberRefs.$anonfun$joinAs$3
  [ 3] zio.FiberRefs$$Lambda$1241.0x000000080111dcf0.apply
  [ 4] scala.Option.fold
  [ 5] zio.FiberRefs.$anonfun$joinAs$1
  [ 6] zio.FiberRefs$$Lambda$1236.0x000000080111c000.apply
  [ 7] scala.collection.IterableOnceOps.foldLeft
  [ 8] scala.collection.IterableOnceOps.foldLeft$
  [ 9] scala.collection.AbstractIterable.foldLeft
  [10] zio.FiberRefs.joinAs
  [11] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [12] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.evaluateEffect
  [16] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [17] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [18] zio.internal.FiberRuntime.run
  [19] zio.internal.ZScheduler$$anon$4.run

--- 618576 bytes (0.03%), 6 samples
  [ 0] java.lang.Object[]
  [ 1] scala.reflect.ManifestFactory$ObjectManifest.newArray
  [ 2] scala.reflect.ManifestFactory$ObjectManifest.newArray
  [ 3] scala.Array$.ofDim
  [ 4] zio.Chunk.append
  [ 5] zio.ChunkLike.appended
  [ 6] zio.ChunkLike.appended$
  [ 7] zio.Chunk.appended
  [ 8] zio.Chunk.appended
  [ 9] scala.collection.SeqOps.$colon$plus
  [10] scala.collection.SeqOps.$colon$plus$
  [11] zio.Chunk.$colon$plus
  [12] zio.Dequeue.$anonfun$takeBetween$4
  [13] zio.Dequeue$$Lambda$1665.0x00000008011bc7a0.apply
  [14] zio.ZIO.$anonfun$map$2
  [15] zio.ZIO$$Lambda$136.0x0000000800d683c8.apply
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.evaluateEffect
  [18] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [19] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [20] zio.internal.FiberRuntime.run
  [21] zio.internal.ZScheduler$$anon$4.run

--- 608528 bytes (0.03%), 6 samples
  [ 0] zio.stream.internal.ChannelExecutor$$Lambda$1531+0x0000000801192c10
  [ 1] zio.stream.internal.ChannelExecutor.run
  [ 2] zio.stream.internal.ChannelExecutor$.read$1
  [ 3] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 4] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 5] zio.ZIO.$anonfun$$times$greater$1
  [ 6] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 594856 bytes (0.03%), 1 sample
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.ArrayBlockingQueue.take
  [ 3] kafka.server.LogDirFailureChannel.takeNextOfflineLogDir
  [ 4] kafka.server.ReplicaManager$LogDirFailureHandler.doWork
  [ 5] kafka.utils.ShutdownableThread.run

--- 577416 bytes (0.03%), 3 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] java.util.concurrent.LinkedBlockingQueue.take
  [ 3] kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 572296 bytes (0.03%), 5 samples
  [ 0] zio.ZIO$OnSuccess
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800d9cc00.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] zio.stream.internal.ChannelExecutor$.read$1
  [ 4] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 5] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 6] zio.ZIO.$anonfun$$times$greater$1
  [ 7] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 570208 bytes (0.03%), 5 samples
  [ 0] java.lang.Object[]
  [ 1] zio.stream.ZChannel.interpret$2
  [ 2] zio.stream.ZChannel.$anonfun$toPull$12
  [ 3] zio.stream.ZChannel$$Lambda$1712.0x00000008011cf988.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 550440 bytes (0.03%), 5 samples
  [ 0] zio.Fiber$Status$Running
  [ 1] zio.internal.FiberRuntime.runLoop
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] zio.internal.ZScheduler$$anon$4.run

--- 536664 bytes (0.03%), 5 samples
  [ 0] zio.stm.ZSTM$internal$Entry$$anon$4
  [ 1] java.util.HashMap.hash
  [ 2] java.util.HashMap.put
  [ 3] zio.stm.TRef.getOrMakeEntry
  [ 4] zio.stm.TRef.unsafeGet
  [ 5] zio.stm.TSemaphore.$anonfun$releaseN$1
  [ 6] zio.stm.TSemaphore.$anonfun$releaseN$1$adapted
  [ 7] zio.stm.TSemaphore$$Lambda$242.0x0000000800daa048.apply
  [ 8] zio.stm.ZSTM.zio$stm$ZSTM$$run
  [ 9] zio.stm.ZSTM$internal$.tryCommitSync
  [10] zio.stm.ZSTM$.$anonfun$unsafeAtomically$1
  [11] zio.stm.ZSTM$$$Lambda$189.0x0000000800d8e6a0.apply
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] zio.internal.ZScheduler$$anon$4.run

--- 536328 bytes (0.03%), 5 samples
  [ 0] zio.ZIO$OnSuccess
  [ 1] zio.stream.internal.ChannelExecutor$.read$1
  [ 2] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$8
  [ 3] zio.stream.internal.ChannelExecutor$$$Lambda$1611.0x00000008011ab760.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.evaluateEffect
  [ 6] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 7] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 8] zio.internal.FiberRuntime.run
  [ 9] zio.internal.ZScheduler$$anon$4.run

--- 533760 bytes (0.03%), 5 samples
  [ 0] zio.stream.internal.ChannelExecutor$$Lambda$1738+0x00000008011d8000
  [ 1] zio.stream.internal.ChannelExecutor.run
  [ 2] zio.stream.internal.ChannelExecutor$.read$1
  [ 3] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 4] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 5] zio.ZIO.$anonfun$$times$greater$1
  [ 6] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 524504 bytes (0.03%), 7 samples
  [ 0] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 512608 bytes (0.03%), 2 samples
  [ 0] java.util.ArrayList
  [ 1] org.apache.kafka.clients.NetworkClient.poll
  [ 2] kafka.common.InterBrokerSendThread.pollOnce
  [ 3] kafka.server.BrokerToControllerRequestThread.doWork
  [ 4] kafka.utils.ShutdownableThread.run

--- 509024 bytes (0.03%), 3 samples
  [ 0] java.lang.InterruptedException
  [ 1] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos
  [ 2] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 3] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take
  [ 4] java.util.concurrent.ThreadPoolExecutor.getTask
  [ 5] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 6] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 7] java.lang.Thread.run

--- 507904 bytes (0.03%), 5 samples
  [ 0] zio.stream.internal.ChannelExecutor$ChannelState$Read
  [ 1] zio.stream.internal.ChannelExecutor.run
  [ 2] zio.stream.internal.ChannelExecutor$.read$1
  [ 3] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 4] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 5] zio.ZIO.$anonfun$$times$greater$1
  [ 6] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 507896 bytes (0.03%), 24 samples
  [ 0] kafka.server.KafkaRequestHandler$$Lambda$1155+0x00000008010eb378
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] kafka.server.KafkaRequestHandler.run
  [ 4] java.lang.Thread.run

--- 499976 bytes (0.03%), 5 samples
  [ 0] scala.Tuple2
  [ 1] zio.FiberRefs.$anonfun$joinAs$3
  [ 2] zio.FiberRefs$$Lambda$1241.0x000000080111dcf0.apply
  [ 3] scala.Option.fold
  [ 4] zio.FiberRefs.$anonfun$joinAs$1
  [ 5] zio.FiberRefs$$Lambda$1236.0x000000080111c000.apply
  [ 6] scala.collection.IterableOnceOps.foldLeft
  [ 7] scala.collection.IterableOnceOps.foldLeft$
  [ 8] scala.collection.AbstractIterable.foldLeft
  [ 9] zio.FiberRefs.joinAs
  [10] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [11] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] zio.internal.ZScheduler$$anon$4.run

--- 487440 bytes (0.03%), 5 samples
  [ 0] zio.stream.internal.ChannelExecutor$$Lambda$1605+0x00000008011aa190
  [ 1] zio.stream.internal.ChannelExecutor.run
  [ 2] zio.stream.internal.ChannelExecutor$.read$1
  [ 3] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 4] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 5] zio.ZIO.$anonfun$$times$greater$1
  [ 6] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 476544 bytes (0.02%), 5 samples
  [ 0] scala.collection.mutable.HashMap$Node[]
  [ 1] scala.collection.mutable.HashMap$.from
  [ 2] scala.collection.mutable.HashMap$.from
  [ 3] scala.collection.MapFactory.apply
  [ 4] scala.collection.MapFactory.apply$
  [ 5] scala.collection.mutable.HashMap$.apply
  [ 6] scala.collection.MapFactory$Delegate.apply
  [ 7] zio.kafka.consumer.internal.Runloop.aggregateOffsets
  [ 8] zio.kafka.consumer.internal.Runloop.doCommit
  [ 9] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$32
  [10] zio.kafka.consumer.internal.Runloop$$Lambda$2599.0x00000008012fe8d0.apply
  [11] zio.ZIO$IfZIO$.$anonfun$apply$3
  [12] zio.ZIO$IfZIO$.$anonfun$apply$3$adapted
  [13] zio.ZIO$IfZIO$$$Lambda$1891.0x000000080120c3c8.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 475272 bytes (0.02%), 5 samples
  [ 0] zio.stream.internal.ChannelExecutor$$Lambda$1607+0x00000008011aa930
  [ 1] zio.stream.internal.ChannelExecutor.run
  [ 2] zio.stream.internal.ChannelExecutor$.read$1
  [ 3] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 4] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 5] zio.ZIO.$anonfun$$times$greater$1
  [ 6] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 472296 bytes (0.02%), 5 samples
  [ 0] scala.Tuple2
  [ 1] scala.collection.immutable.Map$Map3$Map3Iterator.next
  [ 2] scala.collection.IterableOnceOps.foldLeft
  [ 3] scala.collection.IterableOnceOps.foldLeft$
  [ 4] scala.collection.AbstractIterable.foldLeft
  [ 5] zio.FiberRefs.joinAs
  [ 6] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [ 7] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 460448 bytes (0.02%), 4 samples
  [ 0] zio.ZIO$$Lambda$1857+0x00000008011fd6e8
  [ 1] zio.ZIO$$Lambda$1720.0x00000008011d16e0.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] zio.internal.ZScheduler$$anon$4.run

--- 459432 bytes (0.02%), 4 samples
  [ 0] zio.ZIO$OnSuccessAndFailure
  [ 1] zio.ZIO.$anonfun$onExit$1
  [ 2] zio.ZIO$$Lambda$163.0x0000000800d7b800.apply
  [ 3] zio.ZIO$.$anonfun$uninterruptibleMask$1
  [ 4] zio.ZIO$$$Lambda$164.0x0000000800d7bbd0.apply
  [ 5] zio.ZIO$UpdateRuntimeFlagsWithin$DynamicNoBox.scope
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.evaluateEffect
  [13] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [14] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [15] zio.internal.FiberRuntime.run
  [16] zio.internal.ZScheduler$$anon$4.run

--- 457120 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$$Lambda$1814+0x00000008011f2278
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.LambdaForm$DMH.0x0000000800f88000.newInvokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000800f88800.linkToTargetMethod
  [ 5] zio.ZIO.$anonfun$raceFibersWith$1
  [ 6] zio.ZIO$$Lambda$1801.0x00000008011ee5c0.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.evaluateEffect
  [12] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [13] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [14] zio.internal.FiberRuntime.run
  [15] zio.internal.ZScheduler$$anon$4.run

--- 453976 bytes (0.02%), 2 samples
  [ 0] java.util.HashMap$KeySet
  [ 1] java.util.HashSet.iterator
  [ 2] org.apache.zookeeper.ClientCnxn$EventThread.processEvent
  [ 3] org.apache.zookeeper.ClientCnxn$EventThread.run

--- 453816 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$EvaluationStep$UpdateRuntimeFlags$$anon$28
  [ 1] zio.internal.FiberRuntime.runLoop
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 452312 bytes (0.02%), 5 samples
  [ 0] java.util.HashMap$Node[]
  [ 1] java.util.HashMap.resize
  [ 2] java.util.HashMap.putVal
  [ 3] java.util.HashMap.put
  [ 4] zio.stm.TRef.getOrMakeEntry
  [ 5] zio.stm.TRef.unsafeGet
  [ 6] zio.stm.TSemaphore.$anonfun$releaseN$1
  [ 7] zio.stm.TSemaphore.$anonfun$releaseN$1$adapted
  [ 8] zio.stm.TSemaphore$$Lambda$242.0x0000000800daa048.apply
  [ 9] zio.stm.ZSTM.zio$stm$ZSTM$$run
  [10] zio.stm.ZSTM$internal$.tryCommitSync
  [11] zio.stm.ZSTM$.$anonfun$unsafeAtomically$1
  [12] zio.stm.ZSTM$$$Lambda$189.0x0000000800d8e6a0.apply
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.evaluateEffect
  [16] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [17] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [18] zio.internal.FiberRuntime.run
  [19] zio.internal.ZScheduler$$anon$4.run

--- 449248 bytes (0.02%), 1 sample
  [ 0] java.lang.Long
  [ 1] java.lang.Long.valueOf
  [ 2] org.apache.zookeeper.server.ExpiryQueue.poll
  [ 3] org.apache.zookeeper.server.NIOServerCnxnFactory$ConnectionExpirerThread.run

--- 441048 bytes (0.02%), 4 samples
  [ 0] scala.collection.mutable.ArrayBuilder$ofRef
  [ 1] scala.collection.mutable.ArrayBuilder$.make
  [ 2] zio.ChunkBuilder$$anon$1.addOne
  [ 3] zio.ChunkBuilder$$anon$1.addOne
  [ 4] scala.collection.mutable.Growable.addAll
  [ 5] scala.collection.mutable.Growable.addAll$
  [ 6] zio.ChunkBuilder.addAll
  [ 7] scala.collection.mutable.Growable.$plus$plus$eq
  [ 8] scala.collection.mutable.Growable.$plus$plus$eq$
  [ 9] zio.ChunkBuilder.$plus$plus$eq
  [10] zio.Chunk$.fromIterable
  [11] zio.Chunk$.apply
  [12] zio.Queue$$anon$1.$anonfun$offer$1
  [13] zio.Queue$$anon$1$$Lambda$1854.0x00000008011fce98.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.evaluateEffect
  [18] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [19] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [20] zio.internal.FiberRuntime.run
  [21] zio.internal.ZScheduler$$anon$4.run

--- 434816 bytes (0.02%), 5 samples
  [ 0] scala.collection.immutable.Map$Map4
  [ 1] scala.collection.immutable.Map$Map4.updated
  [ 2] scala.collection.immutable.Map$Map4.updated
  [ 3] zio.FiberRefs.$anonfun$joinAs$3
  [ 4] zio.FiberRefs$$Lambda$1241.0x000000080111dcf0.apply
  [ 5] scala.Option.fold
  [ 6] zio.FiberRefs.$anonfun$joinAs$1
  [ 7] zio.FiberRefs$$Lambda$1236.0x000000080111c000.apply
  [ 8] scala.collection.IterableOnceOps.foldLeft
  [ 9] scala.collection.IterableOnceOps.foldLeft$
  [10] scala.collection.AbstractIterable.foldLeft
  [11] zio.FiberRefs.joinAs
  [12] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [13] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 432952 bytes (0.02%), 3 samples
  [ 0] zio.Exit$Success
  [ 1] java.lang.invoke.VarHandleInts$FieldInstanceReadWrite.compareAndSet
  [ 2] java.lang.invoke.VarHandleGuards.guard_LII_Z
  [ 3] java.util.concurrent.atomic.AtomicBoolean.compareAndSet
  [ 4] zio.internal.FiberRuntime.$anonfun$initiateAsync$1
  [ 5] zio.internal.FiberRuntime.$anonfun$initiateAsync$1$adapted
  [ 6] zio.internal.FiberRuntime$$Lambda$330.0x0000000800dcc150.apply
  [ 7] zio.ZIOCompanionVersionSpecific.$anonfun$asyncInterrupt$3
  [ 8] zio.ZIOCompanionVersionSpecific.$anonfun$asyncInterrupt$3$adapted
  [ 9] zio.ZIOCompanionVersionSpecific$$Lambda$331.0x0000000800dccb70.apply
  [10] zio.internal.FiberRuntime.$anonfun$await$3
  [11] zio.internal.FiberRuntime.$anonfun$await$3$adapted
  [12] zio.internal.FiberRuntime$$Lambda$2543.0x00000008012f07a0.apply
  [13] zio.internal.FiberRuntime.setExitValue
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] zio.internal.ZScheduler$$anon$4.run

--- 432352 bytes (0.02%), 3 samples
  [ 0] java.util.concurrent.SynchronousQueue$TransferStack$SNode
  [ 1] java.util.concurrent.SynchronousQueue$TransferStack.casHead
  [ 2] java.util.concurrent.SynchronousQueue$TransferStack.transfer
  [ 3] java.util.concurrent.SynchronousQueue.offer
  [ 4] java.util.concurrent.ThreadPoolExecutor.execute
  [ 5] zio.internal.DefaultExecutors$$anon$1.submit
  [ 6] zio.Executor.submitOrThrow
  [ 7] zio.internal.FiberRuntime.drainQueueLaterOnExecutor
  [ 8] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 9] zio.internal.FiberRuntime.run
  [10] zio.internal.ZScheduler$$anon$4.run

--- 423328 bytes (0.02%), 4 samples
  [ 0] scala.collection.immutable.$colon$colon
  [ 1] zio.FiberRefs.updatedAs
  [ 2] zio.internal.FiberRuntime.setFiberRef
  [ 3] zio.internal.FiberRuntime.getFiberRefs
  [ 4] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [ 5] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 420984 bytes (0.02%), 3 samples
  [ 0] scala.Tuple2
  [ 1] zio.FiberRefs.updatedAs
  [ 2] zio.internal.FiberRuntime.setFiberRef
  [ 3] zio.internal.FiberRuntime.getFiberRefs
  [ 4] zio.ZIO$unsafe$.makeChildFiber
  [ 5] zio.ZIO$unsafe$.fork
  [ 6] zio.ZIO.$anonfun$forkWithScopeOverride$2
  [ 7] zio.ZIO$$Lambda$317.0x0000000800dc7270.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.evaluateEffect
  [21] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [22] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [23] zio.internal.FiberRuntime.run
  [24] zio.internal.ZScheduler$$anon$4.run

--- 409024 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$$$Lambda$1250+0x000000080111b748
  [ 1] zio.ZIO$$$Lambda$1246.0x000000080111a2c0.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.evaluateEffect
  [ 5] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 6] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 7] zio.internal.FiberRuntime.run
  [ 8] zio.internal.ZScheduler$$anon$4.run

--- 408336 bytes (0.02%), 3 samples
  [ 0] zio.stream.internal.ChannelExecutor$$$Lambda$1611+0x00000008011ab760
  [ 1] zio.stream.internal.ChannelExecutor$.read$1
  [ 2] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$8
  [ 3] zio.stream.internal.ChannelExecutor$$$Lambda$1611.0x00000008011ab760.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.evaluateEffect
  [ 6] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 7] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 8] zio.internal.FiberRuntime.run
  [ 9] zio.internal.ZScheduler$$anon$4.run

--- 405936 bytes (0.02%), 6 samples
  [ 0] zio.stream.internal.ChannelExecutor$Subexecutor$Emit
  [ 1] zio.stream.internal.ChannelExecutor$.read$1
  [ 2] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$8
  [ 3] zio.stream.internal.ChannelExecutor$$$Lambda$1611.0x00000008011ab760.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.evaluateEffect
  [ 6] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 7] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 8] zio.internal.FiberRuntime.run
  [ 9] zio.internal.ZScheduler$$anon$4.run

--- 402336 bytes (0.02%), 4 samples
  [ 0] zio.internal.FiberRuntime$$Lambda$2542+0x00000008012e9d20
  [ 1] zio.internal.FiberRuntime.$anonfun$await$1
  [ 2] zio.internal.FiberRuntime$$Lambda$1223.0x0000000801114d78.apply
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.evaluateEffect
  [ 8] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 9] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [10] zio.internal.FiberRuntime.run
  [11] zio.internal.ZScheduler$$anon$4.run

--- 402248 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$$$Lambda$1248+0x000000080111ac60
  [ 1] zio.ZIO$$$Lambda$1246.0x000000080111a2c0.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.evaluateEffect
  [ 5] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 6] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 7] zio.internal.FiberRuntime.run
  [ 8] zio.internal.ZScheduler$$anon$4.run

--- 400880 bytes (0.02%), 3 samples
  [ 0] scala.collection.immutable.$colon$colon
  [ 1] zio.FiberRefs.updatedAs
  [ 2] zio.internal.FiberRuntime.setFiberRef
  [ 3] zio.ZIO$.$anonfun$shift$1
  [ 4] zio.ZIO$$$Lambda$1260.0x0000000801122708.apply
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 400032 bytes (0.02%), 5 samples
  [ 0] zio.ZIO$Sync
  [ 1] zio.internal.FiberRuntime.runLoop
  [ 2] zio.internal.FiberRuntime.evaluateEffect
  [ 3] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 4] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 5] zio.internal.FiberRuntime.run
  [ 6] zio.internal.ZScheduler$$anon$4.run

--- 398896 bytes (0.02%), 5 samples
  [ 0] java.util.HashMap
  [ 1] zio.stm.ZSTM$internal$.tryCommitSync
  [ 2] zio.stm.ZSTM$.$anonfun$unsafeAtomically$1
  [ 3] zio.stm.ZSTM$$$Lambda$189.0x0000000800d8e6a0.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.evaluateEffect
  [ 7] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 8] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 9] zio.internal.FiberRuntime.run
  [10] zio.internal.ZScheduler$$anon$4.run

--- 396600 bytes (0.02%), 1 sample
  [ 0] java.util.concurrent.ConcurrentHashMap$EntryIterator
  [ 1] java.util.concurrent.ConcurrentHashMap$EntrySetView.iterator
  [ 2] org.apache.kafka.common.metrics.Metrics$ExpireSensorTask.run
  [ 3] java.util.concurrent.Executors$RunnableAdapter.call
  [ 4] java.util.concurrent.FutureTask.runAndReset
  [ 5] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 6] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 7] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 8] java.lang.Thread.run

--- 396496 bytes (0.02%), 3 samples
  [ 0] zio.Promise
  [ 1] zio.Promise$unsafe$.make
  [ 2] zio.Queue$Strategy$BackPressure.$anonfun$handleSurplus$1
  [ 3] zio.Queue$Strategy$BackPressure$$Lambda$2957.0x000000080136d068.apply
  [ 4] zio.ZIO$.$anonfun$fiberIdWith$1
  [ 5] zio.ZIO$$$Lambda$225.0x0000000800da52e8.apply
  [ 6] zio.ZIO$.$anonfun$descriptorWith$1
  [ 7] zio.ZIO$$$Lambda$226.0x0000000800da56b8.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 396472 bytes (0.02%), 5 samples
  [ 0] zio.ZIO$OnSuccess
  [ 1] zio.kafka.consumer.internal.ConsumerAccess$$Lambda$2534.0x00000008012eb7a8.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.evaluateEffect
  [14] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [15] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [16] zio.internal.FiberRuntime.run
  [17] zio.internal.ZScheduler$$anon$4.run

--- 395600 bytes (0.02%), 3 samples
  [ 0] scala.collection.immutable.Map$Map3
  [ 1] scala.collection.immutable.Map$Map3.updated
  [ 2] scala.collection.immutable.Map$Map3.updated
  [ 3] zio.FiberRefs.$anonfun$joinAs$3
  [ 4] zio.FiberRefs$$Lambda$1241.0x000000080111dcf0.apply
  [ 5] scala.Option.fold
  [ 6] zio.FiberRefs.$anonfun$joinAs$1
  [ 7] zio.FiberRefs$$Lambda$1236.0x000000080111c000.apply
  [ 8] scala.collection.IterableOnceOps.foldLeft
  [ 9] scala.collection.IterableOnceOps.foldLeft$
  [10] scala.collection.AbstractIterable.foldLeft
  [11] zio.FiberRefs.joinAs
  [12] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [13] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 393904 bytes (0.02%), 4 samples
  [ 0] kafka.utils.KafkaScheduler$$Lambda$854+0x000000080103c880
  [ 1] java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] kafka.utils.KafkaScheduler.$anonfun$schedule$2
  [ 4] kafka.utils.KafkaScheduler$$Lambda$645.0x0000000800f87d58.run
  [ 5] java.util.concurrent.Executors$RunnableAdapter.call
  [ 6] java.util.concurrent.FutureTask.runAndReset
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run
  [ 8] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 9] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [10] java.lang.Thread.run

--- 391424 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$OnSuccessAndFailure
  [ 1] zio.stream.internal.ChannelExecutor$.read$1
  [ 2] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$8
  [ 3] zio.stream.internal.ChannelExecutor$$$Lambda$1611.0x00000008011ab760.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.evaluateEffect
  [ 6] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 7] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 8] zio.internal.FiberRuntime.run
  [ 9] zio.internal.ZScheduler$$anon$4.run

--- 389024 bytes (0.02%), 5 samples
  [ 0] java.lang.Object[]
  [ 1] zio.stream.ZChannel.interpret$1
  [ 2] zio.stream.ZChannel.$anonfun$runScoped$12
  [ 3] zio.stream.ZChannel$$Lambda$1535.0x0000000801194760.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.evaluateEffect
  [ 7] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 8] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 9] zio.internal.FiberRuntime.run
  [10] zio.internal.ZScheduler$$anon$4.run

--- 386792 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$IfZIO$$$Lambda$1891+0x000000080120c3c8
  [ 1] zio.ZIO$IfZIO$.$anonfun$apply$extension$2
  [ 2] zio.ZIO$IfZIO$$$Lambda$1886.0x0000000801207130.apply
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 383472 bytes (0.02%), 3 samples
  [ 0] java.util.HashMap$EntryIterator
  [ 1] java.util.HashMap.entrySet
  [ 2] zio.stm.ZSTM$internal$.collectTodos
  [ 3] zio.stm.ZSTM$internal$.completeTodos
  [ 4] zio.stm.ZSTM$internal$.tryCommitSync
  [ 5] zio.stm.ZSTM$.$anonfun$unsafeAtomically$1
  [ 6] zio.stm.ZSTM$$$Lambda$189.0x0000000800d8e6a0.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 382656 bytes (0.02%), 4 samples
  [ 0] zio.internal.Stack
  [ 1] zio.stm.ZSTM.zio$stm$ZSTM$$run
  [ 2] zio.stm.ZSTM$internal$.tryCommitSync
  [ 3] zio.stm.ZSTM$.$anonfun$unsafeAtomically$1
  [ 4] zio.stm.ZSTM$$$Lambda$189.0x0000000800d8e6a0.apply
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] zio.internal.ZScheduler$$anon$4.run

--- 380664 bytes (0.02%), 4 samples
  [ 0] scala.Some
  [ 1] scala.collection.immutable.Map$Map4.get
  [ 2] zio.FiberRefs.get
  [ 3] zio.FiberRefs.getOrDefault
  [ 4] zio.internal.FiberRuntime.getFiberRef
  [ 5] zio.internal.FiberRuntime.getCurrentExecutor
  [ 6] zio.internal.FiberRuntime.drainQueueLaterOnExecutor
  [ 7] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 8] zio.internal.FiberRuntime.run
  [ 9] zio.internal.ZScheduler$$anon$4.run

--- 379504 bytes (0.02%), 4 samples
  [ 0] zio.ZIO$$Lambda$136+0x0000000800d683c8
  [ 1] zio.internal.FiberRuntime.runLoop
  [ 2] zio.internal.FiberRuntime.evaluateEffect
  [ 3] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 4] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 5] zio.internal.FiberRuntime.run
  [ 6] zio.internal.ZScheduler$$anon$4.run

--- 379320 bytes (0.02%), 3 samples
  [ 0] zio.Fiber$Status$Suspended
  [ 1] zio.internal.FiberRuntime.getStatus
  [ 2] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 3] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 4] zio.internal.FiberRuntime.run
  [ 5] zio.internal.ZScheduler$$anon$4.run

--- 375880 bytes (0.02%), 4 samples
  [ 0] zio.Fiber$Status$Running
  [ 1] zio.internal.FiberRuntime.runLoop
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.evaluateEffect
  [ 5] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 6] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 7] zio.internal.FiberRuntime.run
  [ 8] zio.internal.ZScheduler$$anon$4.run

--- 371368 bytes (0.02%), 2 samples
  [ 0] zio.ZIO$OnSuccess
  [ 1] zio.ZIO.flatMap
  [ 2] zio.ZIO.flatMap$
  [ 3] zio.ZIO$Sync.flatMap
  [ 4] zio.ZIO$.suspendSucceed
  [ 5] zio.Promise.await
  [ 6] zio.Queue$Strategy$BackPressure.$anonfun$handleSurplus$2
  [ 7] zio.Queue$Strategy$BackPressure$$Lambda$2958.0x000000080136d640.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] zio.internal.ZScheduler$$anon$4.run

--- 370464 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$$Lambda$79+0x0000000800cef778
  [ 1] zio.ZIO.map
  [ 2] zio.ZIO.map$
  [ 3] zio.ZIO$Stateful.map
  [ 4] zio.ZIO.as
  [ 5] zio.ZIO.as$
  [ 6] zio.ZIO$Stateful.as
  [ 7] zio.ZIO.$anonfun$$less$times$1
  [ 8] zio.ZIO$$Lambda$1229.0x0000000801116598.apply
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 370424 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$IfZIO$$$Lambda$1886+0x0000000801207130
  [ 1] zio.ZIO$IfZIO$.apply$extension
  [ 2] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$28
  [ 3] zio.kafka.consumer.internal.Runloop$$Lambda$2596.0x00000008012fdf80.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.evaluateEffect
  [ 6] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 7] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 8] zio.internal.FiberRuntime.run
  [ 9] zio.internal.ZScheduler$$anon$4.run

--- 368752 bytes (0.02%), 4 samples
  [ 0] zio.ZIO$Async
  [ 1] zio.ZIOCompanionVersionSpecific$$Lambda$324.0x0000000800dca860.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.evaluateEffect
  [ 7] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 8] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 9] zio.internal.FiberRuntime.run
  [10] zio.internal.ZScheduler$$anon$4.run

--- 367360 bytes (0.02%), 4 samples
  [ 0] zio.ZIO$$Lambda$136+0x0000000800d683c8
  [ 1] zio.ZIO$$Lambda$79.0x0000000800cef778.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] zio.internal.ZScheduler$$anon$4.run

--- 367328 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$Sync
  [ 1] zio.FiberRef$unsafe$$anon$2$$Lambda$145.0x0000000800d6ae30.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.evaluateEffect
  [ 6] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 7] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 8] zio.internal.FiberRuntime.run
  [ 9] zio.internal.ZScheduler$$anon$4.run

--- 367224 bytes (0.02%), 4 samples
  [ 0] java.lang.Object[]
  [ 1] scala.collection.immutable.BitmapIndexedMapNode.copyAndInsertValue
  [ 2] scala.collection.immutable.BitmapIndexedMapNode.updated
  [ 3] scala.collection.immutable.HashMap.updated
  [ 4] scala.collection.immutable.Map$Map4.updated
  [ 5] scala.collection.immutable.Map$Map4.updated
  [ 6] zio.FiberRefs.updatedAs
  [ 7] zio.internal.FiberRuntime.setFiberRef
  [ 8] zio.internal.FiberRuntime.addInterruptedCause
  [ 9] zio.internal.FiberRuntime.processNewInterruptSignal
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 367120 bytes (0.02%), 3 samples
  [ 0] scala.collection.immutable.$colon$colon
  [ 1] zio.internal.FiberRuntime.$anonfun$await$4
  [ 2] zio.internal.FiberRuntime.$anonfun$await$4$adapted
  [ 3] zio.internal.FiberRuntime$$Lambda$2544.0x00000008012f0b70.apply
  [ 4] zio.internal.FiberRuntime.processStatefulMessage
  [ 5] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 6] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 7] zio.internal.FiberRuntime.run
  [ 8] zio.internal.ZScheduler$$anon$4.run

--- 364512 bytes (0.02%), 4 samples
  [ 0] zio.stream.internal.ChannelExecutor$$$Lambda$1611+0x00000008011ab760
  [ 1] zio.stream.internal.ChannelExecutor$.read$1
  [ 2] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$8
  [ 3] zio.stream.internal.ChannelExecutor$$$Lambda$1611.0x00000008011ab760.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.evaluateEffect
  [ 6] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 7] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 8] zio.internal.FiberRuntime.run
  [ 9] zio.internal.ZScheduler$$anon$4.run

--- 363776 bytes (0.02%), 3 samples
  [ 0] zio.stm.ZSTM$internal$Versioned
  [ 1] java.util.HashMap$EntryIterator.next
  [ 2] java.util.HashMap$EntryIterator.next
  [ 3] zio.stm.ZSTM$internal$.commitJournal
  [ 4] zio.stm.ZSTM$internal$.$anonfun$tryCommitSync$2
  [ 5] zio.stm.ZSTM$internal$.tryCommitSync
  [ 6] zio.stm.ZSTM$.$anonfun$unsafeAtomically$1
  [ 7] zio.stm.ZSTM$$$Lambda$189.0x0000000800d8e6a0.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 357568 bytes (0.02%), 3 samples
  [ 0] java.util.HashMap$Node
  [ 1] java.util.HashMap.putVal
  [ 2] java.util.HashMap.put
  [ 3] zio.stm.TRef.getOrMakeEntry
  [ 4] zio.stm.TRef.unsafeGet
  [ 5] zio.stm.TSemaphore.$anonfun$acquireBetween$1
  [ 6] zio.stm.TSemaphore.$anonfun$acquireBetween$1$adapted
  [ 7] zio.stm.TSemaphore$$Lambda$199.0x0000000800d93930.apply
  [ 8] zio.stm.ZSTM.zio$stm$ZSTM$$run
  [ 9] zio.stm.ZSTM$internal$.tryCommitSync
  [10] zio.stm.ZSTM$.$anonfun$unsafeAtomically$1
  [11] zio.stm.ZSTM$$$Lambda$189.0x0000000800d8e6a0.apply
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] zio.internal.ZScheduler$$anon$4.run

--- 354648 bytes (0.02%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.AbstractStringBuilder.append
  [ 2] java.lang.StringBuilder.append
  [ 3] org.apache.kafka.common.metrics.JmxReporter.getMBeanName
  [ 4] org.apache.kafka.common.metrics.JmxReporter.metricRemoval
  [ 5] org.apache.kafka.common.metrics.Metrics.removeMetric
  [ 6] org.apache.kafka.common.metrics.Metrics.removeSensor
  [ 7] org.apache.kafka.common.network.Selector$SelectorMetrics.close
  [ 8] org.apache.kafka.common.utils.Utils.closeQuietly
  [ 9] org.apache.kafka.common.network.Selector.close
  [10] org.apache.kafka.clients.NetworkClient.close
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.close
  [12] org.apache.kafka.common.utils.Utils.closeQuietly
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.close
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.close
  [15] zio.kafka.consumer.internal.ConsumerAccess$.$anonfun$make$7
  [16] zio.kafka.consumer.internal.ConsumerAccess$$$Lambda$3229.0x00000008013ba7a0.apply$mcV$sp
  [17] scala.runtime.java8.JFunction0$mcV$sp.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 354632 bytes (0.02%), 1 sample
  [ 0] java.lang.Object[]
  [ 1] scala.collection.immutable.BitmapIndexedSetNode.filterImpl
  [ 2] scala.collection.immutable.BitmapIndexedSetNode.filterImpl
  [ 3] scala.collection.immutable.HashSet.filterImpl
  [ 4] scala.collection.immutable.HashSet.filterImpl
  [ 5] scala.collection.StrictOptimizedIterableOps.filter
  [ 6] scala.collection.StrictOptimizedIterableOps.filter$
  [ 7] scala.collection.immutable.HashSet.filter
  [ 8] scala.collection.SetOps.intersect
  [ 9] scala.collection.SetOps.intersect$
  [10] scala.collection.immutable.HashSet.intersect
  [11] scala.collection.immutable.HashSet.intersect
  [12] zio.kafka.consumer.internal.Runloop.resumeAndPausePartitions
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 354568 bytes (0.02%), 1 sample
  [ 0] java.util.HashMap$Node[]
  [ 1] java.util.HashMap.resize
  [ 2] java.util.HashMap.putVal
  [ 3] java.util.HashMap.put
  [ 4] java.util.HashSet.add
  [ 5] java.util.AbstractCollection.addAll
  [ 6] java.util.HashSet.<init>
  [ 7] org.apache.kafka.clients.consumer.internals.SubscriptionState.assignedPartitions
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.assignment
  [ 9] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$8
  [10] zio.kafka.consumer.internal.Runloop$$Lambda$2570.0x00000008012f7860.apply
  [11] zio.ZIO$IfZIO$.$anonfun$apply$3
  [12] zio.ZIO$IfZIO$.$anonfun$apply$3$adapted
  [13] zio.ZIO$IfZIO$$$Lambda$1891.0x000000080120c3c8.apply
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.evaluateEffect
  [19] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [20] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [21] zio.internal.FiberRuntime.run
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [24] java.lang.Thread.run

--- 354552 bytes (0.02%), 1 sample
  [ 0] java.util.stream.ReferencePipeline$2
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.validateOffsetsIfNeeded
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.updateFetchPositions
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded
  [ 4] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 5] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 6] zio.kafka.consumer.internal.Runloop.doPoll
  [ 7] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [ 8] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [ 9] zio.ZIO$.$anonfun$suspend$1
  [10] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [11] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [12] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.evaluateEffect
  [18] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [19] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [20] zio.internal.FiberRuntime.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 354544 bytes (0.02%), 1 sample
  [ 0] java.nio.HeapByteBuffer
  [ 1] org.apache.kafka.common.record.MemoryRecords$$Lambda$2317.0x00000008012a0998.iterator
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher$1.onSuccess
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$1.onSuccess
  [ 4] org.apache.kafka.clients.consumer.internals.RequestFuture.fireSuccess
  [ 5] org.apache.kafka.clients.consumer.internals.RequestFuture.complete
  [ 6] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient$RequestFutureCompletionHandler.fireCompletion
  [ 7] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.firePendingCompletedRequests
  [ 8] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [ 9] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [13] zio.kafka.consumer.internal.Runloop.doPoll
  [14] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [15] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [16] zio.ZIO$.$anonfun$suspend$1
  [17] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [18] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [19] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.runLoop
  [24] zio.internal.FiberRuntime.evaluateEffect
  [25] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [26] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [27] zio.internal.FiberRuntime.run
  [28] java.util.concurrent.ThreadPoolExecutor.runWorker
  [29] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [30] java.lang.Thread.run

--- 354536 bytes (0.02%), 1 sample
  [ 0] scala.collection.immutable.Map$Map4
  [ 1] scala.collection.immutable.Map$Map4.updated
  [ 2] scala.collection.immutable.Map$Map4.updated
  [ 3] zio.FiberRefs.updatedAs
  [ 4] zio.internal.FiberRuntime.setFiberRef
  [ 5] zio.FiberRef$unsafe$$anon$2.$anonfun$set$2
  [ 6] zio.FiberRef$unsafe$$anon$2$$Lambda$1353.0x0000000801156a80.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 354536 bytes (0.02%), 1 sample
  [ 0] scala.collection.immutable.Node[]
  [ 1] scala.collection.immutable.HashMap.iterator
  [ 2] scala.collection.StrictOptimizedIterableOps.partition
  [ 3] scala.collection.StrictOptimizedIterableOps.partition$
  [ 4] scala.collection.immutable.HashMap.partition
  [ 5] zio.kafka.consumer.internal.Runloop.endRevoked
  [ 6] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$11
  [ 7] zio.kafka.consumer.internal.Runloop$$Lambda$2576.0x00000008012f9368.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.evaluateEffect
  [13] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [14] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [15] zio.internal.FiberRuntime.run
  [16] java.util.concurrent.ThreadPoolExecutor.runWorker
  [17] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [18] java.lang.Thread.run

--- 354528 bytes (0.02%), 1 sample
  [ 0] java.util.HashMap$EntryIterator
  [ 1] java.util.HashMap.entrySet
  [ 2] zio.stm.ZSTM$internal$.analyzeJournal
  [ 3] zio.stm.ZSTM$internal$.tryCommitSync
  [ 4] zio.stm.ZSTM$.$anonfun$unsafeAtomically$1
  [ 5] zio.stm.ZSTM$$$Lambda$189.0x0000000800d8e6a0.apply
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.evaluateEffect
  [16] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [17] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [18] zio.internal.FiberRuntime.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 354528 bytes (0.02%), 1 sample
  [ 0] byte[]
  [ 1] java.lang.StringBuilder.toString
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.partitionLagMetricName
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.recordPartitionLag
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.access$2100
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.consumer.internal.Runloop.doPoll
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [13] zio.ZIO$.$anonfun$suspend$1
  [14] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [15] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [16] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 354528 bytes (0.02%), 1 sample
  [ 0] scala.collection.immutable.BitmapIndexedSetNode
  [ 1] scala.collection.immutable.BitmapIndexedSetNode.removed
  [ 2] scala.collection.immutable.BitmapIndexedSetNode.removed
  [ 3] scala.collection.immutable.BitmapIndexedSetNode.removeWithShallowMutations
  [ 4] scala.collection.immutable.HashSet.removedAllWithShallowMutations
  [ 5] scala.collection.immutable.HashSet.diff
  [ 6] scala.collection.immutable.HashSet.removedAll
  [ 7] scala.collection.immutable.HashSet.removedAll
  [ 8] scala.collection.immutable.SetOps.$minus$minus
  [ 9] scala.collection.immutable.SetOps.$minus$minus$
  [10] scala.collection.immutable.AbstractSet.$minus$minus
  [11] zio.kafka.consumer.internal.Runloop.resumeAndPausePartitions
  [12] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [13] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [14] zio.ZIO$.$anonfun$suspend$1
  [15] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [16] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [17] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 354528 bytes (0.02%), 1 sample
  [ 0] scala.collection.immutable.MapKeyValueTupleIterator
  [ 1] scala.collection.immutable.ChampBaseIterator.<init>
  [ 2] scala.collection.immutable.MapKeyValueTupleIterator.<init>
  [ 3] scala.collection.immutable.HashMap.iterator
  [ 4] scala.collection.StrictOptimizedIterableOps.partition
  [ 5] scala.collection.StrictOptimizedIterableOps.partition$
  [ 6] scala.collection.immutable.HashMap.partition
  [ 7] zio.kafka.consumer.internal.Runloop.endRevoked
  [ 8] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$11
  [ 9] zio.kafka.consumer.internal.Runloop$$Lambda$2576.0x00000008012f9368.apply
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 354520 bytes (0.02%), 1 sample
  [ 0] org.apache.kafka.clients.consumer.internals.SubscriptionState$FetchPosition
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 4] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 5] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 6] zio.kafka.consumer.internal.Runloop.doPoll
  [ 7] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [ 8] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [ 9] zio.ZIO$.$anonfun$suspend$1
  [10] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [11] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [12] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.evaluateEffect
  [18] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [19] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [20] zio.internal.FiberRuntime.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 354520 bytes (0.02%), 1 sample
  [ 0] zio.stm.TSemaphore$$Lambda$205+0x0000000800d96e28
  [ 1] zio.stm.TSemaphore.withPermits
  [ 2] zio.stm.TSemaphore.withPermit
  [ 3] zio.Semaphore$$anon$1.withPermit
  [ 4] zio.Ref$Synchronized$$anon$1.modifyZIO
  [ 5] zio.Ref$Synchronized.modify
  [ 6] zio.Ref.getAndSet
  [ 7] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$8
  [ 8] zio.kafka.consumer.internal.Runloop$$Lambda$2570.0x00000008012f7860.apply
  [ 9] zio.ZIO$IfZIO$.$anonfun$apply$3
  [10] zio.ZIO$IfZIO$.$anonfun$apply$3$adapted
  [11] zio.ZIO$IfZIO$$$Lambda$1891.0x000000080120c3c8.apply
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 354520 bytes (0.02%), 1 sample
  [ 0] java.util.ArrayList$Itr
  [ 1] java.util.ArrayList.iterator
  [ 2] java.util.Collections$UnmodifiableCollection$1.<init>
  [ 3] java.util.Collections$UnmodifiableCollection.iterator
  [ 4] zio.Chunk$.fromJavaIterable
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$1
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$2590.0x00000008012fc6e8.apply
  [ 7] scala.collection.ArrayOps$.foreach$extension
  [ 8] zio.Chunk$Arr.foreach
  [ 9] zio.kafka.consumer.internal.Runloop.fulfillRequests
  [10] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$16
  [11] zio.kafka.consumer.internal.Runloop$$Lambda$2585.0x00000008012fb6d8.apply
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.evaluateEffect
  [17] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [18] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [19] zio.internal.FiberRuntime.run
  [20] java.util.concurrent.ThreadPoolExecutor.runWorker
  [21] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [22] java.lang.Thread.run

--- 354520 bytes (0.02%), 1 sample
  [ 0] zio.stm.ZSTM$$$Lambda$189+0x0000000800d8e6a0
  [ 1] zio.stm.ZSTM$Release$$Lambda$220.0x0000000800da38c8.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] java.util.concurrent.ThreadPoolExecutor.runWorker
  [14] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [15] java.lang.Thread.run

--- 354520 bytes (0.02%), 1 sample
  [ 0] byte[]
  [ 1] org.apache.kafka.common.header.internals.RecordHeaders.<init>
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] zio.kafka.consumer.internal.Runloop.doPoll
  [12] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [13] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [14] zio.ZIO$.$anonfun$suspend$1
  [15] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [16] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [17] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 354520 bytes (0.02%), 1 sample
  [ 0] zio.ZIO$ReleaseExit$$Lambda$1274+0x0000000801129fb0
  [ 1] zio.ZIO$ReleaseExit$$Lambda$1261.0x0000000801122f30.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 354512 bytes (0.02%), 1 sample
  [ 0] scala.collection.immutable.SetBuilderImpl
  [ 1] scala.collection.immutable.Set$.from
  [ 2] scala.collection.IterableOnceOps.toSet
  [ 3] scala.collection.IterableOnceOps.toSet$
  [ 4] scala.collection.AbstractIterable.toSet
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [ 7] zio.ZIO$.$anonfun$suspend$1
  [ 8] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [ 9] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [10] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.evaluateEffect
  [16] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [17] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [18] zio.internal.FiberRuntime.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 354512 bytes (0.02%), 1 sample
  [ 0] org.apache.kafka.common.header.internals.RecordHeaders
  [ 1] org.apache.kafka.clients.consumer.internals.Fetcher.parseRecord
  [ 2] org.apache.kafka.clients.consumer.internals.Fetcher.access$3400
  [ 3] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.fetchRecords
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$CompletedFetch.access$1900
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [10] zio.kafka.consumer.internal.Runloop.doPoll
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [13] zio.ZIO$.$anonfun$suspend$1
  [14] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [15] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [16] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.evaluateEffect
  [22] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [23] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [24] zio.internal.FiberRuntime.run
  [25] java.util.concurrent.ThreadPoolExecutor.runWorker
  [26] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [27] java.lang.Thread.run

--- 354512 bytes (0.02%), 1 sample
  [ 0] java.lang.String
  [ 1] java.util.Arrays.copyOfRange
  [ 2] java.lang.StringLatin1.newString
  [ 3] java.lang.StringBuilder.toString
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.partitionLeadMetricName
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.recordPartitionLead
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.access$2200
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.consumer.internal.Runloop.doPoll
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 354512 bytes (0.02%), 1 sample
  [ 0] java.lang.String
  [ 1] java.util.Arrays.copyOfRange
  [ 2] java.lang.StringLatin1.newString
  [ 3] java.lang.StringBuilder.toString
  [ 4] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.partitionLagMetricName
  [ 5] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.recordPartitionLag
  [ 6] org.apache.kafka.clients.consumer.internals.Fetcher$FetchManagerMetrics.access$2100
  [ 7] org.apache.kafka.clients.consumer.internals.Fetcher.fetchRecords
  [ 8] org.apache.kafka.clients.consumer.internals.Fetcher.collectFetch
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll
  [12] zio.kafka.consumer.internal.Runloop.doPoll
  [13] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [14] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [15] zio.ZIO$.$anonfun$suspend$1
  [16] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [17] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [18] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.runLoop
  [23] zio.internal.FiberRuntime.evaluateEffect
  [24] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [25] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [26] zio.internal.FiberRuntime.run
  [27] java.util.concurrent.ThreadPoolExecutor.runWorker
  [28] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [29] java.lang.Thread.run

--- 354512 bytes (0.02%), 1 sample
  [ 0] scala.collection.immutable.HashMapBuilder
  [ 1] scala.collection.MapFactoryDefaults.newSpecificBuilder
  [ 2] scala.collection.MapFactoryDefaults.newSpecificBuilder$
  [ 3] scala.collection.AbstractMap.newSpecificBuilder
  [ 4] scala.collection.StrictOptimizedIterableOps.partition
  [ 5] scala.collection.StrictOptimizedIterableOps.partition$
  [ 6] scala.collection.immutable.HashMap.partition
  [ 7] zio.kafka.consumer.internal.Runloop.endRevoked
  [ 8] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$11
  [ 9] zio.kafka.consumer.internal.Runloop$$Lambda$2576.0x00000008012f9368.apply
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] java.util.concurrent.ThreadPoolExecutor.runWorker
  [19] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [20] java.lang.Thread.run

--- 354512 bytes (0.02%), 1 sample
  [ 0] zio.stm.ZSTM$Release$$Lambda$220+0x0000000800da38c8
  [ 1] zio.stm.ZSTM$Release.$anonfun$apply$8
  [ 2] zio.stm.ZSTM$Release$$Lambda$214.0x0000000800d99f28.apply
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] java.util.concurrent.ThreadPoolExecutor.runWorker
  [15] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [16] java.lang.Thread.run

--- 354512 bytes (0.02%), 1 sample
  [ 0] zio.ZIO$OnSuccess
  [ 1] zio.ZIO$ReleaseExit$$Lambda$1275.0x000000080112a270.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 354512 bytes (0.02%), 1 sample
  [ 0] org.apache.kafka.common.TopicPartition
  [ 1] java.util.concurrent.atomic.AtomicLong.set
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.release
  [ 3] org.apache.kafka.clients.consumer.KafkaConsumer.groupMetadata
  [ 4] zio.kafka.consumer.internal.Runloop.getConsumerGroupMetadataIfAny
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$4
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$2992.0x00000008013777a0.apply
  [ 7] zio.Chunk$Arr.mapChunk
  [ 8] zio.ChunkLike.map
  [ 9] zio.ChunkLike.map$
  [10] zio.Chunk.map
  [11] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$3
  [12] zio.kafka.consumer.internal.Runloop$$Lambda$2991.0x0000000801377268.apply
  [13] zio.ZIO.$anonfun$$times$greater$1
  [14] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.runLoop
  [18] zio.internal.FiberRuntime.runLoop
  [19] zio.internal.FiberRuntime.runLoop
  [20] zio.internal.FiberRuntime.runLoop
  [21] zio.internal.FiberRuntime.runLoop
  [22] zio.internal.FiberRuntime.evaluateEffect
  [23] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [24] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [25] zio.internal.FiberRuntime.run
  [26] java.util.concurrent.ThreadPoolExecutor.runWorker
  [27] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [28] java.lang.Thread.run

--- 354512 bytes (0.02%), 1 sample
  [ 0] zio.ZIO$OnSuccess
  [ 1] zio.ZIO$ReleaseExit$$Lambda$1261.0x0000000801122f30.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] java.util.concurrent.ThreadPoolExecutor.runWorker
  [ 8] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [ 9] java.lang.Thread.run

--- 354504 bytes (0.02%), 1 sample
  [ 0] scala.collection.convert.JavaCollectionWrappers$JSetWrapper
  [ 1] scala.collection.convert.AsScalaConverters.asScala
  [ 2] scala.collection.convert.AsScalaConverters.asScala$
  [ 3] scala.collection.convert.AsScalaExtensions$SetHasAsScala.asScala
  [ 4] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$8
  [ 5] zio.kafka.consumer.internal.Runloop$$Lambda$2570.0x00000008012f7860.apply
  [ 6] zio.ZIO$IfZIO$.$anonfun$apply$3
  [ 7] zio.ZIO$IfZIO$.$anonfun$apply$3$adapted
  [ 8] zio.ZIO$IfZIO$$$Lambda$1891.0x000000080120c3c8.apply
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.evaluateEffect
  [14] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [15] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [16] zio.internal.FiberRuntime.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 354504 bytes (0.02%), 1 sample
  [ 0] java.util.HashSet
  [ 1] org.apache.kafka.clients.consumer.internals.SubscriptionState.assignedPartitions
  [ 2] org.apache.kafka.clients.consumer.KafkaConsumer.assignment
  [ 3] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [ 4] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [ 5] zio.ZIO$.$anonfun$suspend$1
  [ 6] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [ 7] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [ 8] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.evaluateEffect
  [14] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [15] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [16] zio.internal.FiberRuntime.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 354504 bytes (0.02%), 1 sample
  [ 0] zio.stm.ZSTM$internal$Versioned
  [ 1] java.util.HashMap$EntryIterator.next
  [ 2] java.util.HashMap$EntryIterator.next
  [ 3] zio.stm.ZSTM$internal$.commitJournal
  [ 4] zio.stm.ZSTM$internal$.$anonfun$tryCommitSync$2
  [ 5] zio.stm.ZSTM$internal$.tryCommitSync
  [ 6] zio.stm.ZSTM$.$anonfun$unsafeAtomically$1
  [ 7] zio.stm.ZSTM$$$Lambda$189.0x0000000800d8e6a0.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.runLoop
  [16] zio.internal.FiberRuntime.runLoop
  [17] zio.internal.FiberRuntime.evaluateEffect
  [18] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [19] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [20] zio.internal.FiberRuntime.run
  [21] java.util.concurrent.ThreadPoolExecutor.runWorker
  [22] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [23] java.lang.Thread.run

--- 354504 bytes (0.02%), 1 sample
  [ 0] zio.ZIO$$Lambda$244+0x0000000800daa558
  [ 1] zio.Chunk$.fromJavaIterable
  [ 2] zio.kafka.consumer.internal.Runloop.$anonfun$fulfillRequests$1
  [ 3] zio.kafka.consumer.internal.Runloop$$Lambda$2590.0x00000008012fc6e8.apply
  [ 4] scala.collection.ArrayOps$.foreach$extension
  [ 5] zio.Chunk$Arr.foreach
  [ 6] zio.kafka.consumer.internal.Runloop.fulfillRequests
  [ 7] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$16
  [ 8] zio.kafka.consumer.internal.Runloop$$Lambda$2585.0x00000008012fb6d8.apply
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.evaluateEffect
  [14] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [15] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [16] zio.internal.FiberRuntime.run
  [17] java.util.concurrent.ThreadPoolExecutor.runWorker
  [18] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [19] java.lang.Thread.run

--- 354504 bytes (0.02%), 1 sample
  [ 0] zio.Exit$Success
  [ 1] zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1
  [ 2] zio.ZIOCompanionVersionSpecific$$Lambda$363.0x0000000800dd8000.apply
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.evaluateEffect
  [ 8] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 9] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [10] zio.internal.FiberRuntime.run
  [11] java.util.concurrent.ThreadPoolExecutor.runWorker
  [12] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [13] java.lang.Thread.run

--- 354504 bytes (0.02%), 1 sample
  [ 0] scala.collection.convert.JavaCollectionWrappers$SetWrapper
  [ 1] scala.collection.IterableOnceOps.nonEmpty
  [ 2] scala.collection.IterableOnceOps.nonEmpty$
  [ 3] scala.collection.AbstractIterable.nonEmpty
  [ 4] zio.kafka.consumer.internal.Runloop.resumeAndPausePartitions
  [ 5] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$3
  [ 6] zio.kafka.consumer.internal.Runloop$$Lambda$2555.0x00000008012f3968.apply
  [ 7] zio.ZIO$.$anonfun$suspend$1
  [ 8] zio.ZIO$$$Lambda$2541.0x00000008012f03d0.apply
  [ 9] zio.FiberRef$unsafe$$anon$2.$anonfun$getWith$1
  [10] zio.FiberRef$unsafe$$anon$2$$Lambda$1674.0x00000008011be868.apply
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.evaluateEffect
  [16] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [17] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [18] zio.internal.FiberRuntime.run
  [19] java.util.concurrent.ThreadPoolExecutor.runWorker
  [20] java.util.concurrent.ThreadPoolExecutor$Worker.run
  [21] java.lang.Thread.run

--- 354104 bytes (0.02%), 3 samples
  [ 0] java.lang.ref.WeakReference
  [ 1] zio.internal.WeakConcurrentBag.graduate
  [ 2] zio.internal.ZScheduler$$anon$3.run

--- 353864 bytes (0.02%), 3 samples
  [ 0] zio.stream.internal.ChannelExecutor$ChannelState$Effect
  [ 1] zio.stream.internal.ChannelExecutor.run
  [ 2] zio.stream.internal.ChannelExecutor$.read$1
  [ 3] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$8
  [ 4] zio.stream.internal.ChannelExecutor$$$Lambda$1611.0x00000008011ab760.apply
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.evaluateEffect
  [ 7] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 8] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 9] zio.internal.FiberRuntime.run
  [10] zio.internal.ZScheduler$$anon$4.run

--- 351448 bytes (0.02%), 3 samples
  [ 0] scala.Tuple2
  [ 1] zio.FiberRefs.updatedAs
  [ 2] zio.internal.FiberRuntime.setFiberRef
  [ 3] zio.internal.FiberRuntime.getFiberRefs
  [ 4] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [ 5] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 349856 bytes (0.02%), 2 samples
  [ 0] zio.ZIO$$Lambda$1229+0x0000000801116598
  [ 1] zio.ZIO$OnSuccess.$less$times
  [ 2] zio.kafka.consumer.internal.Runloop.doCommit
  [ 3] zio.kafka.consumer.internal.Runloop.$anonfun$handlePoll$32
  [ 4] zio.kafka.consumer.internal.Runloop$$Lambda$2599.0x00000008012fe8d0.apply
  [ 5] zio.ZIO$IfZIO$.$anonfun$apply$3
  [ 6] zio.ZIO$IfZIO$.$anonfun$apply$3$adapted
  [ 7] zio.ZIO$IfZIO$$$Lambda$1891.0x000000080120c3c8.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 345440 bytes (0.02%), 3 samples
  [ 0] zio.stream.internal.ChannelExecutor$$Lambda$1528+0x0000000801192580
  [ 1] zio.stream.internal.ChannelExecutor.run
  [ 2] zio.stream.internal.ChannelExecutor$.read$1
  [ 3] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 4] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 5] zio.ZIO.$anonfun$$times$greater$1
  [ 6] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 345344 bytes (0.02%), 4 samples
  [ 0] zio.ZIO$Stateful
  [ 1] zio.stm.ZSTM$Release$$Lambda$220.0x0000000800da38c8.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.evaluateEffect
  [ 4] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 5] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 6] zio.internal.FiberRuntime.run
  [ 7] zio.internal.ZScheduler$$anon$4.run

--- 344200 bytes (0.02%), 3 samples
  [ 0] scala.collection.immutable.$colon$colon
  [ 1] zio.FiberRefs.updatedAs
  [ 2] zio.internal.FiberRuntime.setFiberRef
  [ 3] zio.internal.FiberRuntime.addInterruptedCause
  [ 4] zio.internal.FiberRuntime.processNewInterruptSignal
  [ 5] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 6] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 7] zio.internal.FiberRuntime.run
  [ 8] zio.internal.ZScheduler$$anon$4.run

--- 343840 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$OnSuccessAndFailure
  [ 1] zio.ZIO.$anonfun$onExit$1
  [ 2] zio.ZIO$$Lambda$163.0x0000000800d7b800.apply
  [ 3] zio.ZIO$.$anonfun$uninterruptibleMask$1
  [ 4] zio.ZIO$$$Lambda$164.0x0000000800d7bbd0.apply
  [ 5] zio.ZIO$UpdateRuntimeFlagsWithin$DynamicNoBox.scope
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 343296 bytes (0.02%), 3 samples
  [ 0] scala.collection.immutable.$colon$colon
  [ 1] zio.FiberRefs.$anonfun$joinAs$3
  [ 2] zio.FiberRefs$$Lambda$1241.0x000000080111dcf0.apply
  [ 3] scala.Option.fold
  [ 4] zio.FiberRefs.$anonfun$joinAs$1
  [ 5] zio.FiberRefs$$Lambda$1236.0x000000080111c000.apply
  [ 6] scala.collection.IterableOnceOps.foldLeft
  [ 7] scala.collection.IterableOnceOps.foldLeft$
  [ 8] scala.collection.AbstractIterable.foldLeft
  [ 9] zio.FiberRefs.joinAs
  [10] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [11] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.evaluateEffect
  [15] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [16] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [17] zio.internal.FiberRuntime.run
  [18] zio.internal.ZScheduler$$anon$4.run

--- 340904 bytes (0.02%), 3 samples
  [ 0] zio.stream.ZChannel$Fold$$$Lambda$1409+0x000000080116d898
  [ 1] zio.stream.ZStream$$$Lambda$1964.0x00000008012213c8.apply
  [ 2] zio.stream.ZChannel.$anonfun$$times$greater$1
  [ 3] zio.stream.ZChannel$$Lambda$1757.0x00000008011df0a0.apply
  [ 4] zio.stream.internal.ChannelExecutor.doneSucceed
  [ 5] zio.stream.internal.ChannelExecutor.run
  [ 6] zio.stream.internal.ChannelExecutor$.read$1
  [ 7] zio.stream.internal.ChannelExecutor$.readUpstream
  [ 8] zio.stream.ZChannel.interpret$2
  [ 9] zio.stream.ZChannel.$anonfun$toPull$12
  [10] zio.stream.ZChannel$$Lambda$1712.0x00000008011cf988.apply
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.evaluateEffect
  [16] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [17] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [18] zio.internal.FiberRuntime.run
  [19] zio.internal.ZScheduler$$anon$4.run

--- 336624 bytes (0.02%), 3 samples
  [ 0] scala.runtime.ObjectRef
  [ 1] zio.stm.ZSTM$internal$.tryCommitSync
  [ 2] zio.stm.ZSTM$.$anonfun$unsafeAtomically$1
  [ 3] zio.stm.ZSTM$$$Lambda$189.0x0000000800d8e6a0.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.runLoop
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.runLoop
  [13] zio.internal.FiberRuntime.runLoop
  [14] zio.internal.FiberRuntime.runLoop
  [15] zio.internal.FiberRuntime.evaluateEffect
  [16] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [17] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [18] zio.internal.FiberRuntime.run
  [19] zio.internal.ZScheduler$$anon$4.run

--- 335144 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$OnSuccess
  [ 1] zio.ZIO.map
  [ 2] zio.ZIO.map$
  [ 3] zio.ZIO$Stateful.map
  [ 4] zio.ZIO.as
  [ 5] zio.ZIO.as$
  [ 6] zio.ZIO$Stateful.as
  [ 7] zio.ZIO.$anonfun$$less$times$1
  [ 8] zio.ZIO$$Lambda$1229.0x0000000801116598.apply
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 334856 bytes (0.02%), 3 samples
  [ 0] zio.stream.ZChannel$Fold$$$Lambda$1409+0x000000080116d898
  [ 1] zio.ZIO$$Lambda$272.0x0000000800db7a40.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.evaluateEffect
  [ 7] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 8] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 9] zio.internal.FiberRuntime.run
  [10] zio.internal.ZScheduler$$anon$4.run

--- 331840 bytes (0.02%), 3 samples
  [ 0] zio.stream.internal.ChannelExecutor$$Lambda$1531+0x0000000801192c10
  [ 1] zio.stream.internal.ChannelExecutor.run
  [ 2] zio.stream.ZChannel.$anonfun$toPull$12
  [ 3] zio.stream.ZChannel$$Lambda$1712.0x00000008011cf988.apply
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 328368 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$Sync
  [ 1] zio.internal.FiberRuntime.await
  [ 2] zio.Fiber.$anonfun$interruptAs$1
  [ 3] zio.Fiber$$Lambda$3001.0x0000000801379e30.apply
  [ 4] zio.ZIO.$anonfun$$times$greater$1
  [ 5] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

--- 327864 bytes (0.02%), 3 samples
  [ 0] scala.collection.immutable.Map$Map4
  [ 1] scala.collection.immutable.Map$Map4.updated
  [ 2] scala.collection.immutable.Map$Map4.updated
  [ 3] zio.FiberRefs.updatedAs
  [ 4] zio.internal.FiberRuntime.setFiberRef
  [ 5] zio.internal.FiberRuntime.getFiberRefs
  [ 6] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [ 7] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.runLoop
  [10] zio.internal.FiberRuntime.evaluateEffect
  [11] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [12] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [13] zio.internal.FiberRuntime.run
  [14] zio.internal.ZScheduler$$anon$4.run

--- 326496 bytes (0.02%), 3 samples
  [ 0] zio.stream.ZChannel$$$Lambda$1858+0x00000008011fd9c8
  [ 1] zio.ZIO$$Lambda$272.0x0000000800db7a40.apply
  [ 2] zio.internal.FiberRuntime.runLoop
  [ 3] zio.internal.FiberRuntime.runLoop
  [ 4] zio.internal.FiberRuntime.runLoop
  [ 5] zio.internal.FiberRuntime.runLoop
  [ 6] zio.internal.FiberRuntime.evaluateEffect
  [ 7] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [ 8] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [ 9] zio.internal.FiberRuntime.run
  [10] zio.internal.ZScheduler$$anon$4.run

--- 326496 bytes (0.02%), 4 samples
  [ 0] zio.stream.ZChannel$$Lambda$2880+0x0000000801350000
  [ 1] jdk.internal.misc.Unsafe.allocateInstance
  [ 2] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 3] java.lang.invoke.LambdaForm$DMH.0x0000000800dac000.newInvokeSpecial
  [ 4] java.lang.invoke.LambdaForm$MH.0x0000000800dac400.linkToTargetMethod
  [ 5] zio.stream.ZChannel.$anonfun$mergeWith$19
  [ 6] zio.stream.ZChannel$$Lambda$2855.0x0000000801348a60.apply
  [ 7] zio.stream.internal.ChannelExecutor.run
  [ 8] zio.stream.internal.ChannelExecutor$.read$1
  [ 9] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$8
  [10] zio.stream.internal.ChannelExecutor$$$Lambda$1611.0x00000008011ab760.apply
  [11] zio.internal.FiberRuntime.runLoop
  [12] zio.internal.FiberRuntime.evaluateEffect
  [13] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [14] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [15] zio.internal.FiberRuntime.run
  [16] zio.internal.ZScheduler$$anon$4.run

--- 325552 bytes (0.02%), 3 samples
  [ 0] zio.ZIO$$Lambda$244+0x0000000800daa558
  [ 1] java.lang.invoke.LambdaForm$DMH.0x0000000800d9cc00.newInvokeSpecial
  [ 2] java.lang.invoke.Invokers$Holder.linkToTargetMethod
  [ 3] zio.stream.internal.ChannelExecutor$.read$1
  [ 4] zio.stream.internal.ChannelExecutor$.$anonfun$readUpstream$10
  [ 5] zio.stream.internal.ChannelExecutor$$$Lambda$1562.0x000000080119e690.apply
  [ 6] zio.ZIO.$anonfun$$times$greater$1
  [ 7] zio.ZIO$$Lambda$244.0x0000000800daa558.apply
  [ 8] zio.internal.FiberRuntime.runLoop
  [ 9] zio.internal.FiberRuntime.evaluateEffect
  [10] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [11] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [12] zio.internal.FiberRuntime.run
  [13] zio.internal.ZScheduler$$anon$4.run

--- 323072 bytes (0.02%), 4 samples
  [ 0] zio.FiberRefs$$Lambda$1236+0x000000080111c000
  [ 1] zio.internal.FiberRuntime._fiberRefs_$eq
  [ 2] zio.internal.FiberRuntime.setFiberRef
  [ 3] zio.internal.FiberRuntime.getFiberRefs
  [ 4] zio.internal.FiberRuntime.$anonfun$inheritAll$1
  [ 5] zio.internal.FiberRuntime$$Lambda$1234.0x0000000801117680.apply
  [ 6] zio.internal.FiberRuntime.runLoop
  [ 7] zio.internal.FiberRuntime.runLoop
  [ 8] zio.internal.FiberRuntime.evaluateEffect
  [ 9] zio.internal.FiberRuntime.evaluateMessageWhileSuspended
  [10] zio.internal.FiberRuntime.drainQueueOnCurrentThread
  [11] zio.internal.FiberRuntime.run
  [12] zio.internal.ZScheduler$$anon$4.run

       bytes  percent  samples  top
  ----------  -------  -------  ---
   316314032   16.50%      220  java.nio.HeapByteBuffer
   259866928   13.56%      282  byte[]
   213211176   11.12%      134  org.apache.kafka.clients.consumer.ConsumerRecord
   185287976    9.67%      122  org.apache.kafka.common.record.DefaultRecord
    88478440    4.62%       50  java.util.ArrayList
    87921520    4.59%      117  java.lang.Object[]
    84684744    4.42%       51  java.util.Arrays$ArrayList
    80537840    4.20%       58  zio.kafka.consumer.OffsetImpl
    79462008    4.15%       52  zio.kafka.consumer.CommittableRecord
    66914208    3.49%       48  org.apache.kafka.common.header.internals.RecordHeaders
    65916808    3.44%       45  org.apache.kafka.common.TopicPartition
    43410888    2.26%       95  scala.Some
    43140184    2.25%       30  zio.kafka.consumer.internal.Runloop$$Lambda$2993+0x0000000801378000
    33023032    1.72%       36  java.util.Optional
    15550936    0.81%       31  zio.ZIO$EvaluationStep[]
    12984888    0.68%      108  zio.ZIO$Sync
    11429416    0.60%      108  zio.ZIO$OnSuccess
     7988248    0.42%        2  scala.collection.immutable.Set$Set2
     7691848    0.40%       41  java.lang.InterruptedException
     6029448    0.31%       16  zio.Exit$Success
     5888328    0.31%       17  zio.ZIO$UpdateRuntimeFlagsWithin$Interruptible
     5709728    0.30%       57  zio.ZIO$OnSuccessAndFailure
     5089288    0.27%       16  zio.ZIO$Stateful
     4442088    0.23%       24  int[]
     4293368    0.22%        2  scala.collection.immutable.MapBuilderImpl
     4290032    0.22%       49  scala.collection.immutable.$colon$colon
     4194304    0.22%        1  zio.kafka.consumer.internal.Runloop$BufferedRecords
     4194304    0.22%        1  zio.FiberRef$unsafe$$anon$2$$Lambda$1353+0x0000000801156a80
     4194304    0.22%        1  java.util.concurrent.ConcurrentHashMap$ValueIterator
     4194304    0.22%        1  java.util.HashMap$EntrySpliterator
     4098976    0.21%        1  org.apache.kafka.common.MetricName
     3804224    0.20%        3  java.util.stream.ReferencePipeline$2
     3734464    0.19%       40  scala.Tuple2
     3457160    0.18%        1  java.util.Collections$UnmodifiableMap
     3289472    0.17%        1  org.apache.kafka.common.message.FetchResponseData$EpochEndOffset
     3288280    0.17%        1  java.util.stream.Collectors$$Lambda$399+0x0000000800e618d8
     3221088    0.17%       31  zio.ChunkBuilder$$anon$1
     3039416    0.16%        3  zio.Exit$$Lambda$3174+0x00000008013a9798
     2743376    0.14%       27  zio.Chunk$AnyRefArray
     2602544    0.14%       29  zio.stream.ZChannel$Fold$K
     2475504    0.13%       30  java.util.concurrent.ConcurrentLinkedQueue$Node
     2470016    0.13%       24  scala.collection.immutable.Map$Map4
     2387528    0.12%       24  zio.ZIO$EvaluationStep$UpdateRuntimeFlags$$anon$28
     2255920    0.12%       10  java.util.HashMap
     2188296    0.11%       26  java.util.HashMap$Node
     2153056    0.11%       23  java.util.HashMap$EntryIterator
     1999200    0.10%       20  zio.Chunk$Slice
     1918920    0.10%       20  java.lang.Long
     1861992    0.10%       20  zio.stream.internal.ChannelExecutor$ChannelState$Read
     1774512    0.09%       17  zio.Fiber$Status$Running
     1723880    0.09%        9  java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1
     1698752    0.09%       21  java.lang.String
     1685752    0.09%       16  scala.collection.mutable.ArrayBuilder$ofRef
     1674776    0.09%       18  zio.ZIO$UpdateRuntimeFlagsWithin$DynamicNoBox
     1673328    0.09%       16  scala.collection.immutable.Map$Map3
     1649248    0.09%        7  java.util.concurrent.LinkedBlockingQueue$Itr
     1620536    0.08%       16  zio.stream.ZChannel$Fold$$$Lambda$1409+0x000000080116d898
     1538168    0.08%       14  zio.ZIO$$Lambda$79+0x0000000800cef778
     1448176    0.08%       13  zio.internal.ReifyStack$Trampoline
     1444856    0.08%       16  java.util.HashMap$KeyIterator
     1379176    0.07%       16  zio.ZIO$$Lambda$136+0x0000000800d683c8
     1344816    0.07%       20  java.lang.Integer
     1254120    0.07%       12  zio.stream.internal.ChannelExecutor$$$Lambda$1562+0x000000080119e690
     1231832    0.06%       16  zio.stream.ZChannel$Fold
     1221048    0.06%       13  java.util.concurrent.atomic.AtomicBoolean
     1213264    0.06%       12  zio.internal.FiberRuntime$$Lambda$330+0x0000000800dcc150
     1210192    0.06%        9  zio.ZIO$$Lambda$244+0x0000000800daa558
     1174560    0.06%       12  zio.stream.internal.ChannelExecutor$$Lambda$1607+0x00000008011aa930
     1162128    0.06%       11  zio.ZIO$$Lambda$163+0x0000000800d7b800
     1160080    0.06%       13  zio.stream.internal.ChannelExecutor$$Lambda$1605+0x00000008011aa190
     1144696    0.06%       11  zio.stream.internal.ChannelExecutor$$Lambda$1531+0x0000000801192c10
     1132928    0.06%       11  zio.stream.internal.ChannelExecutor$$$Lambda$1611+0x00000008011ab760
     1124544    0.06%       11  zio.ZIO$$$Lambda$164+0x0000000800d7bbd0
     1112448    0.06%       12  zio.ZIO$Async
     1051184    0.05%       17  zio.internal.FiberMessage$Resume
      977328    0.05%       10  zio.ZIO$$Lambda$167+0x0000000800d81e70
      976152    0.05%        9  zio.internal.FiberRuntime
      964904    0.05%       11  zio.FiberRefs
      959360    0.05%       11  zio.ZIO$$Lambda$329+0x0000000800dcb730
      917872    0.05%        9  zio.stm.ZSTM$internal$Entry$$anon$4
      909664    0.05%        8  zio.stream.ZChannel$$Lambda$1757+0x00000008011df0a0
      907096    0.05%       46  java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode
      905960    0.05%        9  zio.stream.ZChannel$Emit
      904992    0.05%        8  java.util.HashMap$Node[]
      903568    0.05%        8  zio.ZIO$$Lambda$166+0x0000000800d81aa0
      753408    0.04%        8  zio.FiberId$Runtime
      738448    0.04%        8  scala.runtime.LazyRef
      723040    0.04%        7  zio.stream.internal.ChannelExecutor$$$Lambda$1610+0x00000008011ab390
      718280    0.04%        4  zio.stm.ZSTM$internal$Versioned
      698664    0.04%        4  zio.stm.ZSTM$$$Lambda$189+0x0000000800d8e6a0
      694952    0.04%        8  zio.ZIO$OnFailure
      687216    0.04%        6  zio.Promise
      659520    0.03%        4  zio.stm.TSemaphore$$Lambda$205+0x0000000800d96e28
      659320    0.03%        8  zio.internal.Stack
      657688    0.03%        3  org.apache.zookeeper.server.DataTree$ProcessTxnResult
      645504    0.03%        5  zio.stream.internal.ChannelExecutor$ChannelState$Effect
      643464    0.03%        3  java.util.concurrent.locks.AbstractQueuedSynchronizer$SharedNode
      630904    0.03%        6  scala.runtime.ObjectRef
      626344    0.03%        6  zio.stream.internal.ChannelExecutor$$Lambda$1738+0x00000008011d8000
      616720    0.03%        6  zio.ZIOCompanionVersionSpecific$$Lambda$331+0x0000000800dccb70
      589264    0.03%        6  zio.Promise$$Lambda$323+0x0000000800dc9b28
      543880    0.03%        4  zio.ZIO$$Lambda$1814+0x00000008011f2278
      542544    0.03%        5  zio.kafka.consumer.internal.ConsumerAccess$$Lambda$2531+0x00000008012ea8c0
      537528    0.03%        6  java.util.concurrent.atomic.AtomicReference
      523376    0.03%        5  zio.ZIO$$$Lambda$226+0x0000000800da56b8
      521544    0.03%        4  java.util.WeakHashMap$Entry
      513560    0.03%        6  zio.ZIOCompanionVersionSpecific$$Lambda$325+0x0000000800dcab20
      507896    0.03%       24  kafka.server.KafkaRequestHandler$$Lambda$1155+0x00000008010eb378
      507040    0.03%        6  zio.FiberRef$unsafe$$anon$2$$Lambda$145+0x0000000800d6ae30
      498720    0.03%        5  zio.Promise$internal$Pending
      496968    0.03%        4  zio.Fiber$Descriptor
      490432    0.03%        4  zio.stm.ZSTM$Release
      481480    0.03%        4  zio.ZIO$IfZIO$$$Lambda$1891+0x000000080120c3c8
      476544    0.02%        5  scala.collection.mutable.HashMap$Node[]
      467672    0.02%        4  zio.ZIO$IfZIO$$$Lambda$1886+0x0000000801207130
      460448    0.02%        4  zio.ZIO$$Lambda$1857+0x00000008011fd6e8
      457600    0.02%        5  zio.stream.internal.ChannelExecutor$$Lambda$1528+0x0000000801192580
      453976    0.02%        2  java.util.HashMap$KeySet
      450456    0.02%        5  zio.stream.ZStream$$$Lambda$1964+0x00000008012213c8
      449048    0.02%        5  zio.Promise$$Lambda$332+0x0000000800dccf40
      447552    0.02%        7  java.util.ArrayList$Itr
      436136    0.02%        4  zio.stream.ZChannel$$$Lambda$1858+0x00000008011fd9c8
      435280    0.02%        4  zio.ZIO$$Lambda$1229+0x0000000801116598
      434624    0.02%        4  zio.stream.ZChannel$$Lambda$1875+0x0000000801202040
      432352    0.02%        3  java.util.concurrent.SynchronousQueue$TransferStack$SNode
      429760    0.02%        4  zio.ZIO$$Lambda$1153+0x00000008010e9260
      410544    0.02%        5  zio.ZIO$$Lambda$241+0x0000000800da9c78
      409024    0.02%        3  zio.ZIO$$$Lambda$1250+0x000000080111b748
      407000    0.02%        4  zio.Queue$$anon$1$$Lambda$1668+0x00000008011bd5c8
      406256    0.02%        4  zio.internal.PinchableArray
      405936    0.02%        6  zio.stream.internal.ChannelExecutor$Subexecutor$Emit
      404384    0.02%        5  zio.internal.FiberRuntime$$Lambda$2542+0x00000008012e9d20
      402248    0.02%        3  zio.ZIO$$$Lambda$1248+0x000000080111ac60
      400592    0.02%        4  zio.Queue$$anon$1$$Lambda$1854+0x00000008011fce98
      400200    0.02%        3  zio.ZIO$EvaluationStep$UpdateTrace
      396600    0.02%        1  java.util.concurrent.ConcurrentHashMap$EntryIterator
      395752    0.02%        5  zio.ZIO$$Lambda$254+0x0000000800dafb60
      393904    0.02%        4  kafka.utils.KafkaScheduler$$Lambda$854+0x000000080103c880
      383960    0.02%        4  zio.ZIO$$$Lambda$225+0x0000000800da52e8
      379320    0.02%        3  zio.Fiber$Status$Suspended
      375712    0.02%        4  scala.runtime.BooleanRef
      371048    0.02%        6  scala.collection.mutable.Stack
      359232    0.02%        5  scala.collection.immutable.ArraySeq$ofRef
      358624    0.02%        3  zio.stream.ZStream$$Lambda$1872+0x00000008012014b0
      356192    0.02%        4  zio.ZIO$$Lambda$208+0x0000000800d987a8
      354536    0.02%        1  scala.collection.immutable.Node[]
      354528    0.02%        1  scala.collection.immutable.MapKeyValueTupleIterator
      354528    0.02%        1  scala.collection.immutable.BitmapIndexedSetNode
      354520    0.02%        1  org.apache.kafka.clients.consumer.internals.SubscriptionState$FetchPosition
      354520    0.02%        1  zio.ZIO$ReleaseExit$$Lambda$1274+0x0000000801129fb0
      354512    0.02%        1  scala.collection.immutable.SetBuilderImpl
      354512    0.02%        1  scala.collection.immutable.HashMapBuilder
      354512    0.02%        1  zio.stm.ZSTM$Release$$Lambda$220+0x0000000800da38c8
      354504    0.02%        1  java.util.HashSet
      354504    0.02%        1  scala.collection.convert.JavaCollectionWrappers$JSetWrapper
      354504    0.02%        1  scala.collection.convert.JavaCollectionWrappers$SetWrapper
      354104    0.02%        3  java.lang.ref.WeakReference
      350144    0.02%        4  zio.internal.FiberRuntime$$Lambda$2543+0x00000008012f07a0
      336504    0.02%        3  zio.ZIO$$Lambda$1644+0x00000008011b4180
      333344    0.02%        5  zio.ZIOCompanionVersionSpecific$$Lambda$324+0x0000000800dca860
      332080    0.02%        3  zio.internal.FiberRuntime$$Lambda$2540+0x00000008012f0000
      328408    0.02%        3  zio.Promise$$Lambda$322+0x0000000800dc9758
      327072    0.02%        4  zio.kafka.consumer.internal.State
      326496    0.02%        4  zio.stream.ZChannel$$Lambda$2880+0x0000000801350000
      323072    0.02%        4  zio.FiberRefs$$Lambda$1236+0x000000080111c000
      321512    0.02%        3  scala.Function1$$Lambda$203+0x0000000800d96798
      304304    0.02%        3  zio.stream.ZChannel$$Lambda$1765+0x00000008011e27d0
      295360    0.02%        3  zio.Cause$Interrupt
      294616    0.02%        3  scala.util.Left
      290032    0.02%        3  zio.stream.ZChannel$$Lambda$3023+0x0000000801385688
      286672    0.01%        3  zio.Queue$$anon$1$$Lambda$1673+0x00000008011be2e8
      282312    0.01%        2  zio.ZIO$$Lambda$313+0x0000000800dc5378
      282184    0.01%        3  zio.Fiber$$Lambda$1228+0x00000008011162d8
      277632    0.01%       11  jdk.internal.org.objectweb.asm.MethodWriter
      272568    0.01%        2  zio.ZIO$$Lambda$317+0x0000000800dc7270
      270704    0.01%        3  zio.internal.FiberRuntime$$Lambda$3000+0x0000000801379b50
      264824    0.01%        1  scala.collection.MapOps$$anon$1
      263640    0.01%        3  scala.collection.immutable.HashMap
      261008    0.01%        3  zio.ZIO$$Lambda$1778+0x00000008011e5b60
      260576    0.01%        5  java.lang.Double
      257528    0.01%        3  zio.Exit$Failure
      256744    0.01%        2  zio.stm.ZSTM$Release$$Lambda$207+0x0000000800d977e0
      253880    0.01%        2  zio.stream.ZStream$$Lambda$1870+0x0000000801200a58
      248192    0.01%        4  zio.internal.FiberRuntime$$Lambda$2545+0x00000008012f13b0
      244880    0.01%        2  zio.ZIOCompanionVersionSpecific$$Lambda$326+0x0000000800dcaef0
      244656    0.01%        2  scala.collection.IndexedSeqView$IndexedSeqViewIterator
      243912    0.01%        2  zio.stream.ZPipeline$$$Lambda$2487+0x00000008012e0a60
      242656    0.01%        2  zio.stm.ZSTM$$Lambda$201+0x0000000800d96000
      239632    0.01%        3  zio.ZIO$$$Lambda$1253+0x0000000801120000
      237584    0.01%        2  zio.ZIO$YieldNow
      237584    0.01%        2  zio.stream.ZPipeline$$$Lambda$2485+0x00000008012e02c0
      235560    0.01%        2  scala.util.Right
      235104    0.01%        2  zio.Dequeue$$Lambda$1656+0x00000008011b6840
      234104    0.01%        2  zio.Chunk$Singleton
      233488    0.01%        2  zio.stream.ZChannel$$Lambda$1764+0x00000008011e22a8
      233176    0.01%        1  zio.ZIO$$$Lambda$1254+0x0000000801120700
      229408    0.01%        2  zio.Promise$$anon$1
      229280    0.01%        2  zio.internal.FiberRuntime$$Lambda$1223+0x0000000801114d78
      228432    0.01%        2  scala.collection.ArrayOps$ArrayIterator
      226968    0.01%        2  zio.kafka.consumer.internal.Runloop$$Lambda$1881+0x0000000801203810
