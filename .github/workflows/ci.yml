name: CI

on:
  pull_request:
  push:
    branches: ['master', 'series/0.x']
  release:
    types:
      - published

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Setup Java
        uses: actions/setup-java@v2.5.0
        with:
          distribution: temurin
          java-version: 17
          check-latest: true
      - name: Lint code
        run: sbt check

  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        java: [ '8', '11', '17' ]
        scala: [ '2.12.17', '2.13.8', '3.1.3' ]
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Setup Java
        uses: actions/setup-java@v2.5.0
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          check-latest: true
      - name: Run tests
        run: sbt ++${{ matrix.scala }}! test

  website:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.1.0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Check Document Generation
        run: sbt docs/compileDocs

  publish:
    runs-on: ubuntu-20.04
    needs: [lint, test, website]
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Setup Java
        uses: actions/setup-java@v2.5.0
        with:
          distribution: temurin
          java-version: 17
          check-latest: true
      - name: Release artifacts
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
